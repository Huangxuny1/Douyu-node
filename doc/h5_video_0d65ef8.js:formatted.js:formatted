var H5PlayerVideoLib = function(e) {
    function webpackJsonpCallback(t) {
        for (var i, o, a = t[0], s = t[1], d = 0, u = []; d < a.length; d++)
            o = a[d],
            Object.prototype.hasOwnProperty.call(r, o) && r[o] && u.push(r[o][0]),
            r[o] = 0;
        for (i in s)
            Object.prototype.hasOwnProperty.call(s, i) && (e[i] = s[i]);
        for (n && n(t); u.length; )
            u.shift()()
    }
    var t = {}
      , r = {
        1: 0
    };
    function __webpack_require__(r) {
        if (t[r])
            return t[r].exports;
        var i = t[r] = {
            i: r,
            l: !1,
            exports: {}
        };
        return e[r].call(i.exports, i, i.exports, __webpack_require__),
        i.l = !0,
        i.exports
    }
    __webpack_require__.e = function requireEnsure(e) {
        var t = []
          , i = r[e];
        if (0 !== i)
            if (i)
                t.push(i[2]);
            else {
                var o = new Promise(function(t, o) {
                    i = r[e] = [t, o]
                }
                );
                t.push(i[2] = o);
                var a, n = document.createElement("script");
                n.charset = "utf-8",
                n.timeout = 120,
                __webpack_require__.nc && n.setAttribute("nonce", __webpack_require__.nc),
                n.src = function jsonpScriptSrc(e) {
                    return __webpack_require__.p + "js/player_first/" + ({
                        0: "3.1.1.3_11_whprelease.js",
                        2: "kiwi.min.js",
                        3: "qvbp2p_douyu_v1.0.0.js"
                    }[e] || e) + "_" + {
                        0: "4dab000",
                        2: "9c11ba3",
                        3: "01d9e6c"
                    }[e] + ".js"
                }(e);
                var s = new Error;
                a = function(t) {
                    n.onerror = n.onload = null,
                    clearTimeout(d);
                    var i = r[e];
                    if (0 !== i) {
                        if (i) {
                            var o = t && ("load" === t.type ? "missing" : t.type)
                              , a = t && t.target && t.target.src;
                            s.message = "Loading chunk " + e + " failed.\n(" + o + ": " + a + ")",
                            s.name = "ChunkLoadError",
                            s.type = o,
                            s.request = a,
                            i[1](s)
                        }
                        r[e] = void 0
                    }
                }
                ;
                var d = setTimeout(function() {
                    a({
                        type: "timeout",
                        target: n
                    })
                }, 12e4);
                n.onerror = n.onload = a,
                document.head.appendChild(n)
            }
        return Promise.all(t)
    }
    ,
    __webpack_require__.m = e,
    __webpack_require__.c = t,
    __webpack_require__.d = function(e, t, r) {
        __webpack_require__.o(e, t) || Object.defineProperty(e, t, {
            enumerable: !0,
            get: r
        })
    }
    ,
    __webpack_require__.r = function(e) {
        "undefined" !== typeof Symbol && Symbol.toStringTag && Object.defineProperty(e, Symbol.toStringTag, {
            value: "Module"
        }),
        Object.defineProperty(e, "__esModule", {
            value: !0
        })
    }
    ,
    __webpack_require__.t = function(e, t) {
        if (1 & t && (e = __webpack_require__(e)),
        8 & t)
            return e;
        if (4 & t && "object" === typeof e && e && e.__esModule)
            return e;
        var r = Object.create(null);
        if (__webpack_require__.r(r),
        Object.defineProperty(r, "default", {
            enumerable: !0,
            value: e
        }),
        2 & t && "string" != typeof e)
            for (var i in e)
                __webpack_require__.d(r, i, function(t) {
                    return e[t]
                }
                .bind(null, i));
        return r
    }
    ,
    __webpack_require__.n = function(e) {
        var t = e && e.__esModule ? function getDefault() {
            return e.default
        }
        : function getModuleExports() {
            return e
        }
        ;
        return __webpack_require__.d(t, "a", t),
        t
    }
    ,
    __webpack_require__.o = function(e, t) {
        return Object.prototype.hasOwnProperty.call(e, t)
    }
    ,
    __webpack_require__.p = "https://shark2.douyucdn.cn/front-publish/live-master/",
    __webpack_require__.oe = function(e) {
        throw console.error(e),
        e
    }
    ;
    var i = window.shark_player_first_jsonp = window.shark_player_first_jsonp || []
      , o = i.push.bind(i);
    i.push = webpackJsonpCallback,
    i = i.slice();
    for (var a = 0; a < i.length; a++)
        webpackJsonpCallback(i[a]);
    var n = o;
    return __webpack_require__(__webpack_require__.s = "1c1a3")
}({
    "09565": function(e, t, r) {
        "use strict";
        var i, o = "object" === typeof Reflect ? Reflect : null, a = o && "function" === typeof o.apply ? o.apply : function ReflectApply(e, t, r) {
            return Function.prototype.apply.call(e, t, r)
        }
        ;
        i = o && "function" === typeof o.ownKeys ? o.ownKeys : Object.getOwnPropertySymbols ? function ReflectOwnKeys(e) {
            return Object.getOwnPropertyNames(e).concat(Object.getOwnPropertySymbols(e))
        }
        : function ReflectOwnKeys(e) {
            return Object.getOwnPropertyNames(e)
        }
        ;
        var n = Number.isNaN || function NumberIsNaN(e) {
            return e !== e
        }
        ;
        function EventEmitter() {
            EventEmitter.init.call(this)
        }
        e.exports = EventEmitter,
        EventEmitter.EventEmitter = EventEmitter,
        EventEmitter.prototype._events = void 0,
        EventEmitter.prototype._eventsCount = 0,
        EventEmitter.prototype._maxListeners = void 0;
        var s = 10;
        function $getMaxListeners(e) {
            return void 0 === e._maxListeners ? EventEmitter.defaultMaxListeners : e._maxListeners
        }
        function _addListener(e, t, r, i) {
            var o, a, n;
            if ("function" !== typeof r)
                throw new TypeError('The "listener" argument must be of type Function. Received type ' + typeof r);
            if (void 0 === (a = e._events) ? (a = e._events = Object.create(null),
            e._eventsCount = 0) : (void 0 !== a.newListener && (e.emit("newListener", t, r.listener ? r.listener : r),
            a = e._events),
            n = a[t]),
            void 0 === n)
                n = a[t] = r,
                ++e._eventsCount;
            else if ("function" === typeof n ? n = a[t] = i ? [r, n] : [n, r] : i ? n.unshift(r) : n.push(r),
            (o = $getMaxListeners(e)) > 0 && n.length > o && !n.warned) {
                n.warned = !0;
                var s = new Error("Possible EventEmitter memory leak detected. " + n.length + " " + String(t) + " listeners added. Use emitter.setMaxListeners() to increase limit");
                s.name = "MaxListenersExceededWarning",
                s.emitter = e,
                s.type = t,
                s.count = n.length,
                function ProcessEmitWarning(e) {
                    console && console.warn && console.warn(e)
                }(s)
            }
            return e
        }
        function _onceWrap(e, t, r) {
            var i = {
                fired: !1,
                wrapFn: void 0,
                target: e,
                type: t,
                listener: r
            }
              , o = function onceWrapper() {
                for (var e = [], t = 0; t < arguments.length; t++)
                    e.push(arguments[t]);
                this.fired || (this.target.removeListener(this.type, this.wrapFn),
                this.fired = !0,
                a(this.listener, this.target, e))
            }
            .bind(i);
            return o.listener = r,
            i.wrapFn = o,
            o
        }
        function _listeners(e, t, r) {
            var i = e._events;
            if (void 0 === i)
                return [];
            var o = i[t];
            return void 0 === o ? [] : "function" === typeof o ? r ? [o.listener || o] : [o] : r ? function unwrapListeners(e) {
                for (var t = new Array(e.length), r = 0; r < t.length; ++r)
                    t[r] = e[r].listener || e[r];
                return t
            }(o) : arrayClone(o, o.length)
        }
        function listenerCount(e) {
            var t = this._events;
            if (void 0 !== t) {
                var r = t[e];
                if ("function" === typeof r)
                    return 1;
                if (void 0 !== r)
                    return r.length
            }
            return 0
        }
        function arrayClone(e, t) {
            for (var r = new Array(t), i = 0; i < t; ++i)
                r[i] = e[i];
            return r
        }
        Object.defineProperty(EventEmitter, "defaultMaxListeners", {
            enumerable: !0,
            get: function() {
                return s
            },
            set: function(e) {
                if ("number" !== typeof e || e < 0 || n(e))
                    throw new RangeError('The value of "defaultMaxListeners" is out of range. It must be a non-negative number. Received ' + e + ".");
                s = e
            }
        }),
        EventEmitter.init = function() {
            void 0 !== this._events && this._events !== Object.getPrototypeOf(this)._events || (this._events = Object.create(null),
            this._eventsCount = 0),
            this._maxListeners = this._maxListeners || void 0
        }
        ,
        EventEmitter.prototype.setMaxListeners = function setMaxListeners(e) {
            if ("number" !== typeof e || e < 0 || n(e))
                throw new RangeError('The value of "n" is out of range. It must be a non-negative number. Received ' + e + ".");
            return this._maxListeners = e,
            this
        }
        ,
        EventEmitter.prototype.getMaxListeners = function getMaxListeners() {
            return $getMaxListeners(this)
        }
        ,
        EventEmitter.prototype.emit = function emit(e) {
            for (var t = [], r = 1; r < arguments.length; r++)
                t.push(arguments[r]);
            var i = "error" === e
              , o = this._events;
            if (void 0 !== o)
                i = i && void 0 === o.error;
            else if (!i)
                return !1;
            if (i) {
                var n;
                if (t.length > 0 && (n = t[0]),
                n instanceof Error)
                    throw n;
                var s = new Error("Unhandled error." + (n ? " (" + n.message + ")" : ""));
                throw s.context = n,
                s
            }
            var d = o[e];
            if (void 0 === d)
                return !1;
            if ("function" === typeof d)
                a(d, this, t);
            else {
                var u = d.length
                  , l = arrayClone(d, u);
                for (r = 0; r < u; ++r)
                    a(l[r], this, t)
            }
            return !0
        }
        ,
        EventEmitter.prototype.addListener = function addListener(e, t) {
            return _addListener(this, e, t, !1)
        }
        ,
        EventEmitter.prototype.on = EventEmitter.prototype.addListener,
        EventEmitter.prototype.prependListener = function prependListener(e, t) {
            return _addListener(this, e, t, !0)
        }
        ,
        EventEmitter.prototype.once = function once(e, t) {
            if ("function" !== typeof t)
                throw new TypeError('The "listener" argument must be of type Function. Received type ' + typeof t);
            return this.on(e, _onceWrap(this, e, t)),
            this
        }
        ,
        EventEmitter.prototype.prependOnceListener = function prependOnceListener(e, t) {
            if ("function" !== typeof t)
                throw new TypeError('The "listener" argument must be of type Function. Received type ' + typeof t);
            return this.prependListener(e, _onceWrap(this, e, t)),
            this
        }
        ,
        EventEmitter.prototype.removeListener = function removeListener(e, t) {
            var r, i, o, a, n;
            if ("function" !== typeof t)
                throw new TypeError('The "listener" argument must be of type Function. Received type ' + typeof t);
            if (void 0 === (i = this._events))
                return this;
            if (void 0 === (r = i[e]))
                return this;
            if (r === t || r.listener === t)
                0 === --this._eventsCount ? this._events = Object.create(null) : (delete i[e],
                i.removeListener && this.emit("removeListener", e, r.listener || t));
            else if ("function" !== typeof r) {
                for (o = -1,
                a = r.length - 1; a >= 0; a--)
                    if (r[a] === t || r[a].listener === t) {
                        n = r[a].listener,
                        o = a;
                        break
                    }
                if (o < 0)
                    return this;
                0 === o ? r.shift() : function spliceOne(e, t) {
                    for (; t + 1 < e.length; t++)
                        e[t] = e[t + 1];
                    e.pop()
                }(r, o),
                1 === r.length && (i[e] = r[0]),
                void 0 !== i.removeListener && this.emit("removeListener", e, n || t)
            }
            return this
        }
        ,
        EventEmitter.prototype.off = EventEmitter.prototype.removeListener,
        EventEmitter.prototype.removeAllListeners = function removeAllListeners(e) {
            var t, r, i;
            if (void 0 === (r = this._events))
                return this;
            if (void 0 === r.removeListener)
                return 0 === arguments.length ? (this._events = Object.create(null),
                this._eventsCount = 0) : void 0 !== r[e] && (0 === --this._eventsCount ? this._events = Object.create(null) : delete r[e]),
                this;
            if (0 === arguments.length) {
                var o, a = Object.keys(r);
                for (i = 0; i < a.length; ++i)
                    "removeListener" !== (o = a[i]) && this.removeAllListeners(o);
                return this.removeAllListeners("removeListener"),
                this._events = Object.create(null),
                this._eventsCount = 0,
                this
            }
            if ("function" === typeof (t = r[e]))
                this.removeListener(e, t);
            else if (void 0 !== t)
                for (i = t.length - 1; i >= 0; i--)
                    this.removeListener(e, t[i]);
            return this
        }
        ,
        EventEmitter.prototype.listeners = function listeners(e) {
            return _listeners(this, e, !0)
        }
        ,
        EventEmitter.prototype.rawListeners = function rawListeners(e) {
            return _listeners(this, e, !1)
        }
        ,
        EventEmitter.listenerCount = function(e, t) {
            return "function" === typeof e.listenerCount ? e.listenerCount(t) : listenerCount.call(e, t)
        }
        ,
        EventEmitter.prototype.listenerCount = listenerCount,
        EventEmitter.prototype.eventNames = function eventNames() {
            return this._eventsCount > 0 ? i(this._events) : []
        }
    },
    "0fa6e": function(e, t, r) {
        e.exports = r("73f2f")
    },
    "1c1a3": function(e, t, r) {
        "use strict";
        r.r(t),
        r.d(t, "getVideo", function() {
            return getVideo
        });
        var i = {};
        r.r(i),
        r.d(i, "getData", function() {
            return getData
        }),
        r.d(i, "setEnterPlay", function() {
            return setEnterPlay
        }),
        r.d(i, "changeVolumeByKeyboard", function() {
            return changeVolumeByKeyboard
        }),
        r.d(i, "setVideoReady", function() {
            return setVideoReady
        }),
        r.d(i, "P2PRollback", function() {
            return P2PRollback
        }),
        r.d(i, "udpateVidoReal", function() {
            return udpateVidoReal
        }),
        r.d(i, "setByteCount", function() {
            return setByteCount
        }),
        r.d(i, "changeVolume", function() {
            return changeVolume
        }),
        r.d(i, "setPlay", function() {
            return setPlay
        }),
        r.d(i, "refeshplayerStreamNameAndStatus", function() {
            return refeshplayerStreamNameAndStatus
        }),
        r.d(i, "refeshplayerSrc", function() {
            return refeshplayerSrc
        }),
        r.d(i, "refeshplayerisPlay", function() {
            return refeshplayerisPlay
        }),
        r.d(i, "refeshplayerisRollback", function() {
            return refeshplayerisRollback
        }),
        r.d(i, "refeshplayerP2p", function() {
            return refeshplayerP2p
        }),
        r.d(i, "refeshplayerP2pData", function() {
            return refeshplayerP2pData
        }),
        r.d(i, "changeHaveShowVideoState", function() {
            return changeHaveShowVideoState
        }),
        r.d(i, "setPlayerError", function() {
            return setPlayerError
        }),
        r.d(i, "upView", function() {
            return upView
        }),
        r.d(i, "initData", function() {
            return initData
        });
        var o = {};
        r.r(o),
        r.d(o, "getData", function() {
            return action_getData
        }),
        r.d(o, "loadVideo", function() {
            return loadVideo
        }),
        r.d(o, "loadStream", function() {
            return loadStream
        }),
        r.d(o, "streamDataHandle", function() {
            return streamDataHandle
        }),
        r.d(o, "playStream", function() {
            return playStream
        }),
        r.d(o, "reloadVideo", function() {
            return reloadVideo
        }),
        r.d(o, "loadTicketStream", function() {
            return loadTicketStream
        }),
        r.d(o, "initData", function() {
            return action_initData
        }),
        r.d(o, "httpClientLoadStremUrl", function() {
            return httpClientLoadStremUrl
        });
        var a = r("e55c4")
          , s = r("09565")
          , d = r("300f3")
          , u = r.n(d)
          , c = !1;
        function customize(e) {
            for (var t = arguments.length, r = Array(t > 1 ? t - 1 : 0), i = 1; i < t; i++)
                r[i - 1] = arguments[i];
            var o = ["[html5 player]"].concat(r.map(function(e) {
                return "[" + e + "]"
            }));
            return function() {
                for (var t = arguments.length, r = Array(t), i = 0; i < t; i++)
                    r[i] = arguments[i];
                c && e.call.apply(e, [console].concat(o, r))
            }
        }
        function makeLogger() {
            for (var e = arguments.length, t = Array(e), r = 0; r < e; r++)
                t[r] = arguments[r];
            return {
                log: customize.apply(void 0, [console.log].concat(t)),
                debug: customize.apply(void 0, [console.debug].concat(t)),
                info: customize.apply(void 0, [console.info].concat(t)),
                warn: customize.apply(void 0, [console.warn].concat(t)),
                error: customize.apply(void 0, [console.error].concat(t))
            }
        }
        var h = makeLogger("first");
        function uniqueKey(e) {
            return e + "_h5p_room"
        }
        var f = function getLocalStorage(e) {
            return a.DataCenter.localStorage.get(e)
        }
          , y = function setLocalStorage(e, t, r) {
            return a.DataCenter.localStorage.set(e, t, r)
        };
        function get(e, t) {
            var r = f(uniqueKey(e));
            return void 0 === r || null === r ? t : r
        }
        function set(e, t) {
            try {
                y(uniqueKey(e), t)
            } catch (t) {
                h.warn("set localStorage:" + e + " error.")
            }
        }
        var _, v, g, b, w, P, E, S, M, T = {
            player_storage_volume: "player_storage_volume",
            player_storage_cdn: "player_storage_cdn",
            GaoRateTimestamp: "GaoRateTimestamp",
            RateRecordTime: "rateRecordTime"
        }, D = "Douyu_220050105", k = "__video2", O = 0, L = "/lapi/live/getH5Play", C = "/gapi/live/web/super/stream", R = "/gapi/live/ticket/getH5Play", A = {
            QQ: "tct-h5",
            WS: "ws-h5",
            XY: "xy-h5",
            DOUYU: "dyp2p"
        }, I = "errlog_encrypt_error", x = "function" === typeof Symbol && "symbol" === typeof Symbol.iterator ? function(e) {
            return typeof e
        }
        : function(e) {
            return e && "function" === typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e
        }
        ;
        function _initDefineProp(e, t, r, i) {
            r && Object.defineProperty(e, t, {
                enumerable: r.enumerable,
                configurable: r.configurable,
                writable: r.writable,
                value: r.initializer ? r.initializer.call(i) : void 0
            })
        }
        function _applyDecoratedDescriptor(e, t, r, i, o) {
            var a = {};
            return Object.keys(i).forEach(function(e) {
                a[e] = i[e]
            }),
            a.enumerable = !!a.enumerable,
            a.configurable = !!a.configurable,
            ("value"in a || a.initializer) && (a.writable = !0),
            a = r.slice().reverse().reduce(function(r, i) {
                return i(e, t, r) || r
            }, a),
            o && void 0 !== a.initializer && (a.value = a.initializer ? a.initializer.call(o) : void 0,
            a.initializer = void 0),
            void 0 === a.initializer && (Object.defineProperty(e, t, a),
            a = null),
            a
        }
        var B = function Service(e) {
            return function(t, r) {
                var i = "undefined" === typeof e ? "undefined" : x(e);
                return "object" === i ? t[r] = e : "Service" === Object.getPrototypeOf(e).name || -1 !== e.name.toLowerCase().indexOf("service") || e.prototype.type && -1 !== e.prototype.type.indexOf("service") ? (void 0 === e.instance && (e.instance = new e),
                t[r] = e.instance) : "function" === i && (t[r] = e()),
                t
            }
        }
          , F = (_ = B(a.DataCenter.acj),
        v = B(a.DataCenter.global),
        g = B(a.DataCenter.sessionStorage),
        b = B(a.DataCenter.cookie),
        w = function() {
            function RxACJ() {
                !function _classCallCheck(e, t) {
                    if (!(e instanceof t))
                        throw new TypeError("Cannot call a class as a function")
                }(this, RxACJ),
                _initDefineProp(this, "acj", P, this),
                _initDefineProp(this, "global", E, this),
                _initDefineProp(this, "sessionStorage", S, this),
                _initDefineProp(this, "cookie", M, this)
            }
            return RxACJ.prototype.pushData = function pushData(e, t) {
                this.acj.push(e, t, 0)
            }
            ,
            RxACJ.prototype.MonitorData = function MonitorData(e, t) {
                this.acj.get(e).subscribe(function() {
                    var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
                    t(e)
                })
            }
            ,
            RxACJ.prototype.getDid = function getDid() {
                return this.cookie.get("did") || "10000000000000000000000000001501"
            }
            ,
            RxACJ.prototype.setSessionStorage = function setSessionStorage(e, t) {
                this.sessionStorage.set(e, t)
            }
            ,
            RxACJ.prototype.getCookie = function getCookie(e) {
                return this.cookie.get(e) || ""
            }
            ,
            RxACJ.prototype.getSys = function getSys() {
                return this.global.get("$SYS") || ""
            }
            ,
            RxACJ.prototype.getSessionStorage = function getSessionStorage(e) {
                return this.sessionStorage.get(e)
            }
            ,
            RxACJ.prototype.setPlayerVersion = function setPlayerVersion(e) {
                this.global.set("PLAYER_VERSION", e)
            }
            ,
            RxACJ
        }(),
        P = _applyDecoratedDescriptor(w.prototype, "acj", [_], {
            enumerable: !0,
            initializer: null
        }),
        E = _applyDecoratedDescriptor(w.prototype, "global", [v], {
            enumerable: !0,
            initializer: null
        }),
        S = _applyDecoratedDescriptor(w.prototype, "sessionStorage", [g], {
            enumerable: !0,
            initializer: null
        }),
        M = _applyDecoratedDescriptor(w.prototype, "cookie", [b], {
            enumerable: !0,
            initializer: null
        }),
        w)
          , V = "room_video_catchtime"
          , j = "room_data_idle"
          , N = "room_bus_checksevertime"
          , G = "video_play_business"
          , U = "business_to_video_ready"
          , H = "js_to_business_action"
          , W = "js_to_business_action_list"
          , q = "js_to_business_point"
          , Y = "js_to_business_point_list"
          , z = "js_to_business_acj"
          , $ = "js_to_business_acj_list"
          , X = "js_to_business_asstion_list"
          , Q = "js_to_business_asstion_point"
          , J = "js_to_keeplive_point"
          , K = "js_to_keeplive_point_list"
          , Z = "GET_SDK_SUS"
          , ee = "BEGIN_START_LOADER"
          , te = "room_ticket_status"
          , re = "room_bus_isVrRoom"
          , ie = []
          , oe = !1
          , ae = []
          , ne = []
          , se = []
          , de = []
          , ue = [];
        function getModule(e) {
            for (var t = 0; t < ie.length; t++) {
                var r = ie[t];
                if (r.id === e)
                    return r
            }
            return null
        }
        function actionCall(e) {
            var t = e.id
              , r = e.action
              , i = e.data
              , o = getModule(t);
            o && o.actionHandle({
                action: r,
                data: i
            }),
            "LoadVideoNet" !== t && (oe ? pushAcj(H, {
                id: t,
                action: r,
                data: i
            }) : ae.push({
                id: t,
                action: r,
                data: i
            }))
        }
        function acjCall(e, t) {
            "room_mouse_move" === e || "room_mouse_leave" === e ? pushAcj(e, t) : oe ? pushAcj(z, {
                type: e,
                data: t
            }) : de.push({
                type: e,
                data: t
            })
        }
        function addPerformanceLog(e, t, r) {
            oe ? pushAcj(q, {
                type: e,
                data: t,
                av: r
            }) : ne.push({
                type: e,
                data: t,
                av: r
            })
        }
        function addAssistantLog(e, t, r) {
            oe ? pushAcj(Q, {
                modu: e,
                mid: t,
                det: r
            }) : se.push({
                modu: e,
                mid: t,
                det: r
            })
        }
        function stateGetIn(e) {
            var t = e[0]
              , r = getModule(t)
              , i = 0;
            try {
                i = r ? r.getMoudleDate() : getBaseData()[t];
                for (var o = 1; o < e.length; o++)
                    i = i[e[o]]
            } catch (e) {
                i = 0
            }
            return i
        }
        function businessActionHandle(e, t, r) {
            if ("controller" === e)
                switch (t) {
                case "setShowHeight":
                    (function setShowHeight(e) {
                        getBaseData().controller.showHeight = e,
                        getModule("videoBg") && getModule("videoBg").updateScale()
                    }
                    ).apply(void 0, r)
                }
            else if ("xvideoModule" === e)
                switch (t) {
                case "setOpenWichVideo":
                    (function setOpenWichVideo(e) {
                        getBaseData().xvideoModule.xplayer.openWichVideo = e,
                        getModule("videoModule") && getModule("videoModule").refreshPlayer(),
                        getModule("videoModule") && getModule("videoModule").viewFresh()
                    }
                    ).apply(void 0, r);
                    break;
                case "openshowXc":
                    (function openshowXc(e) {
                        getBaseData().xvideoModule.xplayer.showXc = e,
                        getModule("videoModule") && getModule("videoModule").viewFresh()
                    }
                    ).apply(void 0, r);
                    break;
                case "showmusicIconfun":
                    (function showmusicIconfun(e) {
                        getBaseData().xvideoModule.xplayer.showmusicicon = e
                    }
                    ).apply(void 0, r)
                }
            else if ("ticket" === e)
                "userTickStream" === t && function userTickStream(e) {
                    getBaseData().ticket.rtmp_url = e.rtmp_url,
                    getBaseData().ticket.rtmp_live = e.rtmp_live
                }
                .apply(void 0, r);
            else if ("app" === e)
                switch (t) {
                case "playBigModel":
                    (function playBigModel(e) {
                        getBaseData().app.playbModel = e,
                        getModule("videoModule") && getModule("videoModule").viewFresh()
                    }
                    ).apply(void 0, r);
                    break;
                case "initDelayRoomInfo":
                    (function initDelayRoomInfo(e) {
                        getBaseData().app.roomInfo.isVertical = e.roomInfo.isVertical,
                        getBaseData().app.roomInfo.roomSrc = e.roomInfo.roomSrc,
                        getModule("videoBg") && getModule("videoBg").updateURL()
                    }
                    ).apply(void 0, r);
                    break;
                case "setAutoPlay":
                    (function setAutoPlay(e) {
                        getBaseData().app.canAutoPlay = e,
                        getModule("videoModule") && getModule("videoModule").refreshPlayer()
                    }
                    ).apply(void 0, r);
                    break;
                case "setPagescreen":
                    (function setPagescreen(e) {
                        getBaseData().app.isWebFullscreen = e,
                        getModule("videoModule") && getModule("videoModule").viewFresh()
                    }
                    ).apply(void 0, r);
                    break;
                case "setFullScreen":
                    (function setFullScreen(e) {
                        getBaseData().app.isFullscreen = e,
                        getModule("videoModule") && getModule("videoModule").viewFresh()
                    }
                    ).apply(void 0, r);
                    break;
                case "resize":
                    (function resize(e, t) {
                        getBaseData().app.width = e,
                        getBaseData().app.height = t,
                        getModule("videoModule") && getModule("videoModule").viewFresh(),
                        getModule("videoBg") && getModule("videoBg").updateScale()
                    }
                    ).apply(void 0, r);
                    break;
                case "refeshStreamInfo":
                    (function refeshStreamInfo(e) {
                        getBaseData().app.streamInfo = e
                    }
                    ).apply(void 0, r);
                    break;
                case "refreshRidAndCdn":
                    (function refreshRidAndCdn(e, t) {
                        getBaseData().app.rid = e,
                        getBaseData().app.cdn = t
                    }
                    ).apply(void 0, r);
                    break;
                case "refreshAppinfo":
                    (function refreshAppinfo(e, t, r) {
                        for (var i in e)
                            getBaseData().app.roomInfo[i] = e[i];
                        getBaseData().app.rateSwitch = t.rateSwitch,
                        getBaseData().app.rate = r.rate,
                        getModule("videoBg") && getModule("videoBg").updateURL()
                    }
                    ).apply(void 0, r);
                    break;
                case "initRoomInfo":
                    (function initRoomInfo(e, t, r) {
                        for (var i in e)
                            getBaseData().app.roomInfo[i] = e[i];
                        getBaseData().app.rateSwitch = t.rateSwitch,
                        getBaseData().app.rate = r.rate,
                        getModule("videoBg") && getModule("videoBg").updateURL()
                    }
                    ).apply(void 0, r);
                    break;
                case "changePageRateSwitch":
                    (function changePageRateSwitch(e) {
                        getBaseData().app.pageRateSwitch = e
                    }
                    ).apply(void 0, r);
                    break;
                case "changeRateSwitch":
                    (function changeRateSwitch(e) {
                        getBaseData().app.rateSwitch = e
                    }
                    ).apply(void 0, r);
                    break;
                case "manualLoadVideo":
                    (function bussnessActionHandle_manualLoadVideo(e) {
                        getBaseData().app.manualLoadVideo = e.manualLoadVideo
                    }
                    ).apply(void 0, r);
                    break;
                case "freshUip":
                    (function freshUip(e) {
                        getBaseData().app.uip = e
                    }
                    ).apply(void 0, r);
                    break;
                case "freshRate":
                    (function freshRate(e) {
                        getBaseData().app.rate = e
                    }
                    ).apply(void 0, r);
                    break;
                case "freshCdn":
                    (function freshCdn(e) {
                        getBaseData().app.cdn = e
                    }
                    ).apply(void 0, r);
                    break;
                case "closeRoom":
                    !function closeRoom() {
                        var e = getCookie("groupid")
                          , t = getPageData("$ROOM.owner_uid")
                          , r = getCookie("uid") || "0"
                          , i = 1 === +!(!t || t !== Number(r)) || 5 === +e;
                        a.DataCenter.common.get("$DATA").subscribe(function(e) {
                            var t = 0;
                            e.room && e.room.cate1_id && (t = +e.room.cate1_id),
                            20 == t ? !i && window.destroyFirstVideo && window.destroyFirstVideo(2) : (!i && window.destroyFirstVideo && window.destroyFirstVideo(1),
                            getModule("videoBg") && getModule("videoBg").destroy())
                        })
                    }()
                }
        }
        var le = void 0;
        function callBack(e) {
            var t = e.action
              , r = e.id
              , i = e.data;
            getModule(r) ? getModule(r).actionHandle({
                action: t,
                data: i
            }) : businessActionHandle(r, t, i)
        }
        function ReadcallBack() {
            h.warn("aaaaaaaa+\u6536\u5230\u7b2c\u4e8c\u68af\u961f\u4e1a\u52a1ok"),
            function pushList() {
                oe = !0,
                pushAcj(W, ae),
                pushAcj(Y, ne),
                pushAcj(X, se),
                pushAcj($, de),
                pushAcj(K, ue)
            }()
        }
        var pe = void 0;
        function pushAcj(e, t) {
            le || (le = new F),
            le.pushData(e, t)
        }
        function getDid() {
            return le || (le = new F),
            le.getDid()
        }
        function getCookie(e) {
            return le || (le = new F),
            le.getCookie(e)
        }
        var ce = {
            $ROOM: {}
        }
          , he = {
            app: {
                Status: !0,
                usergroupid: "",
                rid: 0,
                isLogin: !1,
                haveChangeMultirates: 1,
                definitionConfig: "",
                rate: get("realRateModel", "-1"),
                isYuanHua: !1,
                cdn: get(T.player_storage_cdn, ""),
                isYuanhua: !1,
                pageRateSwitch: 0,
                streamInfo: {},
                roomInfo: {},
                width: 1217,
                height: 726,
                isFullscreen: !1,
                isWebFullscreen: !1,
                rateSwitch: 0,
                ct: 0,
                uip: "",
                manualLoadVideo: !1,
                canAutoPlay: !0,
                playbModel: !0,
                isHostlive: !1,
                isPhone: !1,
                p2p: ""
            },
            videoModule: {
                haveShowVideo: !1
            },
            tcp: {
                loginres: {
                    userid: 0
                }
            },
            LoadVideoNet: {
                requestRoomInfoTimePoint: -1,
                requestStreamUrlTimePoint: 0,
                starPlayStreamTimePoint: 0,
                loadNum: 0
            },
            xvideoModule: {
                xplayer: {
                    showXc: !1,
                    showmusicicon: !1,
                    openWichVideo: !1
                }
            },
            ticket: {
                isTicketNeed: !1,
                rtmp_url: void 0,
                rtmp_live: void 0
            },
            controller: {
                showHeight: O
            }
        };
        function initBaseData() {
            var e = ce.$ROOM.show_status
              , t = ce.$ROOM.room_id
              , r = getCookie("uid") || "0"
              , i = ce.$ROOM.owner_uid
              , o = ce.$ROOM.eticket
              , a = ce.$ROOM.is_video_high_quality_time
              , n = ce.$ROOM.video_high_quality_resolution;
            if ("undefined" !== a && "undefined" !== n) {
                var s = [parseInt(n, 10), 0, parseInt(a, 10)];
                he.ticket.definitionConfig = s ? escape(JSON.stringify(s)) : ""
            }
            !function resetBaseData() {
                he = {
                    app: {
                        Status: !0,
                        usergroupid: "",
                        rid: 0,
                        isLogin: !1,
                        haveChangeMultirates: 1,
                        definitionConfig: "",
                        rate: get("realRateModel", "-1"),
                        isYuanHua: !1,
                        cdn: get(T.player_storage_cdn, ""),
                        isYuanhua: !1,
                        pageRateSwitch: 0,
                        streamInfo: {},
                        roomInfo: {},
                        width: 1217,
                        height: 726,
                        isFullscreen: !1,
                        isWebFullscreen: !1,
                        rateSwitch: 0,
                        ct: 0,
                        uip: "",
                        manualLoadVideo: !1,
                        canAutoPlay: !0,
                        playbModel: !0,
                        isHostlive: !1,
                        isPhone: !1,
                        p2p: ""
                    },
                    videoModule: {
                        haveShowVideo: !1
                    },
                    tcp: {
                        loginres: {
                            userid: 0
                        }
                    },
                    LoadVideoNet: {
                        requestRoomInfoTimePoint: -1,
                        requestStreamUrlTimePoint: 0,
                        starPlayStreamTimePoint: 0,
                        loadNum: 0
                    },
                    xvideoModule: {
                        xplayer: {
                            showXc: !1,
                            showmusicicon: !1,
                            openWichVideo: !1
                        }
                    },
                    ticket: {
                        isTicketNeed: !1,
                        rtmp_url: void 0,
                        rtmp_live: void 0
                    },
                    controller: {
                        showHeight: O
                    }
                }
            }(),
            he.app.Status = 1 === +e,
            he.app.usergroupid = getCookie("groupid") || "0",
            he.app.rid = t,
            he.app.isLogin = !!(r && parseFloat(r) > 0),
            he.app.isHostlive = !(!i || i !== Number(r)),
            he.app.isYuanhua = -1 !== ["673327", "429265"].indexOf(t),
            he.app.isPhone = 1 === (getCookie("phonestatus") || 0),
            he.ticket.isTicketNeed = void 0 !== o && "" !== o && null !== o
        }
        function getBaseData() {
            return he
        }
        var fe = {}
          , me = {
            on: function on(e, t) {
                var r = (arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {}).once;
                e && (fe[e] || (fe[e] = []),
                fe[e].push({
                    listener: t,
                    once: r
                }))
            },
            off: function off(e, t) {
                fe[e] && (fe[e] = fe[e].filter(function(e) {
                    return e.listener !== t
                }))
            },
            once: function once(e, t) {
                this.on(e, t, {
                    once: !0
                })
            },
            emit: function emit(e) {
                for (var t = this, r = arguments.length, i = Array(r > 1 ? r - 1 : 0), o = 1; o < r; o++)
                    i[o - 1] = arguments[o];
                fe[e] && fe[e].every(function(r) {
                    if (r.listener)
                        try {
                            var o = r.listener.apply(null, i);
                            return r.once && t.off(e, r.listener),
                            !o
                        } catch (t) {
                            h.warn("Event emit error", e, t)
                        }
                    return !0
                })
            },
            clear: function clear() {
                fe = {}
            }
        };
        function checkH5Remeber() {
            var e = get("player_remeber_key")
              , t = getCookie("uid") || "0";
            return "1" === t.charAt(t.length - 1) && (e = function getSession(e) {
                return le || (le = new F),
                le.getSessionStorage(e)
            }("player_remeber_key")),
            !e || "h5" === e
        }
        function get$ROOM() {
            return a.DataCenter.global.get("$ROOM") || {}
        }
        var ye = !1;
        function notifyLoadjs() {
            window.player_video_ready && !ye && (ye = !0,
            window.player_video_ready.next())
        }
        function checkH5() {
            var e = location.search;
            if (-1 !== e.search("[?&]useflash(&|$)"))
                return !1;
            var t = -1 !== e.search("[?&]useh5(&|$)");
            return (1 === get$ROOM().defaulth5 || t) && function checkBrowser() {
                if (!window.vdwdae325w_64we)
                    return !1;
                var e = navigator.userAgent
                  , t = e.toLowerCase().match(/version\/([\d{2}]+).*safari/);
                if (t) {
                    var r = parseInt(t[1], 10);
                    if (!Number.isNaN(r) && r >= 11)
                        return !0
                }
                if (t = e.match(/Chrome\/(\d{2})/)) {
                    var i = parseInt(t[1], 10);
                    if (!Number.isNaN(i) && i >= 43)
                        return !0
                }
                if (t = e.match(/Firefox\/(\d{2})/)) {
                    var o = parseInt(t[1], 10);
                    if (!Number.isNaN(o) && o >= 43)
                        return !0
                }
                return !1
            }() && checkH5Remeber()
        }
        function getIsDebug() {
            return window.location.href.indexOf("shark_debug=2") > 0 || window.location.href.indexOf("dydg") > 0
        }
        function getPageData(e) {
            return a.DataCenter.global.get(e)
        }
        function bindAll(e, t) {
            void 0 === t && (t = Object.getPrototypeOf(e)),
            Object.getOwnPropertyNames(t).forEach(function(t) {
                var r = e[t];
                "function" === typeof r && (e[t] = r.bind(e))
            })
        }
        function runGlobalJs(e) {
            var t = e.content
              , r = e.url;
            return new Promise(function(e, i) {
                var o = document.head || document.body
                  , a = document.createElement("script")
                  , n = function finish() {
                    return o.removeChild(a)
                };
                t ? a.text = t : (a.src = r,
                a.async = !0),
                a.onload = function() {
                    n(),
                    e()
                }
                ,
                a.onerror = function() {
                    n(),
                    i(new Error("load " + r + " failed."))
                }
                ,
                o.appendChild(a)
            }
            )
        }
        function isSupermanager() {
            return 5 === +getCookie("groupid")
        }
        function getIsHostlive() {
            var e = getPageData("$ROOM.owner_uid")
              , t = getCookie("uid") || "0";
            return !(!e || e !== Number(t))
        }
        function delayStreamWhilte() {
            var e = navigator.userAgent.indexOf("Edge") > -1
              , t = +getPageData("$ROOM.room_id")
              , r = [1118552].indexOf(t) > -1
              , i = [902379, 747764, 85894, 310926].indexOf(t) > -1;
            return !isSupermanager() && !getIsHostlive() && !(r || e || !window.streamUrl || !i)
        }
        var _e = 0
          , ve = !1
          , ge = !0;
        function isVRPlayer() {
            return ve
        }
        function streamHandle(e, t, r, i, o) {
            try {
                e && 1 === +e.smt ? (ge && (acjCall(re),
                ge = !1),
                ve = !0) : ve = !1,
                delayStreamWhilte() && _e < 2 || actionCall({
                    id: "loading",
                    action: "showLoading",
                    data: [!0]
                });
                for (var a = e.multirates, n = 0; n < a.length; n++)
                    a[n].type = a[n].rate;
                var s = a.find(function(e) {
                    return e.type === t
                })
                  , d = s ? s.name : ""
                  , u = a && a.length > 1 ? 1 : 0
                  , l = u
                  , p = e.cdnsWithName;
                getBaseData().app.pageRateSwitch = l,
                actionCall({
                    id: "app",
                    action: "changePageRateSwitch",
                    data: [l]
                });
                var c = void 0
                  , f = !1;
                void 0 !== e.eticket && null != e.eticket && (c = e.eticket,
                f = !0);
                var m = "";
                (function chooseP2P(e, t) {
                    return Promise.resolve().then(function() {
                        if (t)
                            return "";
                        var r = stateGetIn(["app", "isHostlive"])
                          , i = stateGetIn(["app", "isLogin"])
                          , o = stateGetIn(["app", "isPhone"])
                          , a = stateGetIn(["ticket", "isTicketNeed"])
                          , n = "";
                        return e > 0 && (1 === +e ? n = A.XY : 2 === +e ? n = A.QQ : 3 === +e ? n = A.WS : 9 === +e && (n = A.DOUYU)),
                        r ? "" : e ? i && o && a ? "" : n : ""
                    })
                }
                )(e.p2p, r).then(function(e) {
                    m = e
                }).then(function() {
                    actionCall({
                        id: "ticket",
                        action: "initeticketData",
                        data: [c]
                    }),
                    actionCall({
                        id: "videoModule",
                        action: "refeshplayerP2pData",
                        data: [{
                            src: null,
                            p2p: m,
                            streamName: d,
                            streamStatus: e.streamStatus,
                            isPreload: i,
                            p2pValue: e.p2p,
                            p2pCids: e.p2pCids,
                            p2pMeta: e.p2pMeta
                        }]
                    });
                    var r = {
                        cdnsWithName: p,
                        is_pass_player: e.isPassPlayer
                    };
                    set("realRateModel", e.rate),
                    function baseData_refreshAppinfo(e, t) {
                        for (var r in e)
                            he.app.roomInfo[r] = e[r];
                        he.app.multirates = t.multirates,
                        he.app.rateSwitch = t.rateSwitch,
                        he.app.rate = t.rate
                    }(r, {
                        multirates: a,
                        rateSwitch: u,
                        rate: e.rate
                    }),
                    actionCall(f ? {
                        id: "LoadVideoNet",
                        action: "loadTicketStream",
                        data: [o, t, c]
                    } : {
                        id: "LoadVideoNet",
                        action: "streamDataHandle",
                        data: [e]
                    })
                })
            } catch (e) {
                h.warn(e + "streamHandle err"),
                notifyLoadjs()
            }
        }
        function showVideo() {
            var e = 1 === +getPageData("$ROOM.show_status") || getBaseData().app.Status
              , t = getCookie("groupid")
              , r = getPageData("$ROOM.owner_uid")
              , i = getCookie("uid") || "0"
              , o = !(!r || r !== Number(i));
            return e || !e && (1 === +o || 5 === +t)
        }
        function getFlashvars() {
            var e = {};
            return e.DomainName = window.location.host,
            e.cdn = function getUrlParam(e) {
                var t = e.replace(/[[]/, "\\[").replace(/[\]]/, "\\]")
                  , r = new RegExp("[\\?&]" + t + "=([^&#]*)").exec(location.search);
                return null == r ? "" : decodeURIComponent(r[1].replace(/\+/g, " "))
            }("cdn") || "",
            e.asset_url = getPageData("$SYS.res_url"),
            e.usergroupid = getCookie("groupid") || "0",
            e.uid = +(getCookie("uid") || 0),
            e.RoomId = getPageData("$ROOM.room_id"),
            e.RoomTitle = getPageData("$ROOM.room_name"),
            e.OwnerId = getPageData("$ROOM.owner_uid"),
            e.Status = 1 === +getPageData("$ROOM.show_status"),
            e.roompass = getPageData("$ROOM.room_pwd"),
            navigator.appVersion.indexOf("MSIE") > 0 ? e.barrage_delay_time = 400 : e.barrage_delay_time = 250,
            e.phonestatus = getCookie("phonestatus") || 0,
            e.did = getCookie("did"),
            e.avatar_url = getPageData("$SYS.avatar_url"),
            e.logUrl = getPageData("$SYS.fh2") || "",
            window.__player || (window.__player = {},
            window.__player.getGlobal = getPageData),
            e
        }
        var be = -1;
        var we = -1;
        var Pe = 1;
        function sendPairFrameStatePoint(e, t) {
            if (1 === Pe) {
                Pe = 2,
                h.log("show_frame_con" + e);
                var r = stateGetIn(["videoModule", "player", "p2p"])
                  , i = 0;
                we > be && -1 !== be && (i = we - be),
                addPerformanceLog("show_frame_con", {
                    result: e,
                    errcode: t,
                    Eurl: window.streamUrl,
                    isp2p: r,
                    codeVer: "2019112601",
                    dTime: i
                }, "")
            }
        }
        var Ee = null
          , Se = null
          , Me = !1
          , Te = !1;
        var De = null
          , ke = null;
        function setInPairFrameState(e, t) {
            _e = e,
            2 === e ? sendPairFrameStatePoint(1, t) : 3 === e && sendPairFrameStatePoint(0, t)
        }
        function getInPairFrameState() {
            return _e
        }
        var Oe = 50;
        function starVideoPairFrame() {
            Te ? me.emit("videoPairFrameOverErr", {
                type: 1
            }) : (!function videoPairFrame() {
                var e = void 0
                  , t = void 0;
                clearInterval(De),
                De = setInterval(function() {
                    if (Ee && Se) {
                        setInPairFrameState(1);
                        var r = Ee.T_ADV_Timestamp()
                          , i = Se.T_ADV_Timestamp();
                        if (!r || !i)
                            return;
                        var o = 1e3 * Ee._video.currentTime
                          , a = r.keyframes;
                        if (e = r.seiTimestamp - 1e3 * r.bufferLength,
                        t = i.seiTimestamp - 1e3 * i.bufferLength,
                        h.log("aaa- " + (e - t) + " buf:" + 1e3 * i.bufferLength),
                        a)
                            for (var n = 0; n < a.length; n++) {
                                var s = 1e3 * a[n];
                                if (o > s - Oe && o < s + Oe) {
                                    h.log("\u5bfb\u627e\u5230\u5173\u952e\u5e27 \u5173\u952e\u5e27\u6570\u636e" + n + " \u662f\u64ad\u653e" + s + "\u79d2\u4e0e\u5f53\u524d\u64ad\u653e\u8bef\u5dee\u5728" + (s - o));
                                    var d = e + s - o;
                                    if (d > t && i.seiTimestamp > d)
                                        return h.log("\u5173\u952e\u5e27\u5728\u7f13\u5b58\u533a\u57df \u5173\u952e\u5e27\u65f6\u95f4\u6413" + d),
                                        De && clearInterval(De),
                                        clearInterval(ke),
                                        me.emit("videoPairFrameCan", {
                                            time: d
                                        }),
                                        void setInPairFrameState(2)
                                }
                            }
                    }
                }, 30)
            }(),
            ke = setInterval(function() {
                clearInterval(De),
                clearInterval(ke),
                me.emit("videoPairFrame10Over", getInPairFrameState()),
                2 !== getInPairFrameState() && setInPairFrameState(3, 2)
            }, 1e4))
        }
        function closeVideoPairFrame(e, t) {
            delayStreamWhilte() && (h.log("VideoPairFrame+ close" + e),
            getInPairFrameState() < 2 ? (clearInterval(De),
            clearInterval(ke),
            2 !== getInPairFrameState() && setInPairFrameState(3, t),
            me.emit("videoPairFrameOverErr", {
                type: e
            })) : (1 === e && actionCall({
                id: "videoModule",
                action: "setPlayerError",
                data: [3]
            }),
            4 === e && me.emit("videoPairFrameOverErr", {
                type: e
            })))
        }
        var Le = 1;
        function prfLoad(e) {
            1 === Le && (acjCall(V, e),
            Le = 2)
        }
        function _inherits(e, t) {
            if ("function" !== typeof t && null !== t)
                throw new TypeError("Super expression must either be null or a function, not " + typeof t);
            e.prototype = Object.create(t && t.prototype, {
                constructor: {
                    value: e,
                    enumerable: !1,
                    writable: !0,
                    configurable: !0
                }
            }),
            t && (Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : function _defaults(e, t) {
                for (var r = Object.getOwnPropertyNames(t), i = 0; i < r.length; i++) {
                    var o = r[i]
                      , a = Object.getOwnPropertyDescriptor(t, o);
                    a && a.configurable && void 0 === e[o] && Object.defineProperty(e, o, a)
                }
                return e
            }(e, t))
        }
        var Ce = function(e) {
            function BaseModule(t) {
                !function baseModule_classCallCheck(e, t) {
                    if (!(e instanceof t))
                        throw new TypeError("Cannot call a class as a function")
                }(this, BaseModule);
                var r = function _possibleConstructorReturn(e, t) {
                    if (!e)
                        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                    return !t || "object" !== typeof t && "function" !== typeof t ? e : t
                }(this, e.call(this));
                return bindAll(r, BaseModule.prototype),
                bindAll(r),
                r.h5video = t,
                r.props = null,
                r
            }
            return _inherits(BaseModule, e),
            BaseModule.prototype.init = function init(e) {
                this.container = e
            }
            ,
            BaseModule.prototype.Uprops = function Uprops(e, t) {
                this.props.key = t
            }
            ,
            BaseModule.prototype.destroy = function destroy() {
                this.removeAllListeners(),
                this.container && this.element && this.container.contains(this.element) && this.container.removeChild(this.element),
                this.element = null
            }
            ,
            BaseModule
        }(s.EventEmitter);
        function firstVideoBg_inherits(e, t) {
            if ("function" !== typeof t && null !== t)
                throw new TypeError("Super expression must either be null or a function, not " + typeof t);
            e.prototype = Object.create(t && t.prototype, {
                constructor: {
                    value: e,
                    enumerable: !1,
                    writable: !0,
                    configurable: !0
                }
            }),
            t && (Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : function firstVideoBg_defaults(e, t) {
                for (var r = Object.getOwnPropertyNames(t), i = 0; i < r.length; i++) {
                    var o = r[i]
                      , a = Object.getOwnPropertyDescriptor(t, o);
                    a && a.configurable && void 0 === e[o] && Object.defineProperty(e, o, a)
                }
                return e
            }(e, t))
        }
        var Re = function(e) {
            function VideoBg() {
                !function firstVideoBg_classCallCheck(e, t) {
                    if (!(e instanceof t))
                        throw new TypeError("Cannot call a class as a function")
                }(this, VideoBg);
                var t = function firstVideoBg_possibleConstructorReturn(e, t) {
                    if (!e)
                        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                    return !t || "object" !== typeof t && "function" !== typeof t ? e : t
                }(this, e.call(this));
                return t.id = "videoBg",
                t.isYinping = !1,
                t
            }
            return firstVideoBg_inherits(VideoBg, e),
            VideoBg.prototype.init = function init(e) {
                var t = this;
                void 0 === this.element && (this.element = document.createElement("div"),
                this.element.className = u.a.bg,
                e.appendChild(this.element),
                this.element.style.display = "none"),
                a.DataCenter.event.load().subscribe(function(r) {
                    a.DataCenter.common.get("$DATA").subscribe(function(r) {
                        var i = 0;
                        r.room && r.room.cate1_id && (i = +r.room.cate1_id),
                        (1 === +getPageData("$ROOM.show_status") && getBaseData().app.Status || 20 == i) && (20 == i && (t.isYinping = !0),
                        t.container = e,
                        t.updateURL())
                    })
                })
            }
            ,
            VideoBg.prototype.updateScale = function updateScale() {}
            ,
            VideoBg.prototype.updateURL = function updateURL() {
                var e = stateGetIn(["app", "roomInfo", "isVertical"])
                  , t = stateGetIn(["app", "roomInfo", "coverSrc"])
                  , r = stateGetIn(["app", "roomInfo", "owner_avatar"])
                  , i = stateGetIn(["app", "roomInfo", "isDefaultAvatar"])
                  , o = stateGetIn(["app", "roomInfo", "defaultSrc"]);
                if (1 === e || void 0 !== getPageData("$ROOM.audioWEBBGIMG")) {
                    var a = void 0;
                    void 0 !== getPageData("$ROOM.audioWEBBGIMG") ? a = this.isYinping ? "https://sta-op.douyucdn.cn/front-publish/audio-social-web-front-master/resource/images/audioSocialStaticBg.png" : getPageData("$ROOM.audioWEBBGIMG") : t ? a = t : r && 0 === i ? a = r : o && (a = o),
                    a ? (this.initDom(a),
                    this.element && "block" !== this.element.style.display && (this.element.style.display = "block")) : this.element && (this.element.style.display = "none")
                } else
                    this.element && "block" === this.element.style.display && (this.element.style.display = "none")
            }
            ,
            VideoBg.prototype.initDom = function initDom(e) {
                this.element && (this.element.className = u.a.bg + " " + (void 0 === getPageData("$ROOM.audioWEBBGIMG") ? u.a.yzBg : ""),
                this.element.style.backgroundImage = "url(" + e + ")")
            }
            ,
            VideoBg.prototype.destroy = function destroy(t) {
                2 !== t && e.prototype.destroy.call(this)
            }
            ,
            VideoBg
        }(Ce)
          , Ae = r("f8ab5")
          , Ie = r.n(Ae)
          , xe = null
          , Be = {
            byteCount: 0,
            haveShowVideo: !1,
            player: {
                isReady: !1,
                isPlay: !0,
                volume: getIsHostlive() ? 0 : get(T.player_storage_volume, .5),
                getPlayTime: function getPlayTime() {
                    return 0
                },
                getBuffered: function getBuffered() {
                    return 0
                },
                getPlayerStat: function getPlayerStat() {
                    return {}
                },
                videoWidth: 0,
                vidoRealWidth: 0,
                vidoRealHeight: 0,
                videoHeight: 0,
                videoAngle: 0,
                src: "",
                starEnterH5Play: 0,
                showFrameTimePoint: 0,
                p2p: "",
                error: 0,
                isRollback: !1,
                isPreload: !1
            }
        };
        function getData() {
            return Be
        }
        function setEnterPlay(e) {
            getData().player.starEnterH5Play = e
        }
        function changeVolumeByKeyboard(e) {
            var t = stateGetIn(["videoModule", "player", "volume"]);
            1 === +e ? t -= .1 : t += .1,
            t < 0 && (t = 0),
            t > 1 && (t = 1),
            getData().player.volume = t,
            xe && xe.refreshPlayer()
        }
        function setVideoReady(e) {
            var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0
              , r = e.getPlayTime
              , i = e.getBuffered
              , o = e.getPlayerStat;
            getData().player.isReady = !0,
            getData().player.isBuffering = !1,
            getData().player.getPlayTime = r,
            getData().player.getBuffered = i,
            getData().player.getPlayerStat = o,
            getData().player.videoWidth = e.getVideoWidth(),
            getData().player.videoHeight = e.getVideoHeight(),
            xe && xe.viewFresh(),
            0 === +t && actionCall({
                id: "loading",
                action: "showLoading",
                data: [!1]
            })
        }
        function P2PRollback() {
            actionCall({
                id: "LoadVideoNet",
                action: "loadVideo",
                data: [{
                    isRollback: !0
                }]
            })
        }
        function udpateVidoReal(e, t) {
            getData().player.vidoRealWidth = e,
            getData().player.vidoRealHeight = t
        }
        function setByteCount(e) {
            getData().byteCount = e
        }
        function changeVolume(e) {
            getData().player.volume = e,
            xe && xe.refreshPlayer()
        }
        function setPlay(e, t) {
            getData().player.isPlay !== e && (getData().player.isPlay = e,
            xe && xe.refreshPlayer(),
            e && actionCall({
                id: "LoadVideoNet",
                action: "reloadVideo",
                data: [{
                    manual: t
                }]
            }))
        }
        function refeshplayerStreamNameAndStatus(e, t) {
            getData().player.multiratesName = e,
            getData().player.streamStatus = t
        }
        function refeshplayerSrc(e) {
            var t = getData().player.src;
            getData().player.src = e,
            xe && t !== e && xe.SrcFresh()
        }
        function refeshplayerisPlay(e) {
            getData().player.isPlay = e,
            xe && xe.refreshPlayer()
        }
        function refeshplayerisRollback(e) {
            getData().player.isRollback = e
        }
        function refeshplayerP2p(e) {
            getData().player.p2p = e
        }
        function refeshplayerP2pData(e) {
            for (var t in e)
                getData().player[t] = e[t]
        }
        function changeHaveShowVideoState() {
            getData().haveShowVideo = !0
        }
        function setPlayerError(e) {
            getData().player.error = e
        }
        function upView(e) {
            xe = e
        }
        function initData() {
            Be = {
                byteCount: 0,
                haveShowVideo: !1,
                player: {
                    isReady: !1,
                    isPlay: !0,
                    volume: getIsHostlive() ? 0 : get(T.player_storage_volume, .5),
                    getPlayTime: function getPlayTime() {
                        return 0
                    },
                    getBuffered: function getBuffered() {
                        return 0
                    },
                    getPlayerStat: function getPlayerStat() {
                        return {}
                    },
                    videoWidth: 0,
                    vidoRealWidth: 0,
                    vidoRealHeight: 0,
                    videoHeight: 0,
                    videoAngle: 0,
                    src: "",
                    starEnterH5Play: 0,
                    showFrameTimePoint: 0,
                    p2p: "",
                    error: 0,
                    isRollback: !1,
                    isPreload: !1
                }
            }
        }
        var Fe = r("0fa6e");
        function Player_inherits(e, t) {
            if ("function" !== typeof t && null !== t)
                throw new TypeError("Super expression must either be null or a function, not " + typeof t);
            e.prototype = Object.create(t && t.prototype, {
                constructor: {
                    value: e,
                    enumerable: !1,
                    writable: !0,
                    configurable: !0
                }
            }),
            t && (Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : function Player_defaults(e, t) {
                for (var r = Object.getOwnPropertyNames(t), i = 0; i < r.length; i++) {
                    var o = r[i]
                      , a = Object.getOwnPropertyDescriptor(t, o);
                    a && a.configurable && void 0 === e[o] && Object.defineProperty(e, o, a)
                }
                return e
            }(e, t))
        }
        var Ve, je, Ne, Ge, Ue, He, We = function(e) {
            function Player(t, r) {
                !function Player_classCallCheck(e, t) {
                    if (!(e instanceof t))
                        throw new TypeError("Cannot call a class as a function")
                }(this, Player);
                var i = function Player_possibleConstructorReturn(e, t) {
                    if (!e)
                        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                    return !t || "object" !== typeof t && "function" !== typeof t ? e : t
                }(this, e.call(this));
                return i.tag = "Player",
                i.ready = !1,
                i.src = t,
                i.options = r,
                bindAll(i, Player.prototype),
                bindAll(i),
                i
            }
            return Player_inherits(Player, e),
            Player.prototype.attachMedia = function attachMedia(e) {
                this.video = e,
                this.video.ondurationchange = this.ondurationchange,
                this.video.onended = this.onended,
                this.video.onprogress = this.onprogress,
                this.video.onwaiting = this.onwaiting,
                this.video.onseeking = this.onseeking,
                this.video.onseeked = this.onseeked,
                this.video.oncanplay = this.oncanplay
            }
            ,
            Player.prototype.detachMedia = function detachMedia() {
                this.removeAllListeners(),
                this.video = null
            }
            ,
            Player.prototype.removeAllListeners = function removeAllListeners(t) {
                e.prototype.removeAllListeners.call(this, t),
                this.video && (this.video.ondurationchange = void 0,
                this.video.onended = void 0,
                this.video.onprogress = void 0,
                this.video.onwaiting = void 0,
                this.video.onseeking = void 0,
                this.video.onseeked = void 0,
                this.video.oncanplay = void 0,
                this.video = void 0)
            }
            ,
            Player.prototype.ondurationchange = function ondurationchange() {
                this.emit(rt.DURATION_CHANGE, this.video.duration)
            }
            ,
            Player.prototype.onended = function onended() {
                this.emit(rt.COMPLETE)
            }
            ,
            Player.prototype.onprogress = function onprogress() {
                this.emit(rt.BUFFER_PROGRESS)
            }
            ,
            Player.prototype.onwaiting = function onwaiting() {
                this.emit(rt.BUFFER_EMPTY)
            }
            ,
            Player.prototype.oncanplay = function oncanplay() {
                this.emit(rt.BUFFER_FULL),
                this.ready || (this.ready = !0,
                this.emit(rt.READY))
            }
            ,
            Player.prototype.onseeking = function onseeking() {}
            ,
            Player.prototype.onseeked = function onseeked() {}
            ,
            Player.prototype.onerror = function onerror() {}
            ,
            Player.prototype.load = function load() {}
            ,
            Player.prototype.play = function play() {
                var e = this;
                if (this.video) {
                    var t = this.video.play();
                    t && t.catch(function(t) {
                        var r = t.toString();
                        -1 === r.indexOf("play() failed because the user didn't interact with the document first") && -1 === r.indexOf("The play method is not allowed by the user agent or the platform in the current context, possibly because the user denied permission") || e.emit(rt.CANAUTO_PLAY)
                    })
                }
            }
            ,
            Player.prototype.pause = function pause() {
                this.video && this.video.pause()
            }
            ,
            Player.prototype.seek = function seek(e) {
                this.video && this.ready && (this.video.currentTime = e)
            }
            ,
            Player.prototype.dispose = function dispose() {
                this.ready = !1,
                this.removeAllListeners(),
                this.detachMedia()
            }
            ,
            Player.prototype.volume = function volume(e) {
                return "number" !== typeof e ? this.video ? this.video.volume : 1 : (this.video && (this.video.volume = e),
                1)
            }
            ,
            Player.prototype.getPlayTime = function getPlayTime() {
                return this.video ? this.video.currentTime : 0
            }
            ,
            Player.prototype.getBuffered = function getBuffered() {
                return this.video && this.video.buffered.length > 0 ? this.video.buffered.end(this.video.buffered.length - 1) : 0
            }
            ,
            Player.prototype.getVideoWidth = function getVideoWidth() {
                return this.video ? this.video.videoWidth : 0
            }
            ,
            Player.prototype.getVideoHeight = function getVideoHeight() {
                return this.video ? this.video.videoHeight : 0
            }
            ,
            Player.prototype.getPlayerStat = function getPlayerStat() {
                return {
                    mediaInfo: this.mediaInfo,
                    statInfo: this.statInfo
                }
            }
            ,
            Player.prototype._error = function _error(e) {
                var t = this;
                !function callLater(e) {
                    setTimeout(e, 0)
                }(function() {
                    t.emit(rt.ERROR, e)
                })
            }
            ,
            Player
        }(s.EventEmitter);
        function P2PError_classCallCheck(e, t) {
            if (!(e instanceof t))
                throw new TypeError("Cannot call a class as a function")
        }
        function P2PError_possibleConstructorReturn(e, t) {
            if (!e)
                throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            return !t || "object" !== typeof t && "function" !== typeof t ? e : t
        }
        function P2PError_inherits(e, t) {
            if ("function" !== typeof t && null !== t)
                throw new TypeError("Super expression must either be null or a function, not " + typeof t);
            e.prototype = Object.create(t && t.prototype, {
                constructor: {
                    value: e,
                    enumerable: !1,
                    writable: !0,
                    configurable: !0
                }
            }),
            t && (Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : function P2PError_defaults(e, t) {
                for (var r = Object.getOwnPropertyNames(t), i = 0; i < r.length; i++) {
                    var o = r[i]
                      , a = Object.getOwnPropertyDescriptor(t, o);
                    a && a.configurable && void 0 === e[o] && Object.defineProperty(e, o, a)
                }
                return e
            }(e, t))
        }
        var qe = (je = Ve = function(e) {
            function P2PInitError() {
                P2PError_classCallCheck(this, P2PInitError);
                for (var t = arguments.length, r = Array(t), i = 0; i < t; i++)
                    r[i] = arguments[i];
                var o = P2PError_possibleConstructorReturn(this, e.call.apply(e, [this].concat(r)));
                return o.name = P2PInitError.NAME,
                o
            }
            return P2PError_inherits(P2PInitError, e),
            P2PInitError
        }(Error),
        Ve.NAME = "P2PInitError",
        je)
          , Ye = (Ge = Ne = function(e) {
            function P2PRollbackError() {
                P2PError_classCallCheck(this, P2PRollbackError);
                for (var t = arguments.length, r = Array(t), i = 0; i < t; i++)
                    r[i] = arguments[i];
                var o = P2PError_possibleConstructorReturn(this, e.call.apply(e, [this].concat(r)));
                return o.name = P2PRollbackError.NAME,
                o.eCode = r.length > 1 ? r[1] : 0,
                o
            }
            return P2PError_inherits(P2PRollbackError, e),
            P2PRollbackError
        }(Error),
        Ne.NAME = "P2PRollbackError",
        Ge)
          , ze = (He = Ue = function(e) {
            function P2PStreamNotFound() {
                P2PError_classCallCheck(this, P2PStreamNotFound);
                for (var t = arguments.length, r = Array(t), i = 0; i < t; i++)
                    r[i] = arguments[i];
                var o = P2PError_possibleConstructorReturn(this, e.call.apply(e, [this].concat(r)));
                return o.name = P2PStreamNotFound.NAME,
                o
            }
            return P2PError_inherits(P2PStreamNotFound, e),
            P2PStreamNotFound
        }(Error),
        Ue.NAME = "P2PStreamNotFound",
        He);
        function QQLoader_possibleConstructorReturn(e, t) {
            if (!e)
                throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            return !t || "object" !== typeof t && "function" !== typeof t ? e : t
        }
        function QQLoader_inherits(e, t) {
            if ("function" !== typeof t && null !== t)
                throw new TypeError("Super expression must either be null or a function, not " + typeof t);
            e.prototype = Object.create(t && t.prototype, {
                constructor: {
                    value: e,
                    enumerable: !1,
                    writable: !0,
                    configurable: !0
                }
            }),
            t && (Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : function QQLoader_defaults(e, t) {
                for (var r = Object.getOwnPropertyNames(t), i = 0; i < r.length; i++) {
                    var o = r[i]
                      , a = Object.getOwnPropertyDescriptor(t, o);
                    a && a.configurable && void 0 === e[o] && Object.defineProperty(e, o, a)
                }
                return e
            }(e, t))
        }
        var $e = function(e) {
            function QQLoader() {
                var t, r;
                !function QQLoader_classCallCheck(e, t) {
                    if (!(e instanceof t))
                        throw new TypeError("Cannot call a class as a function")
                }(this, QQLoader);
                for (var i = arguments.length, o = Array(i), a = 0; a < i; a++)
                    o[a] = arguments[a];
                return t = r = QQLoader_possibleConstructorReturn(this, e.call.apply(e, [this].concat(o))),
                r.sdk = "https://xp2p-1255868781.file.myqcloud.com/xp2psdk/h5/douyu/qvbp2p.js",
                r.isSdkLoad = !1,
                r._cdnBytes = 0,
                r._p2pBytes = 0,
                r._beginGetSdkTime = 0,
                r._GetSdkTime = 0,
                r._60scdnBytes = 0,
                r._60sp2pBytes = 0,
                r._url = "",
                QQLoader_possibleConstructorReturn(r, t)
            }
            return QQLoader_inherits(QQLoader, e),
            QQLoader.prototype.load = function load(t, i) {
                var o = this;
                if (e.prototype.load.call(this, t, i),
                this.isSdkLoad) {
                    if (!window.QVBP2P) {
                        var a = "qq p2p sdk init error.";
                        return h.warn(a),
                        void (this.onError && this.onError(new qe(a)))
                    }
                    if (!window.QVBP2P.isSupported()) {
                        var n = "qq p2p not support";
                        return h.warn(n),
                        void (this.onError && this.onError(new qe(n)))
                    }
                    window.qvbp2p && (window.qvbp2p.destroy(),
                    window.qvbp2p = null),
                    window.qvbp2p = new window.QVBP2P({
                        debug: getIsDebug()
                    }),
                    window.qvbp2p.listen(window.QVBP2P.ComEvents.STATE_CHANGE, this._onStateChange),
                    window.qvbp2p.loadSource({
                        videoId: k,
                        src: t
                    }),
                    this._url = t,
                    this.report()
                } else {
                    this.isSdkLoad = !0,
                    this._beginGetSdkTime = (new Date).getTime();
                    var s = +stateGetIn(["app", "rid"]);
                    4258555 === s || 78561 === s ? runGlobalJs({
                        url: this.sdk
                    }).then(function() {
                        o.load(t),
                        o._GetSdkTime = (new Date).getTime(),
                        me.emit(Z, {
                            bt: o._beginGetSdkTime,
                            et: o._GetSdkTime
                        })
                    }).catch(function() {
                        o.load(t)
                    }) : r.e(3).then(r.t.bind(null, "a193e", 7)).then(function() {
                        o.load(t),
                        o._GetSdkTime = (new Date).getTime(),
                        me.emit(Z, {
                            bt: o._beginGetSdkTime,
                            et: o._GetSdkTime
                        })
                    }).catch(function(e) {
                        h.warn("qqv1.0.0 p2p sdk load error.", e),
                        o.load(t)
                    })
                }
            }
            ,
            QQLoader.prototype.report = function report() {
                var e = this;
                this.reportTimer = setInterval(function() {
                    e._sendTxllMsg(e._60scdnBytes, e._60sp2pBytes, e._url),
                    e._60scdnBytes = 0,
                    e._60sp2pBytes = 0
                }, 6e4)
            }
            ,
            QQLoader.prototype.dispose = function dispose() {
                window.qvbp2p && (window.qvbp2p.destroy(),
                window.qvbp2p = null),
                this.reportTimer && clearInterval(this.reportTimer),
                e.prototype.dispose.call(this)
            }
            ,
            QQLoader.prototype.getStatistics = function getStatistics() {
                if (window.qvbp2p && window.qvbp2p.getStatistics) {
                    var e = window.qvbp2p.getStatistics()
                      , t = e.cdnBytes
                      , r = e.p2pReceiveBytes;
                    this._cdnBytes += t,
                    this._p2pBytes += r,
                    this._60scdnBytes += t,
                    this._60sp2pBytes += r
                }
                return {
                    loaderBytes: this._loaderBytes,
                    cdnBytes: this._cdnBytes,
                    p2pBytes: this._p2pBytes
                }
            }
            ,
            QQLoader.prototype._onStateChange = function _onStateChange(e, t) {
                var r = window.QVBP2P.ComCodes;
                switch (t.code) {
                case r.RECEIVE_BUFFER:
                    this._receiveBuffer(t.payload);
                    break;
                case r.ROLLBACK:
                    this._rollback(t.player, t.rollbackReason);
                    break;
                case r.END_OF_STREAM:
                    this._onEnd();
                    break;
                case r.STREAM_NOT_FOUND:
                    this._streamNotFound()
                }
            }
            ,
            QQLoader.prototype._receiveBuffer = function _receiveBuffer(e) {
                this._onData(e)
            }
            ,
            QQLoader.prototype._onEnd = function _onEnd() {
                this.onEnd && this.onEnd()
            }
            ,
            QQLoader.prototype._rollback = function _rollback(e, t) {
                this.onError && this.onError(new Ye("p2p error, rollback.",t)),
                this.dispose()
            }
            ,
            QQLoader.prototype._streamNotFound = function _streamNotFound() {
                this.onError && this.onError(new ze("p2p error, stream not found.")),
                this.dispose()
            }
            ,
            QQLoader.prototype._sendTxllMsg = function _sendTxllMsg(e, t, r) {
                var i = +stateGetIn(["app", "rid"]);
                2935323 !== i && 7179465 !== i && 52787 !== i && 1409682 !== i || a.httpClient.post(String, "https://p2plog.douyucdn.cn/tencentlogreport", {
                    cdnBytes: e,
                    p2pBytes: t,
                    url: r,
                    rid: i
                }, {
                    headers: {
                        "content-type": "application/json"
                    }
                })
            }
            ,
            QQLoader
        }(Fe.BaseLoader);
        function WSLoader_possibleConstructorReturn(e, t) {
            if (!e)
                throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            return !t || "object" !== typeof t && "function" !== typeof t ? e : t
        }
        function WSLoader_inherits(e, t) {
            if ("function" !== typeof t && null !== t)
                throw new TypeError("Super expression must either be null or a function, not " + typeof t);
            e.prototype = Object.create(t && t.prototype, {
                constructor: {
                    value: e,
                    enumerable: !1,
                    writable: !0,
                    configurable: !0
                }
            }),
            t && (Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : function WSLoader_defaults(e, t) {
                for (var r = Object.getOwnPropertyNames(t), i = 0; i < r.length; i++) {
                    var o = r[i]
                      , a = Object.getOwnPropertyDescriptor(t, o);
                    a && a.configurable && void 0 === e[o] && Object.defineProperty(e, o, a)
                }
                return e
            }(e, t))
        }
        var Xe = function(e) {
            function WSLoader() {
                var t, r;
                !function WSLoader_classCallCheck(e, t) {
                    if (!(e instanceof t))
                        throw new TypeError("Cannot call a class as a function")
                }(this, WSLoader);
                for (var i = arguments.length, o = Array(i), a = 0; a < i; a++)
                    o[a] = arguments[a];
                return t = r = WSLoader_possibleConstructorReturn(this, e.call.apply(e, [this].concat(o))),
                r.sdk = "https://www.vod.lxdns.com/html5/douyu.com/whprelease.js",
                r.isSdkLoad = !1,
                r._cdnBytes = 0,
                r._p2pBytes = 0,
                r._beginGetSdkTime = 0,
                r._GetSdkTime = 0,
                WSLoader_possibleConstructorReturn(r, t)
            }
            return WSLoader_inherits(WSLoader, e),
            WSLoader.prototype.load = function load(t, i) {
                var o = this;
                if (e.prototype.load.call(this, t, i),
                !this.isSdkLoad) {
                    var a = +stateGetIn(["app", "rid"]);
                    return this.isSdkLoad = !0,
                    this._beginGetSdkTime = (new Date).getTime(),
                    void (122402 === a || 5551065 === a || 606118 === a || 1863767 === a || 5382830 === a || 4549169 === a ? runGlobalJs({
                        url: this.sdk
                    }).then(function() {
                        o.load(t),
                        o._GetSdkTime = (new Date).getTime(),
                        me.emit(Z, {
                            bt: o._beginGetSdkTime,
                            et: o._GetSdkTime
                        })
                    }).catch(function(e) {
                        h.warn("ws sdk yuanduan load error.", e),
                        o.load(t)
                    }) : r.e(0).then(r.t.bind(null, "0cb01", 7)).then(function() {
                        o.load(t),
                        o._GetSdkTime = (new Date).getTime(),
                        me.emit(Z, {
                            bt: o._beginGetSdkTime,
                            et: o._GetSdkTime
                        })
                    }).catch(function() {
                        h.warn("WS 3.0p2p sdk init error."),
                        o.load(t)
                    }))
                }
                if (!window.wshp2p) {
                    var n = "WS p2p sdk init error.";
                    return h.warn(n),
                    void (this.onError && this.onError(new qe(n)))
                }
                if (!window.wshp2p.isSupported()) {
                    var s = "WS p2p not support";
                    return h.warn(s),
                    void (this.onError && this.onError(new qe(s)))
                }
                this.wshp2pload && (this.wshp2pload.close(),
                this.wshp2pload = null);
                var d = {
                    vedio: document.getElementById(k),
                    customid: "douyu.com",
                    url: t
                };
                this.wshp2pload = new window.wshp2p.p2pLive,
                this.wshp2pload.rollback = this.rollbackHandle,
                this.wshp2pload.dataarrival = this.dataarrivalHandle,
                this.wshp2pload.open(d)
            }
            ,
            WSLoader.prototype.dispose = function dispose() {
                this.wshp2pload && (this.wshp2pload.close(),
                this.wshp2pload = null),
                e.prototype.dispose.call(this)
            }
            ,
            WSLoader.prototype.rollbackHandle = function rollbackHandle(e) {
                this._rollback(e)
            }
            ,
            WSLoader.prototype.dataarrivalHandle = function dataarrivalHandle(e) {
                this._receiveBuffer(e)
            }
            ,
            WSLoader.prototype.getStatistics = function getStatistics() {
                if (this.wshp2pload) {
                    var e = this.wshp2pload.infoget()
                      , t = e.http_bytesLoaded
                      , r = e.p2p_bytesLoaded;
                    this._cdnBytes += t,
                    this._p2pBytes += r
                }
                return {
                    loaderBytes: this._loaderBytes,
                    cdnBytes: this._cdnBytes,
                    p2pBytes: this._p2pBytes
                }
            }
            ,
            WSLoader.prototype._receiveBuffer = function _receiveBuffer(e) {
                this._onData(e)
            }
            ,
            WSLoader.prototype._rollback = function _rollback(e) {
                this.onError && this.onError(new Ye("p2p error, rollback.",e)),
                this.dispose()
            }
            ,
            WSLoader
        }(Fe.BaseLoader);
        function XYLoader_possibleConstructorReturn(e, t) {
            if (!e)
                throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            return !t || "object" !== typeof t && "function" !== typeof t ? e : t
        }
        function XYLoader_inherits(e, t) {
            if ("function" !== typeof t && null !== t)
                throw new TypeError("Super expression must either be null or a function, not " + typeof t);
            e.prototype = Object.create(t && t.prototype, {
                constructor: {
                    value: e,
                    enumerable: !1,
                    writable: !0,
                    configurable: !0
                }
            }),
            t && (Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : function XYLoader_defaults(e, t) {
                for (var r = Object.getOwnPropertyNames(t), i = 0; i < r.length; i++) {
                    var o = r[i]
                      , a = Object.getOwnPropertyDescriptor(t, o);
                    a && a.configurable && void 0 === e[o] && Object.defineProperty(e, o, a)
                }
                return e
            }(e, t))
        }
        var Qe = function(e) {
            function XYLoader() {
                var t, r;
                !function XYLoader_classCallCheck(e, t) {
                    if (!(e instanceof t))
                        throw new TypeError("Cannot call a class as a function")
                }(this, XYLoader);
                for (var i = arguments.length, o = Array(i), a = 0; a < i; a++)
                    o[a] = arguments[a];
                return t = r = XYLoader_possibleConstructorReturn(this, e.call.apply(e, [this].concat(o))),
                r.sdk = "https://static.galaxyclouds.cn/0.0.1/kiwi.min.js",
                r.isSdkLoad = !1,
                r._cdnBytes = 0,
                r._p2pBytes = 0,
                r._beginGetSdkTime = 0,
                r._GetSdkTime = 0,
                XYLoader_possibleConstructorReturn(r, t)
            }
            return XYLoader_inherits(XYLoader, e),
            XYLoader.prototype.load = function load(t, i) {
                var o = this;
                if (e.prototype.load.call(this, t, i),
                !this.isSdkLoad)
                    return this.isSdkLoad = !0,
                    this._beginGetSdkTime = (new Date).getTime(),
                    void r.e(2).then(r.t.bind(null, "6b4b2", 7)).then(function() {
                        o.load(t),
                        o._GetSdkTime = (new Date).getTime(),
                        me.emit(Z, {
                            bt: o._beginGetSdkTime,
                            et: o._GetSdkTime
                        })
                    }).catch(function() {
                        h.warn("XY p2p sdk init error."),
                        o.load(t)
                    });
                if (!window.KiwiJs) {
                    var a = "XY p2p sdk init error.";
                    return h.warn(a),
                    void (this.onError && this.onError(new qe(a)))
                }
                if (!window.KiwiJs.isSupported()) {
                    var n = "XY p2p not support";
                    return h.warn(n),
                    void (this.onError && this.onError(new qe(n)))
                }
                this.xyp2pload && (this.xyp2pload.destroy(),
                this.xyp2pload = null),
                this.xyp2pload = new window.KiwiJs({
                    appid: "589ac3b89be5e8493fd1b336",
                    secret: "MAdVFu",
                    url: t,
                    only_data: !0,
                    media_id: k,
                    rollback: this.rollbackHandle,
                    log_level: getIsDebug() ? "debug" : void 0
                }),
                this.xyp2pload.on("data", this.dataarrivalHandle),
                this.xyp2pload.on("reset", this.rollbackHandle),
                this.xyp2pload.play()
            }
            ,
            XYLoader.prototype.dispose = function dispose() {
                this.xyp2pload && (this.xyp2pload.destroy(),
                this.xyp2pload = null),
                e.prototype.dispose.call(this)
            }
            ,
            XYLoader.prototype.rollbackHandle = function rollbackHandle() {
                this._rollback()
            }
            ,
            XYLoader.prototype.dataarrivalHandle = function dataarrivalHandle(e) {
                this._receiveBuffer(e.buffer)
            }
            ,
            XYLoader.prototype.getStatistics = function getStatistics() {
                if (this.xyp2pload) {
                    var e = this.xyp2pload.getStatistics();
                    this._cdnBytes += e.cdnBytes,
                    this._p2pBytes += e.p2pBytes
                }
                return {
                    loaderBytes: this._loaderBytes,
                    cdnBytes: this._cdnBytes,
                    p2pBytes: this._p2pBytes
                }
            }
            ,
            XYLoader.prototype._receiveBuffer = function _receiveBuffer(e) {
                this._onData(e)
            }
            ,
            XYLoader.prototype._rollback = function _rollback() {
                this.onError && this.onError(new Ye("p2p error, rollback.")),
                this.dispose()
            }
            ,
            XYLoader
        }(Fe.BaseLoader);
        var Je = new (function() {
            function SharkLoader() {
                !function SharkLoader_classCallCheck(e, t) {
                    if (!(e instanceof t))
                        throw new TypeError("Cannot call a class as a function")
                }(this, SharkLoader),
                this.body = document.getElementsByTagName("body")[0],
                this.loader = document.createElement("div"),
                this.loader.setAttribute("data-module", "loader"),
                this.loader.style.display = "none",
                this.body.appendChild(this.loader)
            }
            return SharkLoader.prototype.loadDynamicJs = function loadDynamicJs(e, t) {
                var r = document.createElement("script");
                r.type = "text/javascript",
                r.charset = "UTF-8",
                -1 === e.toLowerCase().indexOf("sta-op.douyucdn") && -1 === e.toLowerCase().indexOf("sta-op-test.douyucdn") || (r.crossOrigin = "anonymous"),
                r.readyState ? r.onreadystatechange = function() {
                    "loaded" !== r.readyState && "complete" !== r.readyState || (r.onreadystatechange = null,
                    t && t())
                }
                : (r.onload = function() {
                    t && t()
                }
                ,
                r.onerror = function(e) {
                    t && t(e)
                }
                ),
                r.src = e,
                this.loader.appendChild(r)
            }
            ,
            SharkLoader
        }())
          , Ke = function() {
            function defineProperties(e, t) {
                for (var r = 0; r < t.length; r++) {
                    var i = t[r];
                    i.enumerable = i.enumerable || !1,
                    i.configurable = !0,
                    "value"in i && (i.writable = !0),
                    Object.defineProperty(e, i.key, i)
                }
            }
            return function(e, t, r) {
                return t && defineProperties(e.prototype, t),
                r && defineProperties(e, r),
                e
            }
        }();
        function DYLoader_inherits(e, t) {
            if ("function" !== typeof t && null !== t)
                throw new TypeError("Super expression must either be null or a function, not " + typeof t);
            e.prototype = Object.create(t && t.prototype, {
                constructor: {
                    value: e,
                    enumerable: !1,
                    writable: !0,
                    configurable: !0
                }
            }),
            t && (Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : function DYLoader_defaults(e, t) {
                for (var r = Object.getOwnPropertyNames(t), i = 0; i < r.length; i++) {
                    var o = r[i]
                      , a = Object.getOwnPropertyDescriptor(t, o);
                    a && a.configurable && void 0 === e[o] && Object.defineProperty(e, o, a)
                }
                return e
            }(e, t))
        }
        var Ze = function(e) {
            function DYLoader() {
                !function DYLoader_classCallCheck(e, t) {
                    if (!(e instanceof t))
                        throw new TypeError("Cannot call a class as a function")
                }(this, DYLoader);
                var t = function DYLoader_possibleConstructorReturn(e, t) {
                    if (!e)
                        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                    return !t || "object" !== typeof t && "function" !== typeof t ? e : t
                }(this, e.call(this));
                t.isSdkLoad = !1,
                t._cdnBytes = 0,
                t._p2pBytes = 0,
                t._beginGetSdkTime = 0,
                t._GetSdkTime = 0,
                t._useXp2p = !1,
                t._useRawPlay = !1;
                var r = stateGetIn(["videoModule", "player", "p2pMeta"]);
                return t._useXp2p = r && r.xp2p_txSecret && r.xp2p_txTime && r.xp2p_domain && r.xp2p_subs_domain,
                t._useRawPlay = !t._useXp2p,
                t
            }
            return DYLoader_inherits(DYLoader, e),
            Ke(DYLoader, [{
                key: "supportRaw",
                get: function get() {
                    return this._useRawPlay
                }
            }]),
            DYLoader.prototype.load = function load(t, r) {
                var i = this;
                e.prototype.load.call(this, t, r);
                var o = stateGetIn(["videoModule", "player", "p2pMeta"])
                  , a = this._useXp2p ? window.DyP2PX : window.DyP2P;
                if (!a && !this.isSdkLoad) {
                    this.isSdkLoad = !0,
                    this._beginGetSdkTime = (new Date).getTime();
                    var n = void 0;
                    return this._useXp2p ? (h.log("load dyp2pxp2p"),
                    n = window.streamSdkXP2P) : (h.log("load dyp2pzl"),
                    n = window.streamSdkZL),
                    void Je.loadDynamicJs(n, function(e) {
                        if (e) {
                            h.warn("DY p2p sdk init error."),
                            i.load(t)
                        } else
                            i.load(t),
                            i._GetSdkTime = (new Date).getTime(),
                            me.emit(Z, {
                                bt: i._beginGetSdkTime,
                                et: i._GetSdkTime
                            })
                    })
                }
                if (!a) {
                    var s = "DY p2p sdk init error.";
                    return h.warn(s),
                    void (this.onError && this.onError(new qe(s)))
                }
                if (!a.isSupported()) {
                    var d = "DY p2p not support";
                    return h.warn(d),
                    void (this.onError && this.onError(new qe(d)))
                }
                this.xyp2pload && (this.xyp2pload.destroy(),
                this.xyp2pload = null);
                var u = stateGetIn(["videoModule", "player", "p2pCids"]);
                this.xyp2pload = new a({
                    appid: "589ac3b89be5e8493fd1b336",
                    secret: "MAdVFu",
                    url: t,
                    p2pCids: u,
                    p2pMeta: o,
                    only_data: !0,
                    media_id: k,
                    rollback: this.rollbackHandle,
                    log_level: getIsDebug() ? "debug" : void 0,
                    logLevel: getIsDebug() ? 3 : void 0
                }),
                this.xyp2pload.on("data", this.dataarrivalHandle),
                this.xyp2pload.on("reset", this.rollbackHandle),
                this.xyp2pload.play()
            }
            ,
            DYLoader.prototype.dispose = function dispose() {
                this.xyp2pload && (this.xyp2pload.destroy(),
                this.xyp2pload = null),
                e.prototype.dispose.call(this)
            }
            ,
            DYLoader.prototype.rollbackHandle = function rollbackHandle(e, t) {
                t && (window.p2pComeBackinfo = t),
                this._rollback()
            }
            ,
            DYLoader.prototype.dataarrivalHandle = function dataarrivalHandle(e) {
                this._receiveBuffer(this._useRawPlay ? e : e.buffer)
            }
            ,
            DYLoader.prototype.getStatistics = function getStatistics() {
                if (this.xyp2pload) {
                    var e = this.xyp2pload.getStatistics();
                    this._cdnBytes += e.cdnBytes,
                    this._p2pBytes += e.p2pBytes,
                    this._dropBytes = e.totalDropBytes ? e.totalDropBytes : 0
                }
                return {
                    loaderBytes: this._loaderBytes,
                    cdnBytes: this._cdnBytes,
                    p2pBytes: this._p2pBytes,
                    totalDropBytes: this._dropBytes
                }
            }
            ,
            DYLoader.prototype._receiveBuffer = function _receiveBuffer(e) {
                this._onData(e)
            }
            ,
            DYLoader.prototype._rollback = function _rollback() {
                this._onError(new Ye("p2p error, rollback.")),
                this.dispose()
            }
            ,
            DYLoader
        }(Fe.BaseLoader)
          , et = function() {
            function defineProperties(e, t) {
                for (var r = 0; r < t.length; r++) {
                    var i = t[r];
                    i.enumerable = i.enumerable || !1,
                    i.configurable = !0,
                    "value"in i && (i.writable = !0),
                    Object.defineProperty(e, i.key, i)
                }
            }
            return function(e, t, r) {
                return t && defineProperties(e.prototype, t),
                r && defineProperties(e, r),
                e
            }
        }();
        function LivePlayer_inherits(e, t) {
            if ("function" !== typeof t && null !== t)
                throw new TypeError("Super expression must either be null or a function, not " + typeof t);
            e.prototype = Object.create(t && t.prototype, {
                constructor: {
                    value: e,
                    enumerable: !1,
                    writable: !0,
                    configurable: !0
                }
            }),
            t && (Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : function LivePlayer_defaults(e, t) {
                for (var r = Object.getOwnPropertyNames(t), i = 0; i < r.length; i++) {
                    var o = r[i]
                      , a = Object.getOwnPropertyDescriptor(t, o);
                    a && a.configurable && void 0 === e[o] && Object.defineProperty(e, o, a)
                }
                return e
            }(e, t))
        }
        var tt = function(e) {
            function FlvPlayer(t, r) {
                !function LivePlayer_classCallCheck(e, t) {
                    if (!(e instanceof t))
                        throw new TypeError("Cannot call a class as a function")
                }(this, FlvPlayer);
                var i = function LivePlayer_possibleConstructorReturn(e, t) {
                    if (!e)
                        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                    return !t || "object" !== typeof t && "function" !== typeof t ? e : t
                }(this, e.call(this, t, r));
                i.tag = "FlvPlayer",
                i._createPlayer(t);
                var o = (new Date).getTime();
                return me.emit(ee, {
                    sdkok: o
                }),
                i
            }
            return LivePlayer_inherits(FlvPlayer, e),
            FlvPlayer.prototype._createPlayer = function _createPlayer(e) {
                var t = this;
                this.dispose();
                var r = {
                    url: e,
                    enableWorker: !0,
                    debug: getIsDebug()
                };
                if (this.options) {
                    switch (this.options.p2p) {
                    case A.QQ:
                        r.loader = new $e;
                        break;
                    case A.WS:
                        r.loader = new Xe;
                        break;
                    case A.XY:
                        r.loader = new Qe;
                        break;
                    case A.DOUYU:
                        var i = new Ze;
                        i.supportRaw && (r.format = "raw"),
                        r.loader = i
                    }
                    void 0 !== this.options.hasVideo && (r.hasVideo = this.options.hasVideo),
                    void 0 !== this.options.hasAudio && (r.hasAudio = this.options.hasAudio)
                }
                this.player = new Fe.LivePlayer(r),
                this.player && (this.player.on(Fe.PlayerEvents.ON_MEDIA_INFO, function(e) {
                    h.log("ON_MEDIA_INFO: ", e),
                    t.mediaInfo = e
                }),
                this.player.on(Fe.PlayerEvents.ON_FIRST_FRAME, function() {
                    t.emit(rt.FIRST_FRAME)
                }),
                this.player.on(Fe.PlayerEvents.ON_ERROR, function(e) {
                    t._error(e)
                }),
                this.player.on(Fe.PlayerEvents.ON_SEI, function(e) {
                    h.log("ON_SEI: ", e),
                    5 === e.seiType && "RoiMaskSeiV00001" === e.seiData.uuid && actionCall({
                        id: "comment",
                        action: "seiMcdatachange",
                        data: [e.seiData.data]
                    }),
                    t.emit(rt.ON_SEI, e)
                }),
                this.player.on(Fe.PlayerEvents.ON_AAC_DATA, function(e) {
                    h.log("ON_AAC_DATA: ", e);
                    var r = Date.now();
                    r - (t.aacTimeFlag || 0) > 1e3 && (t.emit(rt.ON_AAC_DATA, e),
                    t.aacTimeFlag = r)
                }))
            }
            ,
            FlvPlayer.prototype.attachMedia = function attachMedia(t) {
                e.prototype.attachMedia.call(this, t),
                this.player && this.player.attach(t)
            }
            ,
            FlvPlayer.prototype.detachMedia = function detachMedia() {
                this.player && this.player.detach(),
                e.prototype.detachMedia.call(this)
            }
            ,
            FlvPlayer.prototype.load = function load() {
                this.player && this.player.load()
            }
            ,
            FlvPlayer.prototype.dispose = function dispose() {
                this.player && (this.player.dispose(),
                this.player = null),
                e.prototype.dispose.call(this)
            }
            ,
            et(FlvPlayer, [{
                key: "statInfo",
                get: function get() {
                    return this.player && this.player.getStatInfo()
                }
            }]),
            FlvPlayer
        }(We);
        function player_createPlayer(e, t) {
            return new tt(e,t)
        }
        var rt = {
            ERROR: "ERROR",
            FIRST_FRAME: "FIRST_FRAME",
            READY: "READY",
            BUFFER_EMPTY: "BUFFER_EMPTY",
            BUFFER_FULL: "BUFFER_FULL",
            BUFFER_PROGRESS: "BUFFER_PROGRESS",
            COMPLETE: "COMPLETE",
            DURATION_CHANGE: "DURATION_CHANGE",
            CANAUTO_PLAY: "CANAUTO_PLAY",
            ON_SEI: "ON_SEI",
            ON_AAC_DATA: "ON_AAC_DATA"
        }
          , it = void 0
          , ot = 0
          , at = void 0
          , nt = 3;
        function isAnotherDay() {
            var e = arguments.length > 0 && void 0 !== arguments[0] && arguments[0]
              , t = get(T.GaoRateTimestamp, 0);
            it || (it = new Date);
            var r = function isNextDay(e, t, r) {
                var i = new Date(t);
                return e < new Date(i.getFullYear(),i.getMonth(),i.getHours() >= r ? i.getDate() : i.getDate() - 1,r).getTime()
            }(t, it.valueOf(), 19);
            return r && e && set(T.GaoRateTimestamp, it.valueOf()),
            r
        }
        function revordTime() {
            ot += 1,
            set(T.RateRecordTime, ot),
            +ot === +nt && (actionCall({
                id: "multiBitRate",
                action: "ChangeRateNotify",
                data: [2]
            }),
            clearInterval(at))
        }
        function switchRateTip(e) {
            var t = stateGetIn(["app", "pageRateSwitch"])
              , r = stateGetIn(["app", "isLogin"]);
            return ot = parseInt(get(T.RateRecordTime, 0), 10),
            isAnotherDay(e) ? 1 === +t && 0 === +r && (e && (clearInterval(at),
            at = setInterval(function() {
                revordTime()
            }, 6e4)),
            !0) : 1 === +t && 0 === +r && ot < nt && (e && (clearInterval(at),
            at = setInterval(function() {
                revordTime()
            }, 6e4)),
            !0)
        }
        function clearRecordRateTimeIDInterval() {
            clearInterval(at)
        }
        var st = "hidden"in document ? "hidden" : "webkitHidden"in document ? "webkitHidden" : "mozHidden"in document ? "mozHidden" : null
          , dt = !1
          , ut = void 0;
        function getIsHidden() {
            if (st)
                return document[st]
        }
        function firstvideo_inherits(e, t) {
            if ("function" !== typeof t && null !== t)
                throw new TypeError("Super expression must either be null or a function, not " + typeof t);
            e.prototype = Object.create(t && t.prototype, {
                constructor: {
                    value: e,
                    enumerable: !1,
                    writable: !0,
                    configurable: !0
                }
            }),
            t && (Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : function firstvideo_defaults(e, t) {
                for (var r = Object.getOwnPropertyNames(t), i = 0; i < r.length; i++) {
                    var o = r[i]
                      , a = Object.getOwnPropertyDescriptor(t, o);
                    a && a.configurable && void 0 === e[o] && Object.defineProperty(e, o, a)
                }
                return e
            }(e, t))
        }
        st && (ut = st.replace(/hidden/i, "visibilitychange"),
        document.addEventListener(ut, function handleVisibilityChange(e) {
            dt || (dt = document[st])
        }, !1));
        var lt = function(e) {
            function Video() {
                !function firstvideo_classCallCheck(e, t) {
                    if (!(e instanceof t))
                        throw new TypeError("Cannot call a class as a function")
                }(this, Video);
                var t = function firstvideo_possibleConstructorReturn(e, t) {
                    if (!e)
                        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                    return !t || "object" !== typeof t && "function" !== typeof t ? e : t
                }(this, e.call(this));
                return t.addindex = 0,
                t.Delayerrindex = 1,
                t.pid = "",
                t.firstReadVide = !0,
                t.lon = 90,
                t.lat = 0,
                t.phi = 0,
                t.theta = 0,
                t.index = 1,
                initData(),
                upView(t),
                t.id = "videoModule",
                t.videoId = k,
                t._byteAnotherTimerID = "",
                t._byteTmp = 0,
                t._byteCount = 0,
                t._byteP2PTmp = 0,
                t._byteP2PCount = 0,
                t.P2PtotalByteCount = 0,
                t.P2PCurrentCount = 0,
                t.inEmpty = !1,
                t.StarEmptyTime = 0,
                t.StarFullTime = 0,
                t.totalEmptyTime = 0,
                t.emptyCount = 0,
                t.fullCount = 0,
                t.hasNetStream = !1,
                t.failTimeIndex = 0,
                t.playTimeIndex = 0,
                t.showFrameTimePoint = 0,
                t.aliNotified = !1,
                t.hasP2PRollback = !1,
                t.videoRealWidth = 0,
                t.videoRealHeight = 0,
                t.bufferCheckTimer = 0,
                t.speedTencounts = 0,
                t.speedArray = [],
                t.lastLoaderBytes = 0,
                t.lastTimestamp = 0,
                t.firstReadData = null,
                t.disposeTimer = 0,
                t.startsdkTimevalue = 0,
                t.getsdkTimevalue = 0,
                t.beginloadTime = 0,
                t.pid = "",
                t.seiTimeList = [],
                me.on(Z, t.getsdkTime),
                me.on(ee, t.beginLoadTimefun),
                t.P2Pfresh = 0,
                t.PairFrameok = !1,
                t.subDelay = 0,
                me.on("videoPairFrameCan", t.videoPairFrameCanHandle),
                me.on("videoPairFrameOverErr", t.videoPairFrameOverErrHandle),
                me.on("videoPairFrame10Over", t.videoPairFrame10Over),
                me.on("diposeFirstVideo", t.diposeFirstVideoHandle),
                t
            }
            return firstvideo_inherits(Video, e),
            Video.prototype.init = function init(t) {
                e.prototype.init.call(this, t),
                this.videoContent = document.createElement("div"),
                this.videoContent.className = Ie.a.videoContainer,
                t.appendChild(this.videoContent),
                this.video = document.createElement("video"),
                this.video.className = Ie.a.video,
                this.video.id = this.videoId,
                this.videoContent.appendChild(this.video),
                this.canvas = document.createElement("canvas"),
                this.canvas.className = Ie.a.screenshot,
                this.videoContent.appendChild(this.canvas),
                this.element = this.videoContent,
                this.videoContent.addEventListener("mouseover", this.onmouseover),
                this.videoContent.addEventListener("mouseleave", this.onmouseleave),
                this.videoContent.addEventListener("dblclick", this.ondblclick),
                delayStreamWhilte() && (this.videoContent.style.visibility = "hidden"),
                this.root = document.getElementsByClassName("layout-Player-videoMain")[0],
                this.viewFresh()
            }
            ,
            Video.prototype.SrcFresh = function SrcFresh() {
                this.createPlayer(getData().player.src),
                this.refreshPlayer()
            }
            ,
            Video.prototype.actionHandle = function actionHandle(e) {
                var t = e.action
                  , r = e.data;
                i && i[t] && i[t].apply(i, r)
            }
            ,
            Video.prototype.render = function render(e) {
                var t = e.id
                  , r = e.action
                  , i = e.data;
                t === this.id && this.actionList.indexOf(r) > -1 && this.actionHandle({
                    action: r,
                    data: i
                })
            }
            ,
            Video.prototype.destroy = function destroy(t) {
                if (1 === +t && (e.prototype.destroy.call(this),
                me.off(Z, this.getsdkTime),
                me.off(ee, this.beginLoadTimefun),
                this.firstReadVide = !0,
                me.off("videoPairFrameCan", this.videoPairFrameCanHandle),
                me.off("videoPairFrameOverErr", this.videoPairFrameOverErrHandle),
                me.off("videoPairFrame10Over", this.videoPairFrame10Over),
                me.off("diposeFirstVideo", this.diposeFirstVideoHandle)),
                this.disposeVr(),
                clearTimeout(this.PairFrameokID),
                clearTimeout(this.disposeTimer),
                clearInterval(this.bufferCheckTimer),
                clearInterval(this._byteAnotherTimerID),
                clearInterval(this.failTimeIndex),
                clearInterval(this.playTimeIndex),
                clearInterval(this.speedTencounts),
                this.player) {
                    if (window.streamSubSdkReport) {
                        var r = (new Date).valueOf()
                          , i = stateGetIn(["app", "cdn"]);
                        window.streamSubSdkReport({
                            ps: 6,
                            vbr: 0,
                            delay: 0,
                            buf: 0,
                            av_diff: 0,
                            dfc: 0,
                            b_cdn: this._byteCount,
                            b_p2p: this._byteP2PCount,
                            b_up: 0,
                            b_wst: 0,
                            nat: 0,
                            man: this.getManValue(i),
                            cdn: i,
                            cc: this.emptyCount,
                            ct: this.totalEmptyTime,
                            du: r,
                            ol: r - this.showFrameTimePoint
                        })
                    }
                    this.player.dispose(),
                    this.player = null
                }
                this._byteTmp = 0,
                this._byteCount = 0,
                this._byteP2PTmp = 0,
                this._byteP2PCount = 0,
                this.seiTimeList = [],
                actionCall({
                    id: "videoModule",
                    action: "setByteCount",
                    data: [0]
                }),
                this.P2PtotalByteCount = 0,
                this.P2PCurrentCount = 0,
                this.inEmpty = !1,
                this.StarEmptyTime = 0,
                this.StarFullTime = 0,
                this.totalEmptyTime = 0,
                this.emptyCount = 0,
                this.fullCount = 0,
                this.hasNetStream = !1,
                this.showFrameTimePoint = 0,
                this.speedArray = [],
                this.lastLoaderBytes = 0,
                this.lastTimestamp = 0,
                h.log("video disposed.")
            }
            ,
            Video.prototype.createPlayer = function createPlayer(e) {
                var t = this;
                if (this.reportCarlton(),
                this.destroy(),
                clearTimeout(this.P2PRollbackId),
                e && 0 === e.indexOf("rtmp"))
                    return h.warn("can't play " + e + ", switch to flash player."),
                    function switchToFlash() {
                        window.__player && window.__player.switchPlayer(!1)
                    }();
                if (this.canvas && (this.canvas.style.visibility = "hidden"),
                e) {
                    var r = stateGetIn(["videoModule", "player", "p2p"]);
                    if (r ? (h.log("player init with p2p: " + r),
                    this.hasP2PRollback = !1) : h.log("player init with no p2p"),
                    this.player = player_createPlayer(e, {
                        p2p: r,
                        hasVideo: !getPageData("$ROOM.audioWEBBGIMG") && void 0
                    }),
                    this.player) {
                        this.video.src = "",
                        this.player.attachMedia(this.video),
                        this.player.on(rt.FIRST_FRAME, this.onFirstFrame),
                        this.player.on(rt.READY, this.onReady),
                        this.player.on(rt.COMPLETE, this.onComplete),
                        this.player.on(rt.DURATION_CHANGE, this.onDurationChange),
                        this.player.on(rt.ERROR, this.onError),
                        this.player.on(rt.ON_SEI, this.seiDateHandle),
                        this.player.on(rt.ON_AAC_DATA, this.aacDataHandler),
                        this.player.load();
                        for (var i = (new Date).valueOf(), o = "", a = 0; a < 4; a++)
                            o += parseInt(10 * Math.random(), 10);
                        this.pid = o + i,
                        this._byteAnotherTimerID && clearInterval(this._byteAnotherTimerID),
                        clearInterval(this.failTimeIndex),
                        this.failTimeIndex = setInterval(function() {
                            t.failStreamHander()
                        }, 5e3),
                        this._byteAnotherTimerID = setInterval(function() {
                            t.getAnotherByteTimer()
                        }, 6e4)
                    }
                }
                return "" !== e && (!this.intOK && isVRPlayer() ? (window.loader.loadFile("https://sta-op.douyucdn.cn/front-publish/sdk-file-master/vrsdk_32b9147.js", function() {
                    t.initVrPlayer()
                }),
                this.intOK = !0) : this.intOK && this.initVrPlayer()),
                null
            }
            ,
            Video.prototype.seiDateHandle = function seiDateHandle(e) {
                e && 5 === e.seiType && (e.seiData && "CloudVideoStream" === e.seiData.uuid && this.seiTimeList.push(Date.now() - e.seiData.data),
                e.seiData && "AdsCtrlSEIV00001" === e.seiData.uuid && acjCall("room_lolad_data", e.seiData))
            }
            ,
            Video.prototype.aacDataHandler = function aacDataHandler(e) {
                e && e.length && acjCall("room_web_acc_data", e)
            }
            ,
            Video.prototype.getMoudleDate = function getMoudleDate() {
                return getData()
            }
            ,
            Video.prototype.refreshPlayer = function refreshPlayer() {
                var e = stateGetIn(["videoModule", "player", "volume"])
                  , t = stateGetIn(["videoModule", "player", "isPlay"])
                  , r = stateGetIn(["app", "canAutoPlay"])
                  , i = stateGetIn(["xvideoModule", "xplayer", "openWichVideo"]);
                this.player && (delayStreamWhilte() ? this.PairFrameok ? i ? this.player.volume(0) : this.player.volume(parseFloat(e, 10)) : this.player.volume(0) : i ? this.player.volume(0) : this.player.volume(parseFloat(e, 10)),
                t && r ? this.player.play() : this.stop())
            }
            ,
            Video.prototype.onFirstFrame = function onFirstFrame() {
                var e = this
                  , t = stateGetIn(["app", "rid"])
                  , r = stateGetIn(["app", "streamInfo", "rtmp_live"])
                  , i = stateGetIn(["videoModule", "player", "p2p"])
                  , o = stateGetIn(["app", "cdn"])
                  , a = stateGetIn(["app", "isLogin"])
                  , n = stateGetIn(["app", "pageRateSwitch"])
                  , s = stateGetIn(["app", "rate"])
                  , d = i === A.QQ || "tct-h5" === o;
                delayStreamWhilte() && this.player && this.player.player && this.player.player.T_ADV_Timestamp && (window.T_ADV_Timestamp = this.player.player.T_ADV_Timestamp),
                acjCall("room_video_replay", {
                    rtmp_live: r,
                    rid: t,
                    hightligth: d
                }),
                this.showFrameTimePoint = (new Date).valueOf(),
                this.performancePoint(),
                this.refreshPlayer(),
                actionCall({
                    id: "videoModule",
                    action: "setVideoReady",
                    data: [this.player, 1]
                }),
                actionCall({
                    id: "videoModule",
                    action: "changeHaveShowVideoState"
                }),
                !1 === Boolean(a) && 1 === +n && (switchRateTip() || actionCall({
                    id: "multiBitRate",
                    action: "ChangeRateNotify",
                    data: [1]
                })),
                1 !== +s && 2 !== +s && switchRateTip(!0),
                this.hasNetStream = !0,
                clearInterval(this.failTimeIndex),
                this.playTimeIndex = setInterval(function() {
                    e.playSucss()
                }, 3e3);
                var u = new Date;
                this.lastTimestamp = u.getTime(),
                function setauthenticationTime(e) {
                    we = e
                }((new Date).valueOf())
            }
            ,
            Video.prototype.countSpeed = function countSpeed() {
                var e = stateGetIn(["videoModule", "player", "getPlayerStat"])().statInfo.loaderBytes
                  , t = 0
                  , r = (new Date).getTime()
                  , i = r - this.lastTimestamp;
                this.lastLoaderBytes && e > this.lastLoaderBytes && (t = parseInt((e - this.lastLoaderBytes) / 1024 / (i / 1e3), 10)),
                this.speedArray.push(t),
                this.speedArray.length > 10 && (this.speedArray = this.speedArray.slice(1)),
                this.lastLoaderBytes = e,
                this.lastTimestamp = r
            }
            ,
            Video.prototype.onReady = function onReady() {
                var e = this;
                if (null != this.firstReadData) {
                    var t = (new Date).valueOf();
                    this.firstReadData.canplay_matadate = t - this.showFrameTimePoint,
                    prfLoad(this.firstReadData),
                    this.firstReadData = null
                }
                this.player.on(rt.BUFFER_EMPTY, this.onBufferEmpty),
                this.player.on(rt.BUFFER_FULL, this.onBufferFull),
                this.player.on(rt.BUFFER_PROGRESS, this.onBufferProgress),
                this.player.on(rt.CANAUTO_PLAY, this.onCanAutoPlay),
                this.refreshPlayer(),
                actionCall({
                    id: "videoModule",
                    action: "setVideoReady",
                    data: [this.player]
                }),
                setTimeout(function() {
                    e.player && actionCall({
                        id: "videoModule",
                        action: "setVideoReady",
                        data: [e.player]
                    })
                }, 50),
                this.bufferCheckTimer = setInterval(this.checkBuffer, 2e3),
                this.checkBuffer(),
                notifyLoadjs(),
                this.pairFrameHandel()
            }
            ,
            Video.prototype.pairFrameHandel = function pairFrameHandel() {
                delayStreamWhilte() && function setAuthenticationPlayer(e) {
                    Se = e,
                    Te = !0,
                    Me || (me.emit("videoPairFrame10Over", 1),
                    h.log("\u9274\u6743\u64ad\u653e\u5668\u6bd4\u9884\u57cb\u6d41\u5148\u6765"),
                    sendPairFrameStatePoint(0, 1))
                }(this.player.player)
            }
            ,
            Video.prototype.checkBuffer = function checkBuffer() {
                if (this.video && this.video.buffered.length > 0) {
                    var e = this.video.buffered
                      , t = this.video.currentTime
                      , r = e.length
                      , i = e.end(r - 1);
                    if (i - t > 30) {
                        var o = e.start(r - 1)
                          , a = Math.max(o, i - 8);
                        h.warn("buffer too much, seek to " + a + ". cur=" + t + " buffered=" + i),
                        this.video.currentTime = a
                    }
                }
            }
            ,
            Video.prototype.videoPairFrame10Over = function videoPairFrame10Over(e) {
                1 === e && (this.videoContent.style.visibility = "",
                this.PairFrameok = !0,
                this.refreshPlayer())
            }
            ,
            Video.prototype.diposeFirstVideoHandle = function diposeFirstVideoHandle() {
                this.player && this.player.pause(),
                this.destroy()
            }
            ,
            Video.prototype.videoPairFrameCanHandle = function videoPairFrameCanHandle(e) {
                var t = this;
                this.video.currentTime = e.time,
                this.PairFrameokID = setTimeout(function() {
                    t.videoContent.style.visibility = "",
                    t.PairFrameok = !0,
                    t.refreshPlayer(),
                    me.emit("embedmentPlayerdispose")
                }, 50)
            }
            ,
            Video.prototype.videoPairFrameOverErrHandle = function videoPairFrameOverErrHandle(e) {
                1 !== e.type && 4 !== e.type || (this.videoContent.style.visibility = "",
                this.PairFrameok = !0,
                this.refreshPlayer(),
                me.emit("embedmentPlayerdispose")),
                -1 === e.type && this.destroy()
            }
            ,
            Video.prototype.onCanAutoPlay = function onCanAutoPlay() {
                acjCall("room_yuba_sdk_streamErr", {
                    code: 1
                }),
                actionCall({
                    id: "app",
                    action: "setAutoPlay",
                    data: [!1]
                }),
                me.emit("embedmentPlayerdispose")
            }
            ,
            Video.prototype.onComplete = function onComplete() {
                var e = stateGetIn(["app", "cdn"])
                  , t = stateGetIn(["videoModule", "player", "src"])
                  , r = stateGetIn(["videoModule", "player", "p2p"])
                  , i = stateGetIn(["app", "uip"]);
                addAssistantLog("video", "ASSIST_PLAY_COMPLETE", {
                    delta: this.player.getBuffered() - this.player.getPlayTime(),
                    playTime: this.player.getPlayTime(),
                    emptyCount: this.emptyCount,
                    fullCount: this.fullCount,
                    browser: navigator.userAgent,
                    location: window.location.href,
                    cdn: e,
                    p2p: r,
                    uip: i,
                    src: t
                }),
                this.stop(),
                h.log("play complete")
            }
            ,
            Video.prototype.onBufferEmpty = function onBufferEmpty() {
                actionCall({
                    id: "controller",
                    action: "setKDShow",
                    data: [!0]
                });
                var e = stateGetIn(["app", "cdn"])
                  , t = stateGetIn(["videoModule", "player", "src"])
                  , r = stateGetIn(["videoModule", "player", "p2p"])
                  , i = stateGetIn(["app", "uip"]);
                addAssistantLog("video", "ASSIST_BUFFER_EMPTY", {
                    seeking: this.video.seeking,
                    readyState: this.video.readyState,
                    delta: this.player.getBuffered() - this.player.getPlayTime(),
                    buffered: this.player.getBuffered(),
                    playTime: this.player.getPlayTime(),
                    bufferLength: this.video.buffered.length,
                    emptyCount: this.emptyCount,
                    fullCount: this.fullCount,
                    browser: navigator.userAgent,
                    cdn: e,
                    p2p: r,
                    uip: i,
                    src: t,
                    speedArray: this.speedArray
                }),
                this.player.getBuffered() - this.player.getPlayTime() < 1 && (this.emptyCount += 1,
                this.inEmpty = !0,
                this.StarEmptyTime = (new Date).valueOf()),
                h.log("buffer empty")
            }
            ,
            Video.prototype.onBufferFull = function onBufferFull() {
                this.fullCount += 1,
                this.inEmpty && (this.totalEmptyTime = this.totalEmptyTime + (new Date).valueOf() - this.StarEmptyTime),
                this.inEmpty = !1,
                h.log("buffer full")
            }
            ,
            Video.prototype.onBufferProgress = function onBufferProgress() {}
            ,
            Video.prototype.onDurationChange = function onDurationChange() {}
            ,
            Video.prototype.getManValue = function getManValue(e) {
                var t = stateGetIn(["videoModule", "player", "p2p"])
                  , r = stateGetIn(["videoModule", "player", "p2pValue"]);
                if (t) {
                    if (9 === r)
                        return 6;
                    if (1 === r)
                        return 4;
                    if (2 === r)
                        return 2;
                    if (3 === r)
                        return 1;
                    if (4 === r)
                        return 3
                } else {
                    if (-1 !== e.indexOf("tct"))
                        return 2;
                    if (-1 !== e.indexOf("ws"))
                        return 1;
                    if (-1 !== e.indexOf("ali"))
                        return 3
                }
                return -1
            }
            ,
            Video.prototype.subStreamErrorbyType = function subStreamErrorbyType(e) {
                var t = stateGetIn(["app", "cdn"]);
                window.streamSubSdkReport && window.streamSubSdkReport({
                    ps: 5,
                    vbr: 0,
                    delay: 0,
                    buf: 0,
                    av_diff: 0,
                    dfc: 0,
                    b_cdn: this._byteCount,
                    b_p2p: this._byteP2PCount,
                    b_up: 0,
                    b_wst: 0,
                    nat: 0,
                    man: this.getManValue(t),
                    cdn: t,
                    ec: 0,
                    et: e
                })
            }
            ,
            Video.prototype.onError = function onError(e) {
                var t = this;
                notifyLoadjs(),
                clearInterval(this.failTimeIndex);
                var r = 3
                  , i = stateGetIn(["yzView", "isYanzhi"])
                  , o = stateGetIn(["app", "cdn"])
                  , n = stateGetIn(["videoModule", "player", "src"])
                  , s = stateGetIn(["videoModule", "player", "p2p"])
                  , d = stateGetIn(["app", "uip"]);
                if (e instanceof Error)
                    switch (e.name) {
                    case qe.NAME:
                    case Ye.NAME:
                        this.initError = e.name === qe.NAME,
                        this.hasP2PRollback = !0;
                        var u = e.name === qe.NAME ? 1 : 2
                          , l = {
                            playstate: 4,
                            enum: this.emptyCount,
                            fnum: this.fullCount,
                            error: e.message,
                            eCode: e.eCode,
                            us: u
                        };
                        h.warn("p2p error, rollback", e.name),
                        this.DataHandle(l),
                        this.firstReadVide ? this.p2pRollback() : (clearTimeout(this.P2PRollbackId),
                        this.P2PRollbackId = setTimeout(function() {
                            t.p2pRollback()
                        }, 5e3 * Math.random())),
                        this.stop();
                        var p = stateGetIn(["app", "rid"])
                          , c = stateGetIn(["videoModule", "player", "p2pValue"]);
                        if (9 === c && e.name !== qe.NAME) {
                            clearTimeout(this.P2Pfresh);
                            var f = 12e5
                              , m = 18e5;
                            window.p2pComeBackinfo && (f = window.p2pComeBackinfo.minComeBackms,
                            m = window.p2pComeBackinfo.maxComeBackms),
                            this.P2Pfresh = setTimeout(function() {
                                "" === stateGetIn(["videoModule", "player", "p2p"]) && 9 === c && (actionCall({
                                    id: "LoadVideoNet",
                                    action: "reloadVideo",
                                    data: [{
                                        manual: !0
                                    }]
                                }),
                                a.httpClient.post(String, "https://p2perrorlog.douyucdn.cn/errorlogreport", {
                                    rid: p,
                                    errortype: "refreshZjP2p"
                                }, {
                                    headers: {
                                        "content-type": "application/json"
                                    }
                                }))
                            }, Math.random() * (m - f) + f)
                        }
                        return void this.subStreamErrorbyType(3);
                    case "DyNetworkError":
                        var y = {
                            playstate: 3,
                            enum: this.emptyCount,
                            fnum: this.fullCount,
                            error: e.message,
                            error_num: 1
                        };
                        this.DataHandle(y),
                        r = 1,
                        this.subStreamErrorbyType(2);
                        break;
                    case "DyMediaError":
                        var _ = {
                            playstate: 3,
                            error: e.message,
                            error_num: 100,
                            spec_error: 180
                        };
                        5 === getPageData("$ROOM.cate_id") && this.DataHandle(_),
                        this.subStreamErrorbyType(1);
                        break;
                    case "DyDemuxError":
                        var v = {
                            playstate: 3,
                            error: e.message,
                            error_num: 100,
                            spec_error: e.errorId ? e.errorId : 0
                        };
                        5 === getPageData("$ROOM.cate_id") && this.DataHandle(v),
                        this.subStreamErrorbyType(1);
                        break;
                    case ze.NAME:
                    }
                addAssistantLog("video", "ASSIST_PLAY_ERROR", {
                    errorType: r,
                    error: e.message,
                    playTime: this.player.getPlayTime(),
                    browser: navigator.userAgent,
                    isYanzhi: i,
                    location: window.location.href,
                    cdn: o,
                    p2p: s,
                    uip: d,
                    src: n
                }),
                delayStreamWhilte() ? e.name === qe.NAME && e.name === Ye.NAME || (0 === getInPairFrameState() ? (closeVideoPairFrame(2, 5),
                me.emit("embedmentPlayerdispose")) : 1 === getInPairFrameState() ? closeVideoPairFrame(2, 5) : 2 !== getInPairFrameState() && 3 !== getInPairFrameState() || (actionCall({
                    id: "videoModule",
                    action: "setPlayerError",
                    data: [r]
                }),
                closeVideoPairFrame(2, 5))) : actionCall({
                    id: "videoModule",
                    action: "setPlayerError",
                    data: [r]
                }),
                this.stop(),
                h.warn("player error", e)
            }
            ,
            Video.prototype.p2pRollback = function p2pRollback() {
                actionCall({
                    id: "videoModule",
                    action: "P2PRollback"
                })
            }
            ,
            Video.prototype.ondblclick = function ondblclick() {
                var e = stateGetIn(["app", "isFullscreen"])
                  , t = stateGetIn(["app", "isWebFullscreen"]);
                e || t ? (e && actionCall({
                    id: "app",
                    action: "setFullScreen",
                    data: [!1]
                }),
                t && actionCall({
                    id: "app",
                    action: "setPagescreen",
                    data: [!1]
                })) : actionCall({
                    id: "app",
                    action: "setPagescreen",
                    data: [!0]
                })
            }
            ,
            Video.prototype.getsdkTime = function getsdkTime(e) {
                e && (this.startsdkTimevalue = e.bt,
                this.getsdkTimevalue = e.et)
            }
            ,
            Video.prototype.beginLoadTimefun = function beginLoadTimefun(e) {
                e && (this.beginloadTime = e.sdkok)
            }
            ,
            Video.prototype.componentDidMount = function componentDidMount() {
                h.log("start loadVideo")
            }
            ,
            Video.prototype.componentWillUnmount = function componentWillUnmount() {
                e.prototype.componentWillUnmount.call(this),
                this.firstReadVide = !0,
                clearInterval(this._byteAnotherTimerID),
                clearInterval(this.failTimeIndex),
                clearTimeout(this.P2PRollbackId),
                clearTimeout(this.P2Pfresh),
                this.destroy()
            }
            ,
            Video.prototype.onmouseover = function onmouseover() {
                actionCall({
                    id: "xvideoModule",
                    action: "showmusicIconfun",
                    data: [!0]
                })
            }
            ,
            Video.prototype.onmouseleave = function onmouseleave() {
                actionCall({
                    id: "xvideoModule",
                    action: "showmusicIconfun",
                    data: [!1]
                })
            }
            ,
            Video.prototype.viewFresh = function viewFresh() {
                var e = stateGetIn(["app", "width"])
                  , t = stateGetIn(["app", "height"])
                  , r = stateGetIn(["app", "isFullscreen"])
                  , i = stateGetIn(["app", "isWebFullscreen"])
                  , o = stateGetIn(["app", "playbModel"])
                  , a = stateGetIn(["videoModule", "player", "videoWidth"])
                  , n = stateGetIn(["videoModule", "player", "videoHeight"])
                  , s = void 0;
                if (t -= r || i || !o ? 0 : O,
                0 === a || 0 === n)
                    s = {
                        width: e,
                        height: t
                    },
                    this.videoRealWidth = e,
                    this.videoRealHeight = t;
                else {
                    var d = 1
                      , u = 0
                      , l = 0
                      , p = 0
                      , c = 0;
                    n / a <= t / e ? (l = e,
                    u = n * (d = e / a),
                    c = .5 * t - n * d * .5) : (u = t,
                    l = a * (d = t / n),
                    p = .5 * e - a * d * .5),
                    s = {
                        width: l,
                        height: u,
                        left: p,
                        top: c
                    },
                    this.videoRealWidth = l,
                    this.videoRealHeight = u
                }
                var h = {
                    width: s.width + "px",
                    height: s.height + "px"
                };
                Object.assign(this.video.style, h),
                Object.assign(this.canvas.style, h),
                this.videoRealWidth && this.videoRealHeight && actionCall({
                    id: "videoModule",
                    action: "udpateVidoReal",
                    data: [this.videoRealWidth, this.videoRealHeight]
                }),
                this.onWindowResize(s.width, s.height)
            }
            ,
            Video.prototype.stop = function stop() {
                var e = this;
                if (this.player && this.canvas && this.video && this.videoRealWidth && this.videoRealHeight) {
                    this.player.pause(),
                    this.canvas.width = this.videoRealWidth,
                    this.canvas.height = this.videoRealHeight;
                    var t = this.canvas.getContext("2d");
                    try {
                        isVRPlayer() && this.renderer && this.renderer.domElement ? t.drawImage(this.renderer.domElement, 0, 0, this.videoRealWidth, this.videoRealHeight) : t.drawImage(this.video, 0, 0, this.videoRealWidth, this.videoRealHeight)
                    } catch (e) {
                        h.log("\u622a\u56fe\u5931\u8d25")
                    }
                    this.canvas.style.visibility = ""
                }
                getIsHidden() ? this.destroy() : (clearTimeout(this.disposeTimer),
                this.disposeTimer = setTimeout(function() {
                    e.destroy()
                }, 20))
            }
            ,
            Video.prototype.getAnotherByteTimer = function getAnotherByteTimer() {
                if (this.player) {
                    var e = this.player.statInfo;
                    if (e) {
                        var t = e.cdnBytes
                          , r = e.p2pBytes
                          , i = e.loaderBytes;
                        this._byteCount = t - this._byteTmp,
                        this._byteTmp = t,
                        this._byteP2PCount = r - this._byteP2PTmp,
                        this._byteP2PTmp = r,
                        this.P2PCurrentCount = i - this.P2PtotalByteCount,
                        this.P2PtotalByteCount = i
                    }
                }
                this._byteCount < 0 && (this._byteCount = 0),
                this._byteP2PCount < 0 && (this._byteP2PCount = 0),
                this.P2PCurrentCount < 0 && (this.P2PCurrentCount = 0);
                var o = this._byteCount + this._byteP2PCount;
                if (o > 62914560 && (o = 62914560),
                o < 0 && (o = 0),
                actionCall({
                    id: "videoModule",
                    action: "setByteCount",
                    data: [o]
                }),
                this.inEmpty && (this.totalEmptyTime = this.totalEmptyTime + (new Date).valueOf() - this.StarEmptyTime,
                this.StarEmptyTime = (new Date).valueOf()),
                this.hasNetStream) {
                    if (window.streamSubSdkReport) {
                        var a = stateGetIn(["app", "rid"])
                          , n = stateGetIn(["app", "streamInfo", "rtmp_url"])
                          , s = stateGetIn(["videoModule", "player", "p2pValue"])
                          , d = stateGetIn(["app", "rate"])
                          , u = stateGetIn(["app", "streamInfo", "is_mixed"])
                          , l = stateGetIn(["videoModule", "player", "p2p"])
                          , p = stateGetIn(["app", "cdn"]);
                        window.streamSubSdkReport({
                            ps: 2,
                            net: 1,
                            rid: a,
                            vt: getPageData("$ROOM.audioWEBBGIMG") ? 2 : 1,
                            mix: u ? 1 : 0,
                            surl: "" + n,
                            res: d,
                            lt: 1,
                            pt: 6,
                            pv: D,
                            cv: D,
                            p2p: s,
                            st: l ? 2 : 1,
                            man: this.getManValue(p),
                            cdn: p,
                            l_cpu: 0,
                            l_mem: 0
                        }),
                        window.streamSubSdkReport({
                            ps: 3,
                            delay: 0,
                            man: this.getManValue(p),
                            cdn: p,
                            kc: window.performance.timing ? this.showFrameTimePoint - window.performance.timing.navigationStart : 0
                        })
                    }
                    if (this.emptyCount >= 1) {
                        var c = {
                            playstate: 0,
                            enum: this.emptyCount,
                            fnum: this.fullCount,
                            emptyTime: this.totalEmptyTime,
                            caton_type: 0
                        };
                        this.DataHandle(c)
                    }
                    var h = {
                        playstate: 2,
                        enum: this.emptyCount,
                        fnum: this.fullCount,
                        emptyTime: this.totalEmptyTime,
                        dl: this.P2PCurrentCount,
                        tdl: this.P2PtotalByteCount,
                        pdl: this._byteP2PCount,
                        pcdl: this._byteCount
                    };
                    if (this.DataHandle(h),
                    window.streamSubSdkReport) {
                        var f = (new Date).valueOf()
                          , m = stateGetIn(["videoModule", "player", "p2p"])
                          , y = stateGetIn(["app", "cdn"]);
                        window.streamSubSdkReport({
                            ps: 4,
                            vbr: 0,
                            delay: this.subDelay,
                            buf: 0,
                            av_diff: 0,
                            dfc: 0,
                            b_cdn: this._byteCount,
                            b_p2p: this._byteP2PCount,
                            b_up: 0,
                            b_wst: 0,
                            nat: 0,
                            st: m ? 2 : 1,
                            man: this.getManValue(y),
                            cdn: y,
                            cc: this.emptyCount,
                            ct: this.totalEmptyTime,
                            du: f,
                            ol: f - this.showFrameTimePoint
                        })
                    }
                }
                this.totalEmptyTime = 0,
                this.emptyCount = 0,
                this.fullCount = 0
            }
            ,
            Video.prototype.playSucss = function playSucss() {
                clearInterval(this.playTimeIndex);
                var e = {
                    playstate: 1,
                    enum: this.emptyCount,
                    fnum: this.fullCount
                };
                this.DataHandle(e)
            }
            ,
            Video.prototype.failStreamHander = function failStreamHander() {
                clearInterval(this.failTimeIndex);
                var e = {
                    playstate: 3,
                    enum: this.emptyCount,
                    fnum: this.fullCount,
                    error_num: 0,
                    error: ""
                };
                this.DataHandle(e)
            }
            ,
            Video.prototype.DataHandle = function DataHandle(e) {
                var t = stateGetIn(["tcp", "loginres", "userid"])
                  , r = stateGetIn(["app", "rid"])
                  , i = stateGetIn(["app", "ct"])
                  , o = stateGetIn(["app", "cdn"])
                  , a = stateGetIn(["videoModule", "player", "src"])
                  , n = stateGetIn(["videoModule", "player", "p2p"])
                  , s = stateGetIn(["app", "uip"])
                  , d = stateGetIn(["app", "streamInfo", "is_mixed"])
                  , u = stateGetIn(["videoModule", "player", "isPreload"])
                  , l = stateGetIn(["videoModule", "player", "getPlayerStat"])
                  , p = stateGetIn(["videoModule", "player", "streamName"])
                  , c = stateGetIn(["videoModule", "player", "streamStatus"])
                  , h = l().mediaInfo
                  , f = a.match(/(^|&)isp=([^&]*)(&|$)/)
                  , m = f && f[2] ? f[2] : ""
                  , y = e.playstate
                  , _ = e.enum
                  , v = a
                  , g = n ? 1 : 0
                  , b = +(void 0 !== getPageData("$ROOM.audioWEBBGIMG"))
                  , w = {
                    bt: e.emptyTime || 0,
                    ex: e.error || "",
                    is_ma: u ? 1 : 0,
                    isp: m
                };
                if (1 !== b && (w.is_mix = void 0 === d ? 0 : +d),
                n && (w.pn = n),
                w.definition = p,
                0 === +y)
                    w.caton_type = e.caton_type,
                    h && (w.vbr = parseInt(h.videoDataRate, 10)),
                    w.spd = parseInt((this._byteCount + this._byteP2PCount) / 1024 / 60 * 8, 10);
                else if (1 === +y)
                    h && (w.vbr = parseInt(h.videoDataRate, 10)),
                    w.cs = c;
                else if (2 === +y) {
                    w.dl = e.dl,
                    w.tdl = e.tdl,
                    w.pdl = e.pdl,
                    w.pcdl = e.pcdl,
                    h && (w.vbr = parseInt(h.videoDataRate, 10)),
                    w.spd = parseInt((this._byteCount + this._byteP2PCount) / 1024 / 60 * 8, 10);
                    var P = 0
                      , E = 0;
                    if (this.seiTimeList.length > 0) {
                        for (var S = 0; S < this.seiTimeList.length; S++)
                            this.seiTimeList[S] > 0 && this.seiTimeList[S] < 3e4 && (E += 1,
                            P += this.seiTimeList[S]);
                        E > 0 && (P = parseInt(P / E, 10))
                    } else
                        P = -1;
                    w.delay = P,
                    this.subDelay = P,
                    this.seiTimeList = []
                } else
                    3 === +y ? (w.error_num = c ? e.error_num : 4,
                    w.cs = c,
                    w.spec_error = e.spec_error ? e.spec_error : 0) : 4 === +y && (w.us = e.us,
                    g = 0,
                    w.err_p2p = e.eCode || "");
                var M = JSON.stringify(w);
                !function keeplivePoint(e) {
                    oe ? pushAcj(J, e) : ue.push(e)
                }({
                    type: "ssr",
                    uid: t,
                    rid: r,
                    ec: _,
                    surl: v,
                    cdn: o,
                    isp2p: g,
                    did: getDid(),
                    ps: y,
                    ct: i,
                    pt: "2",
                    ext: M,
                    pid: this.pid,
                    uip: s,
                    v_type: b,
                    aver: D
                })
            }
            ,
            Video.prototype.performancePoint = function performancePoint() {
                var e, t = stateGetIn(["videoModule", "player", "p2p"]), r = stateGetIn(["videoModule", "player", "isPreload"]), i = stateGetIn(["app", "cdn"]), o = stateGetIn(["videoModule", "player", "src"]).match(/(^|&)isp=([^&]*)(&|$)/), a = o && o[2] ? o[2] : "", n = stateGetIn(["videoModule", "player", "starEnterH5Play"]), s = stateGetIn(["LoadVideoNet", "requestRoomInfoTimePoint"]), d = stateGetIn(["LoadVideoNet", "requestStreamUrlTimePoint"]), u = stateGetIn(["LoadVideoNet", "starPlayStreamTimePoint"]), l = stateGetIn(["LoadVideoNet", "loadNum"]), p = t || i, c = void 0;
                e = u - d;
                var f = this.showFrameTimePoint - u
                  , m = t ? "prf_pl_ss_p2p_0" : "prf_pl_ss_cdn_0"
                  , y = t ? 2 : 1;
                stateGetIn(["app", "manualLoadVideo"]) && (this.firstReadVide = !1),
                c = -1 === +s ? -1 : d - s,
                h.log("firstReadVide\u4e3a" + this.firstReadVide);
                var _ = window.__player && window.__player.isSwitched
                  , v = 0;
                if (_ && (v = window.__player.timeSwitch),
                this.firstReadVide && !_)
                    this.firstReadVide = !1,
                    h.log("\u53d1\u9001room_video_catchtime"),
                    this.firstReadData = {
                        type: y,
                        service_t: p,
                        enterFlashTimer: n,
                        getRoomInfoTimer: s,
                        getStramUrlTimer: d,
                        starRequstStramTimer: u,
                        showStramTimer: this.showFrameTimePoint,
                        isH5: !0,
                        is_back: this.hasP2PRollback ? 1 : 0,
                        av: D,
                        is_ma: r ? 1 : 0,
                        requestSDKTime: this.startsdkTimevalue,
                        getSDKTime: this.getsdkTimevalue,
                        starRequstStramTimer2: this.beginloadTime,
                        showStramTimer2: this.showFrameTimePoint,
                        isp: a
                    };
                else {
                    var g = void 0
                      , b = 0;
                    if (this.firstReadVide) {
                        var w, P = n - v, E = s - n;
                        b = this.showFrameTimePoint - v,
                        (w = {
                            type: y,
                            service_t: p,
                            cnt: l,
                            prf_pl_ro_0: c,
                            prf_pl_pf_0: e
                        })[m] = f,
                        w.prf_pl_dls_0 = P,
                        w.prf_pl_sa_0 = E,
                        w.prf_pl_fs_0 = b,
                        w.ac_type = 1,
                        w.is_back = this.hasP2PRollback ? 1 : 0,
                        w.isp = a,
                        g = w
                    } else {
                        var S;
                        b = -1 === +s ? this.showFrameTimePoint - d : this.showFrameTimePoint - s,
                        (S = {
                            type: y,
                            service_t: p,
                            cnt: l,
                            prf_pl_ro_0: c,
                            prf_pl_pf_0: e
                        })[m] = f,
                        S.prf_pl_fs_0 = b,
                        S.ac_type = 2,
                        S.is_back = this.hasP2PRollback ? 1 : 0,
                        S.isp = a,
                        g = S
                    }
                    addPerformanceLog("player_load_o", g, D),
                    this.firstReadVide = !1
                }
            }
            ,
            Video.prototype.reportCarlton = function reportCarlton() {
                if (this.emptyCount >= 1) {
                    var e = {
                        playstate: 0,
                        enum: this.emptyCount,
                        fnum: this.fullCount,
                        emptyTime: this.totalEmptyTime,
                        caton_type: 1
                    };
                    this.DataHandle(e)
                }
                this.emptyCount = 0
            }
            ,
            Video.prototype.initVrPlayer = function initVrPlayer() {
                this.disposeVr(),
                this.target = new window.THREE.Vector3;
                var e, t = void 0;
                this.video.style.visibility = "hidden",
                this.camera = new window.THREE.PerspectiveCamera(75,this.videoContent.innerWidth / this.videoContent.innerHeight,1,1100),
                this.camera.target = new window.THREE.Vector3(0,0,0),
                this.scene = new window.THREE.Scene;
                var r = new window.THREE.SphereBufferGeometry(500,60,40);
                r.scale(-1, 1, 1),
                (t = new window.THREE.VideoTexture(this.video)).minFilter = window.THREE.LinearFilter,
                t.format = window.THREE.RGBFormat;
                var i = new window.THREE.MeshBasicMaterial({
                    map: t
                });
                e = new window.THREE.Mesh(r,i),
                this.scene.add(e),
                this.renderer = new window.THREE.WebGLRenderer,
                this.renderer.setSize(this.videoContent.innerWidth / 4, this.videoContent.innerHeight / 4),
                this.videoContent.appendChild(this.renderer.domElement),
                this.root.addEventListener("mousedown", this.onDocumentMouseDown, !1),
                this.root.addEventListener("mouseup", this.onDocumentMouseUp, !1),
                this.vrAnimate()
            }
            ,
            Video.prototype.vrAnimate = function vrAnimate() {
                this.vrAnimateId = requestAnimationFrame(this.vrAnimate),
                this.lat = Math.max(-85, Math.min(85, this.lat)),
                this.phi = window.THREE.Math.degToRad(90 - this.lat),
                this.theta = window.THREE.Math.degToRad(this.lon),
                this.target.x = Math.sin(this.phi) * Math.cos(this.theta),
                this.target.y = Math.cos(this.phi),
                this.target.z = Math.sin(this.phi) * Math.sin(this.theta),
                this.camera.lookAt(this.target),
                this.renderer.render(this.scene, this.camera)
            }
            ,
            Video.prototype.onWindowResize = function onWindowResize(e, t) {
                this.camera && (this.camera.aspect = e / t,
                this.camera.updateProjectionMatrix(),
                this.renderer.setSize(e, t));
                var r = stateGetIn(["app", "width"])
                  , i = stateGetIn(["app", "height"]);
                this.renderer && this.renderer.domElement && (this.renderer.domElement.style.marginTop = (i - this.renderer.domElement.height) / 2 + "px",
                this.renderer.domElement.style.marginLeft = (r - this.renderer.domElement.width) / 2 + "px")
            }
            ,
            Video.prototype.onDocumentMouseDown = function onDocumentMouseDown(e) {
                0 === e.button && (e.preventDefault(),
                this.root.addEventListener("mousemove", this.onDocumentMouseMove, !1),
                this.root.addEventListener("mouseup", this.onDocumentMouseUp, !1),
                this.root.addEventListener("mouseleave", this.onDocumentMouseUp, !1))
            }
            ,
            Video.prototype.onDocumentMouseMove = function onDocumentMouseMove(e) {
                var t = e.movementX || e.mozMovementX || e.webkitMovementX || 0
                  , r = e.movementY || e.mozMovementY || e.webkitMovementY || 0;
                this.lon -= .1 * t,
                this.lat += .1 * r
            }
            ,
            Video.prototype.onDocumentMouseUp = function onDocumentMouseUp() {
                this.root.removeEventListener("mousemove", this.onDocumentMouseMove),
                this.root.removeEventListener("mouseup", this.onDocumentMouseUp)
            }
            ,
            Video.prototype.onDocumentMouseWheel = function onDocumentMouseWheel(e) {
                this.camera.fov += .05 * e.deltaY,
                this.camera.updateProjectionMatrix()
            }
            ,
            Video.prototype.onDocumentTouchStart = function onDocumentTouchStart(e) {
                e.preventDefault();
                var t = e.touches[0];
                this.touchX = t.screenX,
                this.touchY = t.screenY
            }
            ,
            Video.prototype.onDocumentTouchMove = function onDocumentTouchMove(e) {
                e.preventDefault();
                var t = e.touches[0];
                this.lon -= .1 * (t.screenX - this.touchX),
                this.lat += .1 * (t.screenY - this.touchY),
                this.touchX = t.screenX,
                this.touchY = t.screenY
            }
            ,
            Video.prototype.disposeVr = function disposeVr() {
                this.lon = 90,
                this.lat = 0,
                this.phi = 0,
                this.theta = 0,
                this.vrAnimateId && cancelAnimationFrame(this.vrAnimateId),
                this.target = null,
                this.camera = null,
                this.renderer && (this.renderer.domElement && (this.renderer.domElement.parentNode.removeChild(this.renderer.domElement),
                this.renderer.domElement = null),
                this.renderer = null),
                this.scene = null,
                this.root.removeEventListener("mousedown", this.onDocumentMouseDown, !1),
                this.root.removeEventListener("mousemove", this.onDocumentMouseMove, !1),
                this.root.removeEventListener("mouseup", this.onDocumentMouseUp, !1)
            }
            ,
            Video
        }(Ce)
          , pt = r("a9aad")
          , ct = r.n(pt);
        function video2_inherits(e, t) {
            if ("function" !== typeof t && null !== t)
                throw new TypeError("Super expression must either be null or a function, not " + typeof t);
            e.prototype = Object.create(t && t.prototype, {
                constructor: {
                    value: e,
                    enumerable: !1,
                    writable: !0,
                    configurable: !0
                }
            }),
            t && (Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : function video2_defaults(e, t) {
                for (var r = Object.getOwnPropertyNames(t), i = 0; i < r.length; i++) {
                    var o = r[i]
                      , a = Object.getOwnPropertyDescriptor(t, o);
                    a && a.configurable && void 0 === e[o] && Object.defineProperty(e, o, a)
                }
                return e
            }(e, t))
        }
        var ht = function(e) {
            function Video2() {
                return function video2_classCallCheck(e, t) {
                    if (!(e instanceof t))
                        throw new TypeError("Cannot call a class as a function")
                }(this, Video2),
                function video2_possibleConstructorReturn(e, t) {
                    if (!e)
                        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                    return !t || "object" !== typeof t && "function" !== typeof t ? e : t
                }(this, e.apply(this, arguments))
            }
            return video2_inherits(Video2, e),
            Video2.prototype.init = function init(t) {
                e.prototype.init.call(this, t),
                this.videoContent = document.createElement("div"),
                this.videoContent.className = ct.a.videoContainer,
                t.appendChild(this.videoContent),
                this.video = document.createElement("video"),
                this.video.className = ct.a.video,
                this.videoContent.appendChild(this.video),
                this.video.id = this.videoId,
                this.canvas = document.createElement("canvas"),
                this.canvas.className = ct.a.screenshot,
                this.videoContent.appendChild(this.canvas),
                this.element = this.videoContent,
                this.autoplaydiv = document.createElement("div"),
                this.videoContent.appendChild(this.autoplaydiv),
                this.canAutoPlay = !0,
                this.firstReadVide = !0,
                this.starIndex = 0,
                me.on("embedmentPlayerdispose", this.embedmentPlayerdisposeHandle),
                me.on("videoPairFrame10Over", this.videoPairFrame10Over),
                me.on(Z, this.getsdkTime),
                me.on(ee, this.beginLoadTimefun),
                this.viewFresh()
            }
            ,
            Video2.prototype.viewFresh = function viewFresh() {
                var e = stateGetIn(["app", "width"])
                  , t = stateGetIn(["app", "height"])
                  , r = stateGetIn(["app", "isFullscreen"])
                  , i = stateGetIn(["app", "isWebFullscreen"])
                  , o = stateGetIn(["app", "playbModel"])
                  , a = stateGetIn(["videoModule", "player", "videoWidth"])
                  , n = stateGetIn(["videoModule", "player", "videoHeight"])
                  , s = void 0;
                if (t -= r || i || !o ? 0 : O,
                0 === a || 0 === n)
                    s = {
                        width: e,
                        height: t
                    },
                    this.videoRealWidth = e,
                    this.videoRealHeight = t;
                else {
                    var d = 1
                      , u = 0
                      , l = 0
                      , p = 0
                      , c = 0;
                    n / a <= t / e ? (l = e,
                    u = n * (d = e / a),
                    c = .5 * t - n * d * .5) : (u = t,
                    l = a * (d = t / n),
                    p = .5 * e - a * d * .5),
                    s = {
                        width: l,
                        height: u,
                        left: p,
                        top: c
                    },
                    this.videoRealWidth = l,
                    this.videoRealHeight = u
                }
                var h = {
                    width: s.width + "px",
                    height: s.height + "px"
                };
                Object.assign(this.video.style, h),
                Object.assign(this.canvas.style, h)
            }
            ,
            Video2.prototype.setvideo2Src = function setvideo2Src(e) {
                if (this.player && (this.player.dispose(),
                this.player = null),
                this.canvas && (this.canvas.style.visibility = "hidden"),
                this.player = player_createPlayer(e, {
                    P2P: "",
                    hasVideo: !getPageData("$ROOM.audioWEBBGIMG") && void 0
                }),
                this.player) {
                    this.video.src = "",
                    this.player.attachMedia(this.video),
                    this.player.on(rt.FIRST_FRAME, this.onFirstFrame),
                    this.player.on(rt.READY, this.onReady),
                    this.player.on(rt.COMPLETE, this.onComplete),
                    this.player.on(rt.ERROR, this.onError),
                    this.player.load();
                    for (var t = (new Date).valueOf(), r = "", i = 0; i < 4; i++)
                        r += parseInt(10 * Math.random(), 10);
                    this.pid = r + t,
                    this._byteAnotherTimerID && clearInterval(this._byteAnotherTimerID),
                    clearInterval(this.failTimeIndex)
                }
                this.refreshPlayer()
            }
            ,
            Video2.prototype.refreshPlayer = function refreshPlayer() {
                var e = stateGetIn(["videoModule", "player", "volume"]);
                this.player && (this.player.volume(parseFloat(e, 10)),
                this.canAutoPlay ? this.player.play() : this.stop())
            }
            ,
            Video2.prototype.stop = function stop() {
                var e = this;
                this.player && this.canvas && this.video && this.videoRealWidth && this.videoRealHeight && (this.player.pause(),
                this.canvas.width = this.videoRealWidth,
                this.canvas.height = this.videoRealHeight,
                this.canvas.getContext("2d").drawImage(this.video, 0, 0, this.videoRealWidth, this.videoRealHeight),
                this.canvas.style.visibility = "");
                getIsHidden() ? this.dispose() : (clearTimeout(this.disposeTimer),
                this.disposeTimer = setTimeout(function() {
                    e.dispose()
                }, 20))
            }
            ,
            Video2.prototype.onCanAutoPlay = function onCanAutoPlay() {
                this.canAutoPlay = !1,
                this.showAutoplaydiv(),
                this.stop(),
                me.emit("diposeFirstVideo")
            }
            ,
            Video2.prototype.dispose = function dispose() {
                this.player && (this.player.pause(),
                this.player.dispose()),
                this.player = null,
                me.off("embedmentPlayerdispose", this.embedmentPlayerdisposeHandle),
                me.off("videoPairFrame10Over", this.videoPairFrame10Over)
            }
            ,
            Video2.prototype.onFirstFrame = function onFirstFrame() {
                this.refreshPlayer(),
                this.showFrameTimePoint = (new Date).valueOf(),
                this.performancePoint(),
                function setEmbedmentShowTime(e) {
                    be = e
                }((new Date).valueOf())
            }
            ,
            Video2.prototype.onReady = function onReady() {
                if (null != this.firstReadData) {
                    var e = (new Date).valueOf();
                    this.firstReadData.canplay_matadate = e - this.showFrameTimePoint,
                    prfLoad(this.firstReadData),
                    this.firstReadData = null
                }
                this.player.on(rt.CANAUTO_PLAY, this.onCanAutoPlay),
                this.refreshPlayer(),
                function setEmbedmentPlayer(e) {
                    Ee = e,
                    Me = !0
                }(this.player.player),
                0 === this.starIndex && (starVideoPairFrame(),
                this.starIndex = 2)
            }
            ,
            Video2.prototype.onComplete = function onComplete() {
                !function authenticationPlayerComplate() {
                    clearInterval(De),
                    clearInterval(ke),
                    setInPairFrameState(3, 3),
                    actionCall({
                        id: "videoModule",
                        action: "setPlayerError",
                        data: [3]
                    })
                }()
            }
            ,
            Video2.prototype.onError = function onError() {
                closeVideoPairFrame(1, 8)
            }
            ,
            Video2.prototype.onclick1 = function onclick1() {
                this.canAutoPlay = !0,
                this.autoplaydiv.style.visibility = "hidden",
                actionCall({
                    id: "LoadVideoNet",
                    action: "reloadVideo",
                    data: [{
                        manual: !0
                    }]
                }),
                this.embedmentPlayerdisposeHandle()
            }
            ,
            Video2.prototype.videoPairFrame10Over = function videoPairFrame10Over(e) {
                1 === e && this.embedmentPlayerdisposeHandle()
            }
            ,
            Video2.prototype.embedmentPlayerdisposeHandle = function embedmentPlayerdisposeHandle() {
                this.player && (this.player.pause(),
                this.player.dispose()),
                this.player = null,
                e.prototype.destroy.call(this),
                me.off("embedmentPlayerdispose", this.embedmentPlayerdisposeHandle),
                me.off("videoPairFrame10Over", this.videoPairFrame10Over)
            }
            ,
            Video2.prototype.showAutoplaydiv = function showAutoplaydiv() {
                closeVideoPairFrame(-1, 9);
                var e = stateGetIn(["app", "width"])
                  , t = stateGetIn(["app", "height"]);
                this.Autoplaydiv1 = document.createElement("div"),
                this.Autoplaydiv1.className = ct.a.mask1,
                this.Autoplaydiv1.onclick = this.onclick1,
                this.Autoplaydiv2 = document.createElement("div"),
                this.Autoplaydiv2.className = ct.a.autoPlayImg,
                this.Autoplaydiv2.style.transform = "matrix(1, 0, 0, 1, " + parseInt((e - 252) / 2, 10) + ", " + parseInt((t - 178) / 2, 10) + ")",
                this.Autoplaydiv1.appendChild(this.Autoplaydiv2),
                this.autoplaydiv.appendChild(this.Autoplaydiv1),
                this.Autoplaydiv3 = document.createElement("div"),
                this.Autoplaydiv3.className = ct.a.jumpdetail,
                this.Autoplaydiv3.style.transform = "matrix(1, 0, 0, 1, " + parseInt((e - 252) / 2, 10) + ", " + parseInt((t - 178) / 2, 10) + ")",
                this.Autoplaydiv3.onclick = function() {
                    window.open("https://www.douyu.com/cms/gong/201807/06/8146.shtml")
                }
                ,
                this.autoplaydiv.appendChild(this.Autoplaydiv3),
                this.canAutoPlay = !0
            }
            ,
            Video2.prototype.getsdkTime = function getsdkTime(e) {
                e && (this.startsdkTimevalue = e.bt,
                this.getsdkTimevalue = e.et)
            }
            ,
            Video2.prototype.beginLoadTimefun = function beginLoadTimefun(e) {
                e && (this.beginloadTime = e.sdkok)
            }
            ,
            Video2.prototype.performancePoint = function performancePoint() {
                var e = stateGetIn(["videoModule", "player", "p2p"])
                  , t = stateGetIn(["videoModule", "player", "isPreload"])
                  , r = stateGetIn(["app", "cdn"])
                  , i = stateGetIn(["videoModule", "player", "src"]).match(/(^|&)isp=([^&]*)(&|$)/)
                  , o = i && i[2] ? i[2] : ""
                  , a = stateGetIn(["videoModule", "player", "starEnterH5Play"])
                  , n = stateGetIn(["LoadVideoNet", "requestRoomInfoTimePoint"])
                  , s = (new Date).valueOf()
                  , d = (new Date).valueOf()
                  , u = e || r;
                stateGetIn(["app", "manualLoadVideo"]) && (this.firstReadVide = !1);
                var l = window.__player && window.__player.isSwitched;
                this.firstReadVide && !l && (this.firstReadVide = !1,
                this.firstReadData = {
                    type: 3,
                    service_t: u,
                    enterFlashTimer: a,
                    getRoomInfoTimer: n,
                    getStramUrlTimer: s,
                    starRequstStramTimer: d,
                    showStramTimer: this.showFrameTimePoint,
                    isH5: !0,
                    is_back: 0,
                    av: D,
                    is_ma: t ? 1 : 0,
                    requestSDKTime: this.startsdkTimevalue,
                    getSDKTime: this.getsdkTimevalue,
                    starRequstStramTimer2: this.beginloadTime,
                    showStramTimer2: this.showFrameTimePoint,
                    isp: o
                })
            }
            ,
            Video2
        }(Ce)
          , ft = "function" === typeof Symbol && "symbol" === typeof Symbol.iterator ? function(e) {
            return typeof e
        }
        : function(e) {
            return e && "function" === typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e
        }
          , mt = !1
          , yt = void 0
          , _t = void 0
          , vt = void 0;
        function onRuntimeInitialized() {
            var e = +stateGetIn(["app", "rid"])
              , t = (new Date).getTime()
              , r = t.toString(16)
              , i = parseInt("0x" + r.substring(0, r.length - 8), 16)
              , o = parseInt("0x" + r.substring(r.length - 8, r.length), 16)
              , a = getDid()
              , n = getCookie("auth") || "201806211659380f83e682207dd1293cea68f98662b1660083967948219fe20";
            Promise.resolve().then(function() {
                return _t = (new Date).getTime(),
                window.SQSSMURFNEEDALONGLONGLONGNAME.sqsneedalongname(e, i, o, a, n, 3186)
            }).then(function(e) {
                vt = (new Date).getTime(),
                actionCall({
                    id: "LoadVideoNet",
                    action: "httpClientLoadStremUrl",
                    data: [e, t]
                }),
                mt ? h.log("****\u5f00\u59cb\u52a0\u5bc6\u5230\u7b97\u51fa\u52a0\u5bc6\u6570---" + (vt - _t)) : h.log("****\u52a0\u8f7d\u5230\u7b97\u51fa\u52a0\u5bc6\u503c-\u4e0b\u8f7d\u5230\u56de\u8c03\u5f00\u59cb\u52a0\u5bc6--" + (_t - yt) + "\u5f00\u59cb\u52a0\u5bc6\u5230\u7b97\u51fa\u52a0\u5bc6\u6570---" + (vt - _t)),
                mt = !0
            }).catch(function() {
                notifyLoadjs()
            })
        }
        function StreamEncode() {
            if (mt)
                onRuntimeInitialized();
            else {
                yt = (new Date).getTime();
                var e = "";
                e = document.createElement("script"),
                "object" !== ("undefined" === typeof WebAssembly ? "undefined" : ft(WebAssembly)) ? e.src = "https://shark2.douyucdn.cn/front-publish/sdk-file-master/aanode_131510b.js" : e.src = "https://shark2.douyucdn.cn/front-publish/sdk-file-master/wanode_fd27bd3.js",
                e.type = "text/javascript",
                document.getElementsByTagName("head")[0].appendChild(e),
                e.onerror = function() {
                    !function errHandle() {
                        notifyLoadjs()
                    }()
                }
            }
        }
        window.SQSSMURFNEEDALONGLONGLONGNAME = {
            onRuntimeInitialized: onRuntimeInitialized
        };
        var gt = makeLogger("MSG")
          , bt = {
            requestRoomInfoTimePoint: -1,
            requestStreamUrlTimePoint: 0,
            starPlayStreamTimePoint: 0,
            loadNum: 0
        };
        function action_getData() {
            return bt
        }
        function streamDataHandle(e) {
            getBaseData().app.cdn = e.rtmp_cdn,
            actionCall({
                id: "app",
                action: "refreshRidAndCdn",
                data: [e.room_id, e.rtmp_cdn]
            });
            var t = {
                is_mixed: e.is_mixed,
                mixed_url: e.mixed_url,
                mixed_live: e.mixed_live,
                rtmp_url: e.rtmp_url,
                rtmp_live: e.rtmp_live
            };
            getBaseData().app.uip = e.client_ip,
            actionCall({
                id: "app",
                action: "freshUip",
                data: [e.client_ip]
            }),
            function baseData_refeshStreamInfo(e) {
                for (var t in e)
                    he.app.streamInfo[t] = e[t]
            }(t),
            actionCall({
                id: "app",
                action: "refeshStreamInfo",
                data: [t]
            }),
            actionCall({
                id: "LoadVideoNet",
                action: "playStream",
                data: []
            })
        }
        function loadVideo() {
            var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}
              , t = e.cdn
              , r = e.rate
              , i = e.isRollback
              , o = e.isInit
              , a = e.manual
              , n = void 0 !== a && a
              , s = e.isLianmaiOver;
            if (n && closeVideoPairFrame(4, 6),
            clearRecordRateTimeIDInterval(),
            actionCall({
                id: "videoModule",
                action: "refeshplayerSrc",
                data: [""]
            }),
            actionCall({
                id: "videoModule",
                action: "setPlayerError",
                data: [0]
            }),
            actionCall({
                id: "videoModule",
                action: "refeshplayerisRollback",
                data: [i]
            }),
            actionCall({
                id: "comment",
                action: "seiMcdatachange",
                data: [""]
            }),
            n && (getBaseData().app.manualLoadVideo = n,
            actionCall({
                id: "app",
                action: "manualLoadVideo",
                data: [n]
            })),
            o) {
                var d = getPageData("$ROOM.p2p_setting")
                  , u = getPageData("$ROOM.multirates")
                  , l = void 0;
                try {
                    var p = localStorage.getItem("h5StreamPreload_h5p_room");
                    if (p)
                        p = JSON.parse(p),
                        Date.now() < p.e && (l = JSON.parse(p.v))
                } catch (e) {
                    gt.warn("parse preload stream error", e)
                }
                var c = stateGetIn(["app", "rid"]);
                l && +c === +l.room_id && l.multirates && l.multirates.length > 0 && (l.multirates.forEach(function(e) {
                    e.type = e.rate
                }),
                u = l.multirates,
                r = l.rate);
                var h = getPageData("$ROOM.coverSrc")
                  , f = getPageData("$ROOM.owner_avatar")
                  , m = getPageData("$ROOM.isDefaultAvatar")
                  , y = getPageData("$ROOM.roomSrc")
                  , _ = getPageData("$ROOM.defaultSrc")
                  , v = u && u.length > 1 ? 1 : 0
                  , g = u && u.length > 1 ? 1 : 0
                  , b = getPageData("$ROOM.is_high_game")
                  , w = getPageData("$ROOM.room_idle");
                getBaseData().app.changeRateSwitch = v,
                actionCall({
                    id: "app",
                    action: "changeRateSwitch",
                    data: [v]
                }),
                getBaseData().app.pageRateSwitch = g,
                actionCall({
                    id: "app",
                    action: "changePageRateSwitch",
                    data: [g]
                }),
                w && w.hasOwnProperty("active") && w.hasOwnProperty("minute_limit") && acjCall(j, w),
                isAnotherDay() && (set("rateRecordTime", 0),
                set("realRateModel", -1)),
                function appRoomDateHandle(e, t) {
                    for (var r in e)
                        he.app.roomInfo[r] = e[r];
                    he.app.rateSwitch = t.rateSwitch,
                    he.app.rate = t.rate
                }({
                    p2p_settings: d,
                    coverSrc: h,
                    owner_avatar: f,
                    isDefaultAvatar: m,
                    roomSrc: y,
                    defaultSrc: _
                }, {
                    rateSwitch: v,
                    liveType: b,
                    rate: r = get("realRateModel", -1)
                })
            } else
                r = stateGetIn(["app", "rate"]);
            actionCall({
                id: "LoadVideoNet",
                action: "loadStream",
                data: [t, r, i, n, o, s]
            })
        }
        function playStream() {
            var e = ""
              , t = stateGetIn(["app", "streamInfo", "rtmp_url"]);
            t && (e = t + "/" + stateGetIn(["app", "streamInfo", "rtmp_live"]));
            (t = stateGetIn(["ticket", "rtmp_url"])) && (e = t + "/" + stateGetIn(["ticket", "rtmp_live"]));
            stateGetIn(["app", "streamInfo", "is_mixed"]) && (e = stateGetIn(["app", "streamInfo", "mixed_url"]) + "/" + stateGetIn(["app", "streamInfo", "mixed_live"]));
            var r = (new Date).valueOf();
            action_getData().starPlayStreamTimePoint = r,
            actionCall({
                id: "videoModule",
                action: "refeshplayerisPlay",
                data: [!0]
            }),
            actionCall({
                id: "app",
                action: "refreshAppinfo",
                data: [stateGetIn(["app", "roomInfo"]), {
                    rateSwitch: stateGetIn(["app", "rateSwitch"]),
                    rate: stateGetIn(["app", "rate"]),
                    multirates: stateGetIn(["app", "multirates"])
                }]
            }),
            actionCall({
                id: "videoModule",
                action: "refeshplayerSrc",
                data: [e]
            })
        }
        var wt = ""
          , Pt = void 0
          , Et = void 0
          , St = void 0;
        function loadStream(e, t, r, i, o, n) {
            var s = stateGetIn(["LoadVideoNet", "loadNum"]);
            s += 1;
            var d = (new Date).valueOf()
              , u = (new Date).valueOf();
            action_getData().requestStreamUrlTimePoint = d,
            action_getData().loadNum = s,
            action_getData().requestRoomInfoTimePoint = u;
            var l = stateGetIn(["app", "rid"])
              , p = getDid()
              , c = parseInt((new Date).getTime() / 1e3, 10);
            void 0 === e && (e = stateGetIn(["app", "cdn"])),
            void 0 === t && (t = stateGetIn(["app", "rate"]));
            var h = void 0
              , f = stateGetIn(["videoModule", "haveShowVideo"]) ? 0 : 1
              , m = 0;
            get(T.RateRecordTime, 0) >= 3 && (m = 1);
            try {
                h = window.ub98484234(l, p, c) + "&cdn=" + e + "&rate=" + t + "&ver=" + D + "&iar=" + f + "&ive=" + m
            } catch (e) {
                return addPerformanceLog(I, {
                    s_error: 2,
                    err_type: 1,
                    en_ver: window.vdwdae325w_64we,
                    em: e.message
                }),
                notifyLoadjs(),
                gt.error("get stream url error.", e)
            }
            var y = !1;
            return Promise.resolve().then(function() {
                var i = window.__player && window.__player.isSwitched;
                if (o && !i) {
                    var s = void 0;
                    try {
                        var d = localStorage.getItem("h5StreamPreload_h5p_room");
                        if (d)
                            d = JSON.parse(d),
                            Date.now() < d.e && (s = JSON.parse(d.v))
                    } catch (e) {
                        gt.warn("parse preload stream error", e)
                    }
                    if (s && +l === +s.room_id && s.multirates && s.multirates.length > 0) {
                        if (y = !0,
                        !s.rtmp_live) {
                            var u = s.multirates[0];
                            s.rtmp_url = u.rtmp_url,
                            s.rtmp_live = u.rtmp_live,
                            s.rate = u.rate,
                            gt.warn("\u627e\u4e0d\u5230\u6307\u5b9a\u6e05\u6670\u5ea6\u7684\u6d41\uff0c\u4f7f\u7528rate=" + u.rate + "\u4ee3\u66ff")
                        }
                        return s.rtmp_live && (s.rtmp_live += "&" + h),
                        s.mixed_live && (s.mixed_live += "&" + h),
                        localStorage.removeItem("h5StreamPreload_h5p_room"),
                        gt.log("use preload stream"),
                        streamHandle(s, t, r, y, e)
                    }
                }
                wt = e.toString(),
                Pt = t,
                Et = n,
                St = r;
                var p = getPageData("$ROOM.cate_id");
                return 208 !== +p && 181 !== +p ? a.httpClient.post(String, (isSupermanager() || getIsHostlive() ? C : L) + "/" + l, h).subscribe(function(i) {
                    var o = i.error;
                    try {
                        if (0 !== o)
                            throw notifyLoadjs(),
                            -1 === o ? addPerformanceLog(I, {
                                s_error: 2,
                                err_type: 2,
                                en_ver: window.vdwdae325w_64we,
                                em: i.msg
                            }) : -9 === +o && acjCall(N),
                            closeVideoPairFrame(4, 7),
                            new Error("stream error code = " + o);
                        var a = JSON.parse(i.data);
                        n && a && (a.is_mixed = !1),
                        streamHandle(a, t, r, y, e)
                    } catch (e) {
                        actionCall({
                            id: "loading",
                            action: "showLoading",
                            data: [!0]
                        }),
                        notifyLoadjs()
                    }
                }) : (delayStreamWhilte() && getInPairFrameState() < 2 || actionCall({
                    id: "loading",
                    action: "showLoading",
                    data: [!0]
                }),
                StreamEncode())
            }).catch(function(e) {
                gt.error("Load stream api error : roomid = " + l, e),
                notifyLoadjs()
            }),
            null
        }
        function httpClientLoadStremUrl(e, t) {
            var r = stateGetIn(["app", "rid"])
              , i = stateGetIn(["videoModule", "haveShowVideo"]) ? 0 : 1
              , o = 0;
            get(T.RateRecordTime, 0) >= 3 && (o = 1);
            var n = wt
              , s = Pt;
            void 0 === n && (n = stateGetIn(["app", "cdn"]).toString()),
            void 0 === s && (s = stateGetIn(["app", "rate"]));
            var d = getDid()
              , u = "cdn=" + n + "&rate=" + s + "&ver=" + D + "&iar=" + i + "&ive=" + o + "&" + e + "&sov=1&tt=" + t + "&did=" + d;
            return Promise.resolve().then(function() {
                return a.httpClient.post(String, (isSupermanager() || getIsHostlive() ? C : L) + "/" + r, u).subscribe(function(e) {
                    var t = e.error;
                    try {
                        if (0 !== t)
                            throw notifyLoadjs(),
                            -1 === t ? addPerformanceLog(I, {
                                s_error: 2,
                                err_type: 2,
                                en_ver: window.vdwdae325w_64we,
                                em: e.msg
                            }) : -9 === +t && acjCall(N),
                            closeVideoPairFrame(4, 7),
                            new Error("stream error code = " + t);
                        var r = JSON.parse(e.data);
                        Et && r && (r.is_mixed = !1),
                        streamHandle(r, s, St, !1, n)
                    } catch (e) {
                        notifyLoadjs(),
                        actionCall({
                            id: "loading",
                            action: "showLoading",
                            data: [!0]
                        })
                    }
                })
            }).catch(function(e) {
                gt.error("Load stream api error : roomid = " + r, e),
                notifyLoadjs()
            }),
            null
        }
        var Mt = !1;
        function loadTicketStream(e, t, r) {
            if (!Mt && r && (actionCall({
                id: "ticket",
                action: "initpayment_mode",
                data: [r.payment_mode]
            }),
            acjCall(te, {
                status: 1,
                ticketId: r.ticket_id
            }),
            Mt = !0),
            !1 !== stateGetIn(["app", "isLogin"])) {
                var i = stateGetIn(["LoadVideoNet", "loadNum"]);
                i += 1;
                var o = (new Date).valueOf();
                action_getData().requestStreamUrlTimePoint = o,
                action_getData().loadNum = i,
                action_getData().requestRoomInfoTimePoint = -1;
                var n = stateGetIn(["videoModule", "haveShowVideo"]) ? 0 : 1;
                getBaseData().app.rate = t,
                actionCall({
                    id: "app",
                    action: "freshRate",
                    data: [t]
                });
                var s = stateGetIn(["app", "rid"])
                  , d = stateGetIn(["app", "isYuanhua"])
                  , u = getDid()
                  , l = parseInt((new Date).getTime() / 1e3, 10);
                void 0 === e && (e = stateGetIn(["app", "cdn"])),
                void 0 === t && (t = stateGetIn(["app", "rate"])),
                a.httpClient.post(String, R + "/" + s, window.ub98484234(s, u, l) + "&cdn=" + e + "&rate=" + t + "&iar=" + n + "&ver=" + D).subscribe(function(e) {
                    try {
                        var t = JSON.stringify(e);
                        0 === +(e = JSON.parse(t)).error && (e.data = JSON.parse(e.data)),
                        e.flash_is_yuanhua = d ? 1 : 0,
                        getBaseData().app.uip = e.client_ip,
                        actionCall({
                            id: "app",
                            action: "freshUip",
                            data: [e.client_ip]
                        }),
                        actionCall({
                            id: "app",
                            action: "setTicketData",
                            data: [e]
                        }),
                        getBaseData().app.cdn = e.data.rtmp_cdn,
                        actionCall({
                            id: "app",
                            action: "freshCdn",
                            data: [e.data.rtmp_cdn]
                        })
                    } catch (e) {
                        notifyLoadjs(),
                        gt.warn("parse preload stream error", e),
                        actionCall({
                            id: "loading",
                            action: "showLoading",
                            data: [!0]
                        }),
                        actionCall({
                            id: "videoModule",
                            action: "setPlay",
                            data: [!0, !0]
                        })
                    }
                })
            } else
                notifyLoadjs()
        }
        function reloadVideo() {
            var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}
              , t = e.manual
              , r = e.isLianmaiOver;
            actionCall({
                id: "videoModule",
                action: "refeshplayerisPlay",
                data: [!0]
            }),
            actionCall({
                id: "LoadVideoNet",
                action: "loadVideo",
                data: [{
                    manual: t,
                    isLianmaiOver: r
                }]
            })
        }
        function action_initData() {
            bt = {
                requestRoomInfoTimePoint: -1,
                requestStreamUrlTimePoint: 0,
                starPlayStreamTimePoint: 0,
                loadNum: 0
            }
        }
        function loadVideoNet_inherits(e, t) {
            if ("function" !== typeof t && null !== t)
                throw new TypeError("Super expression must either be null or a function, not " + typeof t);
            e.prototype = Object.create(t && t.prototype, {
                constructor: {
                    value: e,
                    enumerable: !1,
                    writable: !0,
                    configurable: !0
                }
            }),
            t && (Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : function loadVideoNet_defaults(e, t) {
                for (var r = Object.getOwnPropertyNames(t), i = 0; i < r.length; i++) {
                    var o = r[i]
                      , a = Object.getOwnPropertyDescriptor(t, o);
                    a && a.configurable && void 0 === e[o] && Object.defineProperty(e, o, a)
                }
                return e
            }(e, t))
        }
        var Tt = function(e) {
            function LoadVideoNet() {
                !function loadVideoNet_classCallCheck(e, t) {
                    if (!(e instanceof t))
                        throw new TypeError("Cannot call a class as a function")
                }(this, LoadVideoNet);
                var t = function loadVideoNet_possibleConstructorReturn(e, t) {
                    if (!e)
                        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                    return !t || "object" !== typeof t && "function" !== typeof t ? e : t
                }(this, e.call(this));
                return action_initData(),
                t.id = "LoadVideoNet",
                t.actionList = ["reloadVideo"],
                t
            }
            return loadVideoNet_inherits(LoadVideoNet, e),
            LoadVideoNet.prototype.init = function init(t) {
                e.prototype.init.call(this, t)
            }
            ,
            LoadVideoNet.prototype.destroy = function destroy() {
                e.prototype.destroy.call(this)
            }
            ,
            LoadVideoNet.prototype.getMoudleDate = function getMoudleDate() {
                return action_getData()
            }
            ,
            LoadVideoNet.prototype.actionHandle = function actionHandle(e) {
                var t = e.action
                  , r = e.data;
                o && o[t] && o[t].apply(o, r)
            }
            ,
            LoadVideoNet
        }(Ce);
        function h5Video_inherits(e, t) {
            if ("function" !== typeof t && null !== t)
                throw new TypeError("Super expression must either be null or a function, not " + typeof t);
            e.prototype = Object.create(t && t.prototype, {
                constructor: {
                    value: e,
                    enumerable: !1,
                    writable: !0,
                    configurable: !0
                }
            }),
            t && (Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : function h5Video_defaults(e, t) {
                for (var r = Object.getOwnPropertyNames(t), i = 0; i < r.length; i++) {
                    var o = r[i]
                      , a = Object.getOwnPropertyDescriptor(t, o);
                    a && a.configurable && void 0 === e[o] && Object.defineProperty(e, o, a)
                }
                return e
            }(e, t))
        }
        var Dt = function(e) {
            function H5Video() {
                !function h5Video_classCallCheck(e, t) {
                    if (!(e instanceof t))
                        throw new TypeError("Cannot call a class as a function")
                }(this, H5Video);
                var t = function h5Video_possibleConstructorReturn(e, t) {
                    if (!e)
                        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                    return !t || "object" !== typeof t && "function" !== typeof t ? e : t
                }(this, e.call(this));
                return function disposeDataManager() {
                    ie = [],
                    oe = !1,
                    ae = [],
                    ne = [],
                    se = [],
                    de = [],
                    ue = []
                }(),
                t.modules = [],
                t.isVideoShow = !1,
                t
            }
            return h5Video_inherits(H5Video, e),
            H5Video.prototype.init = function init(e, t) {
                this.container = e,
                function initWebMRoomData(e) {
                    ce.$ROOM.show_status = e.show_status,
                    ce.$ROOM.p2p_setting = e.p2p_setting,
                    ce.$ROOM.multirates = e.multirates,
                    ce.$ROOM.cate_id = e.cate_id,
                    ce.$ROOM.isVertical = e.isVertical,
                    ce.$ROOM.coverSrc = e.coverSrc,
                    ce.$ROOM.owner_avatar = e.owner_avatar,
                    ce.$ROOM.isDefaultAvatar = e.isDefaultAvatar,
                    ce.$ROOM.roomSrc = e.roomSrc,
                    ce.$ROOM.defaultSrc = e.defaultSrc,
                    ce.$ROOM.is_high_game = e.is_high_game,
                    ce.$ROOM.room_idle = e.room_idle,
                    ce.$ROOM.show_status = e.show_status,
                    ce.$ROOM.room_id = e.room_id,
                    ce.$ROOM.owner_uid = e.owner_uid,
                    ce.$ROOM.eticket = e.eticket,
                    ce.$ROOM.is_video_high_quality_time = e.is_video_high_quality_time,
                    ce.$ROOM.video_high_quality_resolution = e.video_high_quality_resolution,
                    initBaseData()
                }(get$ROOM()),
                function refreshSize(e) {
                    var t = e.width
                      , r = e.height;
                    t && (he.app.width = t),
                    r && (he.app.height = r)
                }(e.getBoundingClientRect());
                var r = void 0;
                delayStreamWhilte() && 2 !== t ? (r = new ht,
                this.registerModule(new Re(this), new lt(this), r, new Tt(this))) : this.registerModule(new Re(this), new lt(this), new Tt(this)),
                function setmodules(e) {
                    ie = e
                }(this.modules),
                actionCall({
                    id: "videoModule",
                    action: "setEnterPlay",
                    data: [(new Date).valueOf()]
                }),
                delayStreamWhilte() && 2 !== t && r.setvideo2Src(window.streamUrl),
                actionCall({
                    id: "LoadVideoNet",
                    action: "loadVideo",
                    data: [{
                        isInit: !0
                    }]
                }),
                function acjMonitorData(e) {
                    le || (le = new F),
                    pe || (le.MonitorData(G, callBack),
                    le.MonitorData(U, ReadcallBack),
                    pe = !0),
                    !0 === window.playerBusinessREADY && ReadcallBack(),
                    le.setPlayerVersion(e)
                }(220050105)
            }
            ,
            H5Video.prototype.destroy = function destroy(e) {
                this.removeAllListeners(),
                this.modules.forEach(function(t) {
                    return t.destroy(e)
                }),
                this.modules = null,
                clearRecordRateTimeIDInterval(),
                this.container = null,
                closeVideoPairFrame(4, 4)
            }
            ,
            H5Video.prototype.registerModule = function registerModule() {
                for (var e = this, t = arguments.length, r = Array(t), i = 0; i < t; i++)
                    r[i] = arguments[i];
                r.forEach(function(t) {
                    t.init(e.container),
                    e.modules.push(t)
                }),
                function PageVisibility_init() {
                    st && (dt = document[st])
                }()
            }
            ,
            H5Video.prototype.getModule = function getModule(e) {
                for (var t = 0; t < this.modules.length; t++) {
                    var r = this.modules[t];
                    if (r.id === e)
                        return r
                }
                return null
            }
            ,
            H5Video
        }(s.EventEmitter)
          , kt = kt || function(e, t) {
            var r = {}
              , i = r.lib = {}
              , o = function n() {}
              , a = i.Base = {
                extend: function extend(e) {
                    o.prototype = this;
                    var t = new o;
                    return e && t.mixIn(e),
                    t.hasOwnProperty("init") || (t.init = function() {
                        t.$super.init.apply(this, arguments)
                    }
                    ),
                    t.init.prototype = t,
                    t.$super = this,
                    t
                },
                create: function create() {
                    var e = this.extend();
                    return e.init.apply(e, arguments),
                    e
                },
                init: function init() {},
                mixIn: function mixIn(e) {
                    for (var t in e)
                        e.hasOwnProperty(t) && (this[t] = e[t]);
                    e.hasOwnProperty("toString") && (this.toString = e.toString)
                },
                clone: function clone() {
                    return this.init.prototype.extend(this)
                }
            }
              , n = i.WordArray = a.extend({
                init: function init(e, t) {
                    e = this.words = e || [],
                    this.sigBytes = void 0 != t ? t : 4 * e.length
                },
                toString: function toString(e) {
                    return (e || d).stringify(this)
                },
                concat: function concat(e) {
                    var t = this.words
                      , r = e.words
                      , i = this.sigBytes;
                    if (e = e.sigBytes,
                    this.clamp(),
                    i % 4)
                        for (var o = 0; o < e; o++)
                            t[i + o >>> 2] |= (r[o >>> 2] >>> 24 - o % 4 * 8 & 255) << 24 - (i + o) % 4 * 8;
                    else if (65535 < r.length)
                        for (o = 0; o < e; o += 4)
                            t[i + o >>> 2] = r[o >>> 2];
                    else
                        t.push.apply(t, r);
                    return this.sigBytes += e,
                    this
                },
                clamp: function clamp() {
                    var t = this.words
                      , r = this.sigBytes;
                    t[r >>> 2] &= 4294967295 << 32 - r % 4 * 8,
                    t.length = e.ceil(r / 4)
                },
                clone: function clone() {
                    var e = a.clone.call(this);
                    return e.words = this.words.slice(0),
                    e
                },
                random: function random(t) {
                    for (var r = [], i = 0; i < t; i += 4)
                        r.push(4294967296 * e.random() | 0);
                    return new n.init(r,t)
                }
            })
              , s = r.enc = {}
              , d = s.Hex = {
                stringify: function stringify(e) {
                    var t = e.words;
                    e = e.sigBytes;
                    for (var r = [], i = 0; i < e; i++) {
                        var o = t[i >>> 2] >>> 24 - i % 4 * 8 & 255;
                        r.push((o >>> 4).toString(16)),
                        r.push((15 & o).toString(16))
                    }
                    return r.join("")
                },
                parse: function parse(e) {
                    for (var t = e.length, r = [], i = 0; i < t; i += 2)
                        r[i >>> 3] |= parseInt(e.substr(i, 2), 16) << 24 - i % 8 * 4;
                    return new n.init(r,t / 2)
                }
            }
              , u = s.Latin1 = {
                stringify: function stringify(e) {
                    var t = e.words;
                    e = e.sigBytes;
                    for (var r = [], i = 0; i < e; i++)
                        r.push(String.fromCharCode(t[i >>> 2] >>> 24 - i % 4 * 8 & 255));
                    return r.join("")
                },
                parse: function parse(e) {
                    for (var t = e.length, r = [], i = 0; i < t; i++)
                        r[i >>> 2] |= (255 & e.charCodeAt(i)) << 24 - i % 4 * 8;
                    return new n.init(r,t)
                }
            }
              , l = s.Utf8 = {
                stringify: function stringify(e) {
                    try {
                        return decodeURIComponent(escape(u.stringify(e)))
                    } catch (e) {
                        throw Error("Malformed UTF-8 data")
                    }
                },
                parse: function parse(e) {
                    return u.parse(unescape(encodeURIComponent(e)))
                }
            }
              , p = i.BufferedBlockAlgorithm = a.extend({
                reset: function reset() {
                    this._data = new n.init,
                    this._nDataBytes = 0
                },
                _append: function _append(e) {
                    "string" == typeof e && (e = l.parse(e)),
                    this._data.concat(e),
                    this._nDataBytes += e.sigBytes
                },
                _process: function _process(t) {
                    var r = this._data
                      , i = r.words
                      , o = r.sigBytes
                      , a = this.blockSize
                      , s = o / (4 * a);
                    if (t = (s = t ? e.ceil(s) : e.max((0 | s) - this._minBufferSize, 0)) * a,
                    o = e.min(4 * t, o),
                    t) {
                        for (var d = 0; d < t; d += a)
                            this._doProcessBlock(i, d);
                        d = i.splice(0, t),
                        r.sigBytes -= o
                    }
                    return new n.init(d,o)
                },
                clone: function clone() {
                    var e = a.clone.call(this);
                    return e._data = this._data.clone(),
                    e
                },
                _minBufferSize: 0
            });
            i.Hasher = p.extend({
                cfg: a.extend(),
                init: function init(e) {
                    this.cfg = this.cfg.extend(e),
                    this.reset()
                },
                reset: function reset() {
                    p.reset.call(this),
                    this._doReset()
                },
                update: function update(e) {
                    return this._append(e),
                    this._process(),
                    this
                },
                finalize: function finalize(e) {
                    return e && this._append(e),
                    this._doFinalize()
                },
                blockSize: 16,
                _createHelper: function _createHelper(e) {
                    return function(t, r) {
                        return new e.init(r).finalize(t)
                    }
                },
                _createHmacHelper: function _createHmacHelper(e) {
                    return function(t, r) {
                        return new c.HMAC.init(e,r).finalize(t)
                    }
                }
            });
            var c = r.algo = {};
            return r
        }(Math);
        !function(e) {
            function p(e, t, r, i, o, a, n) {
                return ((e = e + (t & r | ~t & i) + o + n) << a | e >>> 32 - a) + t
            }
            function m(e, t, r, i, o, a, n) {
                return ((e = e + (t & i | r & ~i) + o + n) << a | e >>> 32 - a) + t
            }
            function l(e, t, r, i, o, a, n) {
                return ((e = e + (t ^ r ^ i) + o + n) << a | e >>> 32 - a) + t
            }
            function n(e, t, r, i, o, a, n) {
                return ((e = e + (r ^ (t | ~i)) + o + n) << a | e >>> 32 - a) + t
            }
            for (var t = kt, r = (o = t.lib).WordArray, i = o.Hasher, o = t.algo, a = [], s = 0; 64 > s; s++)
                a[s] = 4294967296 * e.abs(e.sin(s + 1)) | 0;
            o = o.MD5 = i.extend({
                _doReset: function _doReset() {
                    this._hash = new r.init([1732584193, 4023233417, 2562383102, 271733878])
                },
                _doProcessBlock: function _doProcessBlock(e, t) {
                    for (var r = 0; 16 > r; r++) {
                        var i = e[d = t + r];
                        e[d] = 16711935 & (i << 8 | i >>> 24) | 4278255360 & (i << 24 | i >>> 8)
                    }
                    r = this._hash.words;
                    var o, s, d = e[t + 0], u = (i = e[t + 1],
                    e[t + 2]), c = e[t + 3], h = e[t + 4], f = e[t + 5], y = e[t + 6], _ = e[t + 7], v = e[t + 8], g = e[t + 9], b = e[t + 10], w = e[t + 11], P = e[t + 12], E = e[t + 13], S = e[t + 14], M = e[t + 15], T = r[0], D = n(D = n(D = n(D = n(D = l(D = l(D = l(D = l(D = m(D = m(D = m(D = m(D = p(D = p(D = p(D = p(D = r[1], s = p(s = r[2], o = p(o = r[3], T = p(T, D, s, o, d, 7, a[0]), D, s, i, 12, a[1]), T, D, u, 17, a[2]), o, T, c, 22, a[3]), s = p(s, o = p(o, T = p(T, D, s, o, h, 7, a[4]), D, s, f, 12, a[5]), T, D, y, 17, a[6]), o, T, _, 22, a[7]), s = p(s, o = p(o, T = p(T, D, s, o, v, 7, a[8]), D, s, g, 12, a[9]), T, D, b, 17, a[10]), o, T, w, 22, a[11]), s = p(s, o = p(o, T = p(T, D, s, o, P, 7, a[12]), D, s, E, 12, a[13]), T, D, S, 17, a[14]), o, T, M, 22, a[15]), s = m(s, o = m(o, T = m(T, D, s, o, i, 5, a[16]), D, s, y, 9, a[17]), T, D, w, 14, a[18]), o, T, d, 20, a[19]), s = m(s, o = m(o, T = m(T, D, s, o, f, 5, a[20]), D, s, b, 9, a[21]), T, D, M, 14, a[22]), o, T, h, 20, a[23]), s = m(s, o = m(o, T = m(T, D, s, o, g, 5, a[24]), D, s, S, 9, a[25]), T, D, c, 14, a[26]), o, T, v, 20, a[27]), s = m(s, o = m(o, T = m(T, D, s, o, E, 5, a[28]), D, s, u, 9, a[29]), T, D, _, 14, a[30]), o, T, P, 20, a[31]), s = l(s, o = l(o, T = l(T, D, s, o, f, 4, a[32]), D, s, v, 11, a[33]), T, D, w, 16, a[34]), o, T, S, 23, a[35]), s = l(s, o = l(o, T = l(T, D, s, o, i, 4, a[36]), D, s, h, 11, a[37]), T, D, _, 16, a[38]), o, T, b, 23, a[39]), s = l(s, o = l(o, T = l(T, D, s, o, E, 4, a[40]), D, s, d, 11, a[41]), T, D, c, 16, a[42]), o, T, y, 23, a[43]), s = l(s, o = l(o, T = l(T, D, s, o, g, 4, a[44]), D, s, P, 11, a[45]), T, D, M, 16, a[46]), o, T, u, 23, a[47]), s = n(s, o = n(o, T = n(T, D, s, o, d, 6, a[48]), D, s, _, 10, a[49]), T, D, S, 15, a[50]), o, T, f, 21, a[51]), s = n(s, o = n(o, T = n(T, D, s, o, P, 6, a[52]), D, s, c, 10, a[53]), T, D, b, 15, a[54]), o, T, i, 21, a[55]), s = n(s, o = n(o, T = n(T, D, s, o, v, 6, a[56]), D, s, M, 10, a[57]), T, D, y, 15, a[58]), o, T, E, 21, a[59]), s = n(s, o = n(o, T = n(T, D, s, o, h, 6, a[60]), D, s, w, 10, a[61]), T, D, u, 15, a[62]), o, T, g, 21, a[63]);
                    r[0] = r[0] + T | 0,
                    r[1] = r[1] + D | 0,
                    r[2] = r[2] + s | 0,
                    r[3] = r[3] + o | 0
                },
                _doFinalize: function _doFinalize() {
                    var t = this._data
                      , r = t.words
                      , i = 8 * this._nDataBytes
                      , o = 8 * t.sigBytes;
                    r[o >>> 5] |= 128 << 24 - o % 32;
                    var a = e.floor(i / 4294967296);
                    for (r[15 + (o + 64 >>> 9 << 4)] = 16711935 & (a << 8 | a >>> 24) | 4278255360 & (a << 24 | a >>> 8),
                    r[14 + (o + 64 >>> 9 << 4)] = 16711935 & (i << 8 | i >>> 24) | 4278255360 & (i << 24 | i >>> 8),
                    t.sigBytes = 4 * (r.length + 1),
                    this._process(),
                    r = (t = this._hash).words,
                    i = 0; 4 > i; i++)
                        o = r[i],
                        r[i] = 16711935 & (o << 8 | o >>> 24) | 4278255360 & (o << 24 | o >>> 8);
                    return t
                },
                clone: function clone() {
                    var e = i.clone.call(this);
                    return e._hash = this._hash.clone(),
                    e
                }
            }),
            t.MD5 = i._createHelper(o),
            t.HmacMD5 = i._createHmacHelper(o)
        }(Math),
        window.CryptoJS = kt;
        var Ot = a.DataCenter.global.get("$ROOM.room_id");
        Ot || (Ot = window.room_id);
        var Lt = "betard/" + Ot
          , Ct = a.DataCenter.cookie() || {}
          , Rt = Ct.get("uid")
          , At = "/roomapi/biz/getSwitch?rid=" + Ot;
        5 !== +Ct.get("groupid") && +Rt !== +a.DataCenter.global.get("$ROOM.owner_uid") || (Lt = "betard/" + Ot + "?_r=" + Math.random());
        var It = {
            $DATA: Lt,
            $ROLE_BARRAGE_SWITCH: At
        };
        window.GIAS || a.DataCenter.event.load().subscribe(function(e) {
            a.DataCenter.setCommonDataConfig(It),
            a.DataCenter.common.get("$DATA")
        }),
        function setEnable(e) {
            c = e
        }(getIsDebug());
        var xt = void 0
          , Bt = void 0;
        function getVideo() {
            return xt
        }
        function createVideo(e) {
            var t = document.getElementById("js-player-video-first");
            return xt && xt.destroy(),
            showVideo() || 3 === e ? (showVideo() || notifyLoadjs(),
            (xt = new Dt).init(t, e),
            xt) : null
        }
        var Ft = ""
          , Vt = !1;
        function flashSwfObjectReadyOK() {
            var e = this;
            Vt = !0;
            var t = window.webRoomEnter
              , r = document.getElementById("js-player-video-first");
            if (!document.getElementById("room-flash-player")) {
                var i = document.createElement("div");
                i.id = "room-flash-player",
                r.appendChild(i)
            }
            var o = getFlashvars()
              , a = {
                quality: "high",
                bgcolor: "#333333",
                allowscriptaccess: "always",
                allowfullscreen: "true",
                wmode: "Opaque",
                allowFullScreenInteractive: "true"
            }
              , n = {
                id: "room-flash-player",
                name: "room-flash-player",
                align: "middle",
                allowscriptaccess: "always",
                allowfullscreen: "true",
                allowFullScreenInteractive: "true"
            };
            window.__player.flashShellLoadTime = (new Date).getTime(),
            window.swfobject.embedSWF(t, "room-flash-player", "100%", "100%", "0", "", o, a, n, function(t) {
                var r = t.success
                  , i = t.ref;
                r ? (window.flashPlayer = i,
                window.setFlashPlayer && window.setFlashPlayer()) : e.logger.warn("\u5d4c\u5165Flash\u64ad\u653e\u5668\u5931\u8d25")
            })
        }
        function CreateFirstVideo(e) {
            var t = checkH5();
            if (t)
                h.log("enable fast video."),
                window.FIRST_VIDEO = !0,
                window.__use_player_video_ready = !0,
                window.$Player = {
                    useh5: t
                },
                createVideo(e);
            else if (!t) {
                if (showVideo() && (window.FIRST_VIDEO = !0,
                window.__use_player_video_ready = !0),
                Vt)
                    return void flashSwfObjectReadyOK();
                (Ft = document.createElement("script")).src = getPageData("$SYS.res_flash_url") + "v2/swfobject.js",
                Ft.onload = flashSwfObjectReadyOK,
                Ft.type = "text/javascript",
                document.getElementsByTagName("head")[0].appendChild(Ft)
            }
        }
        window.checkCreateFirstVideo = function checkCreateFirstVideo() {
            var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 0
              , t = checkH5();
            0 === e ? (h.log("enable fast video."),
            window.FIRST_VIDEO = !0,
            window.__use_player_video_ready = !0,
            window.$Player = {
                useh5: t
            },
            createVideo(2),
            window.swfobject && window.swfobject.removeSWF("room-flash-player")) : CreateFirstVideo(e)
        }
        ,
        window.destroyFirstVideo = function destroyFirstVideo(e) {
            xt && xt.destroy(e),
            xt = null
        }
        ;
        var jt = window.location.href.indexOf("carnivalBarrageRoom");
        window.GIAS ? -1 === jt && a.DataCenter.common.get("Player.room").subscribe(function(e) {
            e && e.decrypt && 1 === e.decrypt.status ? CreateFirstVideo() : h.warn("\u591a\u623f\u95f4\u4e13\u9898\u9875\u6ca1\u6709\u521d\u59cb\u5316H5\u64ad\u653e\u5668")
        }) : -1 === jt && CreateFirstVideo(),
        window.flashTwoLoad = function flashTwoLoad() {
            (Bt = function getFlashOBJECT(e) {
                return -1 !== navigator.appName.indexOf("Microsoft") ? window[e] : document[e]
            }("room-flash-player")) && Bt.loadTwo && Bt.loadTwo(),
            window.playerJSok = !0
        }
        ;
        var Nt = document.getElementsByClassName("layout-Player-videoMain")[0];
        Nt && (Nt.addEventListener("mousemove", function() {
            acjCall("room_mouse_move", {})
        }),
        Nt.addEventListener("mouseleave", function() {
            acjCall("room_mouse_leave", {})
        }))
    },
    "2e0bc": function(e, t) {
        e.exports = playerSDK4a27f53fa91305e2ac40
    },
    "300f3": function(e, t, r) {
        e.exports = {
            bg: "_1mkeE5FoAGEpF_lL5zlZRC",
            yzBg: "_2D8rsQEl1J7W6Ud_6l0VGe"
        }
    },
    "73f2f": function(e, t, r) {
        e.exports = function(e) {
            var t = {};
            function __webpack_require__(r) {
                if (t[r])
                    return t[r].exports;
                var i = t[r] = {
                    i: r,
                    l: !1,
                    exports: {}
                };
                return e[r].call(i.exports, i, i.exports, __webpack_require__),
                i.l = !0,
                i.exports
            }
            return __webpack_require__.m = e,
            __webpack_require__.c = t,
            __webpack_require__.d = function(e, t, r) {
                __webpack_require__.o(e, t) || Object.defineProperty(e, t, {
                    configurable: !1,
                    enumerable: !0,
                    get: r
                })
            }
            ,
            __webpack_require__.n = function(e) {
                var t = e && e.__esModule ? function getDefault() {
                    return e.default
                }
                : function getModuleExports() {
                    return e
                }
                ;
                return __webpack_require__.d(t, "a", t),
                t
            }
            ,
            __webpack_require__.o = function(e, t) {
                return Object.prototype.hasOwnProperty.call(e, t)
            }
            ,
            __webpack_require__.p = "",
            __webpack_require__(__webpack_require__.s = 13)
        }([function(e, t, r) {
            "use strict";
            var i = this && this.__spreadArrays || function() {
                for (var e = 0, t = 0, r = arguments.length; t < r; t++)
                    e += arguments[t].length;
                var i = Array(e)
                  , o = 0;
                for (t = 0; t < r; t++)
                    for (var a = arguments[t], n = 0, s = a.length; n < s; n++,
                    o++)
                        i[o] = a[n];
                return i
            }
            ;
            Object.defineProperty(t, "__esModule", {
                value: !0
            });
            var o = !1;
            function setEnable(e) {
                o = e
            }
            function customize(e) {
                for (var t = [], r = 1; r < arguments.length; r++)
                    t[r - 1] = arguments[r];
                var a = i(["[html5 player]", "[dylive]"], t.map(function(e) {
                    return "[" + e + "]"
                }));
                return function() {
                    for (var t = [], r = 0; r < arguments.length; r++)
                        t[r] = arguments[r];
                    o && e.call.apply(e, i([console], a, t))
                }
            }
            function makeLogger() {
                for (var e = [], t = 0; t < arguments.length; t++)
                    e[t] = arguments[t];
                return {
                    log: customize.apply(void 0, i([console.log], e)),
                    debug: customize.apply(void 0, i([console.debug], e)),
                    info: customize.apply(void 0, i([console.info], e)),
                    warn: customize.apply(void 0, i([console.warn], e)),
                    error: customize.apply(void 0, i([console.error], e)),
                    setEnable: setEnable
                }
            }
            t.makeLogger = makeLogger,
            t.default = makeLogger()
        }
        , function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }),
            t.bindAll = function bindAll(e) {
                for (var t = e, r = {}; e && e !== Object.prototype; )
                    Object.getOwnPropertyNames(e).forEach(function(i) {
                        var o = Object.getOwnPropertyDescriptor(e, i);
                        if (o) {
                            if (o.get || o.set)
                                return;
                            "function" === typeof t[i] && (r[i] = !0)
                        }
                    }),
                    e = Object.getPrototypeOf(e);
                Object.keys(r).forEach(function(e) {
                    t[e] = t[e].bind(t)
                })
            }
        }
        , function(e, t, r) {
            "use strict";
            var i, o = this && this.__extends || (i = function(e, t) {
                return (i = Object.setPrototypeOf || {
                    __proto__: []
                }instanceof Array && function(e, t) {
                    e.__proto__ = t
                }
                || function(e, t) {
                    for (var r in t)
                        t.hasOwnProperty(r) && (e[r] = t[r])
                }
                )(e, t)
            }
            ,
            function(e, t) {
                function __() {
                    this.constructor = e
                }
                i(e, t),
                e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
                new __)
            }
            );
            Object.defineProperty(t, "__esModule", {
                value: !0
            });
            var a = function(e) {
                function DyNetworkError() {
                    for (var t = [], r = 0; r < arguments.length; r++)
                        t[r] = arguments[r];
                    var i = e.apply(this, t) || this;
                    return i.name = DyNetworkError.NAME,
                    i
                }
                return o(DyNetworkError, e),
                DyNetworkError.NAME = "DyNetworkError",
                DyNetworkError
            }(Error);
            t.DyNetworkError = a;
            var n = function(e) {
                function DyMediaError() {
                    for (var t = [], r = 0; r < arguments.length; r++)
                        t[r] = arguments[r];
                    var i = e.apply(this, t) || this;
                    return i.name = DyMediaError.NAME,
                    i
                }
                return o(DyMediaError, e),
                DyMediaError.NAME = "DyMediaError",
                DyMediaError
            }(Error);
            t.DyMediaError = n;
            var s = function(e) {
                function DyDemuxError(t, r) {
                    var i = e.call(this, t) || this;
                    return i.errorId = 0,
                    i.name = DyDemuxError.NAME,
                    i.errorId = r,
                    i
                }
                return o(DyDemuxError, e),
                DyDemuxError.NAME = "DyDemuxError",
                DyDemuxError
            }(Error);
            t.DyDemuxError = s
        }
        , function(e, t, r) {
            "use strict";
            var i = this && this.__importDefault || function(e) {
                return e && e.__esModule ? e : {
                    default: e
                }
            }
            ;
            Object.defineProperty(t, "__esModule", {
                value: !0
            });
            var o = i(r(20));
            t.isBufferEqual = function isBufferEqual(e, t) {
                if (e === t)
                    return !0;
                if (!e || !t)
                    return !1;
                if (e.length !== t.length)
                    return !1;
                for (var r = 0, i = e.length; r < i; r++)
                    if (e[r] !== t[r])
                        return !1;
                return !0
            }
            ,
            t.deepClone = function deepClone(e) {
                return JSON.parse(JSON.stringify(e))
            }
            ,
            t.u8aClone = function u8aClone(e) {
                var t = new Uint8Array(e.byteLength);
                return t.set(e, 0),
                t
            }
            ,
            t.timescaledTime = function timescaledTime(e, t) {
                return Math.floor(e * t / 1e3)
            }
            ,
            t.timescaledTime64 = function timescaledTime64(e, t) {
                return o.default.fromNumber(e / 1e3 * t, !0)
            }
            ,
            t.bufferConcat = function bufferConcat(e) {
                var t = e.reduce(function(e, t) {
                    return e + t.length
                }, 0)
                  , r = new Uint8Array(t)
                  , i = 0;
                return e.forEach(function(e) {
                    r.set(e, i),
                    i += e.length
                }),
                r
            }
        }
        , function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            });
            var i = r(1)
              , o = function() {
                function BaseLoader() {
                    this._loaderBytes = 0,
                    this._destroyed = !1,
                    i.bindAll(this)
                }
                return Object.defineProperty(BaseLoader.prototype, "url", {
                    get: function() {
                        return this._url
                    },
                    enumerable: !0,
                    configurable: !0
                }),
                Object.defineProperty(BaseLoader.prototype, "redirectUrl", {
                    get: function() {
                        return this._redirectUrl
                    },
                    enumerable: !0,
                    configurable: !0
                }),
                BaseLoader.prototype.load = function(e, t) {
                    this._loaderBytes = 0,
                    this._url = e
                }
                ,
                BaseLoader.prototype.dispose = function() {
                    this._destroyed = !0,
                    this.onData = null,
                    this.onEnd = null,
                    this.onError = null
                }
                ,
                BaseLoader.prototype.getStatistics = function() {
                    return {
                        loaderBytes: this._loaderBytes,
                        cdnBytes: this._loaderBytes,
                        p2pBytes: 0,
                        totalDropBytes: 0
                    }
                }
                ,
                BaseLoader.prototype._onData = function(e) {
                    e && (e instanceof ArrayBuffer ? this._loaderBytes += e.byteLength : this._loaderBytes += e.data.byteLength,
                    this.onData && this.onData(e))
                }
                ,
                BaseLoader.prototype._onRedirectUrl = function(e) {
                    this._redirectUrl = e
                }
                ,
                BaseLoader.prototype._onError = function(e) {
                    this.onError && this.onError(e)
                }
                ,
                BaseLoader
            }();
            t.BaseLoader = o
        }
        , function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            });
            var i = {};
            !function detect() {
                var e = self.navigator.userAgent.toLowerCase()
                  , t = /(edge)\/([\w.]+)/.exec(e) || /(opr)[\/]([\w.]+)/.exec(e) || /(chrome)[ \/]([\w.]+)/.exec(e) || /(iemobile)[\/]([\w.]+)/.exec(e) || /(version)(applewebkit)[ \/]([\w.]+).*(safari)[ \/]([\w.]+)/.exec(e) || /(webkit)[ \/]([\w.]+).*(version)[ \/]([\w.]+).*(safari)[ \/]([\w.]+)/.exec(e) || /(webkit)[ \/]([\w.]+)/.exec(e) || /(opera)(?:.*version|)[ \/]([\w.]+)/.exec(e) || /(msie) ([\w.]+)/.exec(e) || e.indexOf("trident") >= 0 && /(rv)(?::| )([\w.]+)/.exec(e) || e.indexOf("compatible") < 0 && /(firefox)[ \/]([\w.]+)/.exec(e) || []
                  , r = /(ipad)/.exec(e) || /(ipod)/.exec(e) || /(windows phone)/.exec(e) || /(iphone)/.exec(e) || /(kindle)/.exec(e) || /(android)/.exec(e) || /(windows)/.exec(e) || /(mac)/.exec(e) || /(linux)/.exec(e) || /(cros)/.exec(e) || []
                  , o = {
                    browser: t[5] || t[3] || t[1] || "",
                    version: t[2] || t[4] || "0",
                    majorVersion: t[4] || t[2] || "0",
                    platform: r[0] || ""
                }
                  , a = {};
                if (o.browser) {
                    a[o.browser] = !0;
                    var n = o.majorVersion.split(".");
                    a.version = {
                        major: parseInt(o.majorVersion, 10),
                        string: o.version
                    },
                    n.length > 1 && (a.version.minor = parseInt(n[1], 10)),
                    n.length > 2 && (a.version.build = parseInt(n[2], 10))
                }
                o.platform && (a[o.platform] = !0),
                (a.chrome || a.opr || a.safari) && (a.webkit = !0),
                (a.rv || a.iemobile) && (a.rv && delete a.rv,
                o.browser = "msie",
                a.msie = !0);
                a.edge && (delete a.edge,
                o.browser = "msedge",
                a.msedge = !0);
                a.opr && (o.browser = "opera",
                a.opera = !0);
                a.safari && a.android && (o.browser = "android",
                a.android = !0);
                for (var s in a.name = o.browser,
                a.platform = o.platform,
                i)
                    i.hasOwnProperty(s) && delete i[s];
                Object.assign(i, a)
            }(),
            t.default = i
        }
        , function(e, t) {
            "function" != typeof Object.assign && Object.defineProperty(Object, "assign", {
                value: function assign(e, t) {
                    "use strict";
                    if (null == e)
                        throw new TypeError("Cannot convert undefined or null to object");
                    for (var r = Object(e), i = 1; i < arguments.length; i++) {
                        var o = arguments[i];
                        if (null != o)
                            for (var a in o)
                                Object.prototype.hasOwnProperty.call(o, a) && (r[a] = o[a])
                    }
                    return r
                },
                writable: !0,
                configurable: !0
            })
        }
        , function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            });
            var i = r(4);
            t.BaseLoader = i.BaseLoader;
            var o = r(16);
            t.FetchStreamLoader = o.FetchStreamLoader;
            var a = r(17);
            t.MozChunkedLoader = a.MozChunkedLoader
        }
        , function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }),
            r(6);
            var i = r(1)
              , o = r(3)
              , a = r(21)
              , n = r(12)
              , s = r(0).makeLogger("tranmuxer-worker")
              , d = function() {
                function TransmuxerWorker() {
                    this.destroyed = !1,
                    i.bindAll(this),
                    self.window || (self.onmessage = this._onMessage,
                    self.onerror = this._onError)
                }
                return TransmuxerWorker.prototype.init = function(e) {
                    this._demux = a.createDemuxer(e.format, e),
                    this._demux ? (this._remux = n.createRemuxer(e.outputFormat, e),
                    this._remux ? (this._remux.onData = this._onRemuxData,
                    this._demux.pipe(this._remux).catch(this._onError)) : this._onError("unsupport remux format: " + e.format)) : this._onError("unsupport demxu format: " + e.format)
                }
                ,
                TransmuxerWorker.prototype.dispose = function() {
                    this.destroyed = !0,
                    this._demux && (this._demux.dispose(),
                    this._demux = null),
                    this._remux && (this._remux.dispose(),
                    this._remux = null)
                }
                ,
                TransmuxerWorker.prototype.appendData = function(e) {
                    this.destroyed || this._demux.append(e)
                }
                ,
                TransmuxerWorker.prototype.appendEnd = function() {
                    this.destroyed || this._demux.append("end")
                }
                ,
                TransmuxerWorker.prototype.firstFrame = function() {
                    this.destroyed || this._demux.append("firstFrame")
                }
                ,
                TransmuxerWorker.prototype._dispatchMessage = function(e, t) {
                    self.postMessage(e, t)
                }
                ,
                TransmuxerWorker.prototype._onRemuxData = function(e) {
                    var t = [];
                    e.data && t.push(e.data.buffer),
                    this._dispatchMessage({
                        name: "_onRemuxData",
                        params: e
                    }, t)
                }
                ,
                TransmuxerWorker.prototype.setLoggerEnable = function(e) {
                    s.setEnable(e)
                }
                ,
                TransmuxerWorker.prototype._onError = function(e) {
                    this._dispatchMessage({
                        name: "_onError",
                        params: o.deepClone(e)
                    }),
                    this.dispose()
                }
                ,
                TransmuxerWorker.prototype._onMessage = function(e) {
                    var t = e.data
                      , r = t.name
                      , i = t.params;
                    try {
                        switch (r) {
                        case "init":
                            this.init(i);
                            break;
                        case "appendData":
                            this.appendData(i);
                            break;
                        case "appendEnd":
                            this.appendEnd();
                            break;
                        case "firstFrame":
                            this.firstFrame();
                            break;
                        case "setLoggerEnable":
                            this.setLoggerEnable(i);
                            break;
                        default:
                            s.warn("unknown function: transmuxer." + r)
                        }
                    } catch (e) {
                        s.warn("call transmuxer worker " + r + " error", e)
                    }
                }
                ,
                TransmuxerWorker
            }();
            t.default = d
        }
        , function(e, t, r) {
            "use strict";
            var i, o = this && this.__extends || (i = function(e, t) {
                return (i = Object.setPrototypeOf || {
                    __proto__: []
                }instanceof Array && function(e, t) {
                    e.__proto__ = t
                }
                || function(e, t) {
                    for (var r in t)
                        t.hasOwnProperty(r) && (e[r] = t[r])
                }
                )(e, t)
            }
            ,
            function(e, t) {
                function __() {
                    this.constructor = e
                }
                i(e, t),
                e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
                new __)
            }
            );
            Object.defineProperty(t, "__esModule", {
                value: !0
            });
            var a = r(10)
              , n = r(0)
              , s = r(22)
              , d = n.makeLogger("demuxer")
              , u = function(e) {
                function Demuxer(t) {
                    var r = e.call(this) || this;
                    return r._trackConfigs = {},
                    r._lastTracks = {},
                    r._hasFirstFrame = !1,
                    r._trackLength = 2,
                    r._pendingExtradata = {},
                    r._audioGapThresholdMs = 50,
                    r._audioGapWarningTimes = 0,
                    r._config = t,
                    !1 !== t.hasAudio && !1 !== t.hasVideo || (r._trackLength = 1),
                    r
                }
                return o(Demuxer, e),
                Demuxer.prototype.dispose = function() {
                    e.prototype.dispose.call(this),
                    this._config = void 0,
                    this._trackConfigs = void 0,
                    this._lastTracks = void 0
                }
                ,
                Demuxer.prototype.append = function(e) {
                    e instanceof ArrayBuffer ? this._appendArrayBuffer(e) : e.type ? this._appendTrack(e) : "end" === e ? this._appendEnd() : "firstFrame" === e ? this._hasFirstFrame = !0 : d.warn("unknown append data: ", e)
                }
                ,
                Demuxer.prototype._appendArrayBuffer = function(e) {}
                ,
                Demuxer.prototype._appendTrack = function(e) {
                    if ("audio" === e.type || "video" === e.type) {
                        if (("audio" !== e.type || !1 !== this._config.hasAudio) && ("video" !== e.type || !1 !== this._config.hasVideo)) {
                            e.trackLength && (this._trackLength = e.trackLength),
                            e.trackLength = this._trackLength,
                            e.extradata || (e.extradata = {});
                            var t = e.config || this._trackConfigs[e.trackId];
                            if (!t) {
                                if (!(t = this._generateTrackConfig(e.type)))
                                    return void d.warn("unable to generate track config, type=" + e.type);
                                t.trackId = e.trackId
                            }
                            if (t.mimeType || "CFG" === e.flag) {
                                if (e.config = this._trackConfigs[e.trackId] = t,
                                e.data) {
                                    var r = e.codec
                                      , i = s.getParser(r);
                                    if (!i)
                                        return void d.warn("unsupport codec: " + r);
                                    if ("CFG" === e.flag) {
                                        if (e.isFrameData = !1,
                                        t.bytes = e.data,
                                        0 !== i.parseConfig(t))
                                            return void d.warn("parse " + r + " config error");
                                        "audio" === e.type && (t.timescale = t.audioSampleRate)
                                    } else if (e.isFrameData = !0,
                                    0 !== i.parseData(e))
                                        return void d.warn("parse " + r + " data error")
                                }
                                return Object.keys(this._pendingExtradata).length > 0 && (Object.assign(e.extradata, this._pendingExtradata),
                                this._pendingExtradata = {}),
                                this._lastTracks[e.trackId] = e,
                                this._audioGapDetect(e),
                                this.onData(e),
                                !0
                            }
                            d.warn("first track is not cfg, ignore: trackId=" + e.trackId + ", type=" + e.type + ", dts=" + e.dts + ", pts=" + e.pts)
                        }
                    } else
                        d.warn("unknown track type=" + e.type)
                }
                ,
                Demuxer.prototype._appendEnd = function() {
                    var e = this;
                    Object.keys(this._trackConfigs).forEach(function(t) {
                        var r = e._trackConfigs[t]
                          , i = e._lastTracks[t];
                        e._appendTrack({
                            type: r.type,
                            trackId: r.trackId,
                            dts: Math.floor(i.dts + r.refSampleDuration),
                            pts: Math.floor(i.pts + r.refSampleDuration),
                            codec: i.codec,
                            config: r,
                            isEnd: !0,
                            extradata: {}
                        })
                    })
                }
                ,
                Demuxer.prototype._generateTrackConfig = function(e) {
                    return "audio" === e ? {
                        type: "audio",
                        trackId: 1,
                        detailCodec: "",
                        timescale: 9e4,
                        duration: 0,
                        refSampleDuration: 0,
                        bytes: void 0,
                        mimeType: "",
                        channelCount: 0,
                        audioSampleRate: 0
                    } : "video" === e ? {
                        type: "video",
                        trackId: 2,
                        detailCodec: "",
                        timescale: 9e4,
                        duration: 0,
                        refSampleDuration: 0,
                        bytes: void 0,
                        mimeType: "",
                        presentWidth: 0,
                        presentHeight: 0,
                        codecWidth: 0,
                        codecHeight: 0
                    } : null
                }
                ,
                Demuxer.prototype._audioGapDetect = function(e) {
                    if (this._audioGapWarningTimes < 10 && "audio" === e.type && e.data && e.isFrameData) {
                        if (void 0 === this._audioExpectMs)
                            this._audioExpectMs = e.dts;
                        else {
                            var t = Math.floor(1e3 * this._audioExpectMs)
                              , r = 1e3 * e.dts - t
                              , i = Math.floor(Math.abs(r) / 1e3);
                            i > this._audioGapThresholdMs && (this._audioGapWarningTimes++,
                            d.warn("Large timestamp gap detected; may cause AV sync to drift. time:" + 1e3 * e.dts + "us expected:" + t + "us delta:" + r + "us"),
                            this._audioGapWarningTimes >= 10 && d.warn("Large timestamp gap detected Log limit reached. Further similar entries may be suppressed"),
                            this._audioGapThresholdMs = i)
                        }
                        this._audioExpectMs += e.config.refSampleDuration
                    }
                }
                ,
                Demuxer
            }(a.BaseStream);
            t.Demuxer = u
        }
        , function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            });
            var i = r(1)
              , o = function() {
                function BaseStream() {
                    i.bindAll(this)
                }
                return BaseStream.prototype.dispose = function() {
                    this.onData = null,
                    this.onError = null
                }
                ,
                BaseStream.prototype.error = function(e) {
                    this.onError(e),
                    this.dispose()
                }
                ,
                BaseStream.prototype.catch = function(e) {
                    this.onError = e
                }
                ,
                BaseStream.prototype.pipe = function(e) {
                    return this.onData = e.append,
                    this.onError = e.error,
                    e
                }
                ,
                BaseStream
            }();
            t.BaseStream = o
        }
        , function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }),
            function(e) {
                e.H264_SEI = "H264_SEI",
                e.AAC_FIL = "AAC_FIL",
                e.EXTRA_DATA = "EXTRA_DATA"
            }(t.TimeDispatchType || (t.TimeDispatchType = {})),
            function(e) {
                e.H264 = "h264",
                e.AAC = "aac",
                e.MP3 = "mp3"
            }(t.Codec || (t.Codec = {}))
        }
        , function(e, t, r) {
            "use strict";
            var i = this && this.__importDefault || function(e) {
                return e && e.__esModule ? e : {
                    default: e
                }
            }
            ;
            Object.defineProperty(t, "__esModule", {
                value: !0
            });
            var o = r(34);
            t.Remuxer = o.Remuxer;
            var a = i(r(35));
            t.createRemuxer = function createRemuxer(e, t) {
                return "mp4" === e ? new a.default(t) : "raw" === e ? new o.Remuxer(t) : null
            }
        }
        , function(e, t, r) {
            "use strict";
            function __export(e) {
                for (var r in e)
                    t.hasOwnProperty(r) || (t[r] = e[r])
            }
            Object.defineProperty(t, "__esModule", {
                value: !0
            }),
            __export(r(14)),
            __export(r(2)),
            __export(r(7))
        }
        , function(e, t, r) {
            "use strict";
            var i, o = this && this.__extends || (i = function(e, t) {
                return (i = Object.setPrototypeOf || {
                    __proto__: []
                }instanceof Array && function(e, t) {
                    e.__proto__ = t
                }
                || function(e, t) {
                    for (var r in t)
                        t.hasOwnProperty(r) && (e[r] = t[r])
                }
                )(e, t)
            }
            ,
            function(e, t) {
                function __() {
                    this.constructor = e
                }
                i(e, t),
                e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
                new __)
            }
            );
            Object.defineProperty(t, "__esModule", {
                value: !0
            }),
            r(6);
            var a = r(15)
              , n = r(1)
              , s = r(7)
              , d = r(18)
              , u = r(2)
              , l = r(38)
              , p = r(11)
              , c = r(39)
              , h = r(0).makeLogger("live-player");
            t.PlayerEvents = {
                ON_MEDIA_INFO: "mediaInfo",
                ON_FIRST_FRAME: "firstFrame",
                ON_ERROR: "player_error",
                ON_SEI: "sei",
                ON_LOAD_SEI: "loadSei",
                ON_AAC_DATA: "aacData",
                ON_EXTRA_DATA_LOAD: "extra_data_load",
                ON_EXTRA_DATA_PLAY: "extra_data_play"
            };
            var f = {
                url: "",
                format: "flv",
                outputFormat: "mp4",
                enableWorker: !0,
                debug: !1,
                stashBuffer: 65536,
                stashTime: 200,
                videoBackTime: 10,
                videoBackTimeThreshold: 15,
                enableJitterBuffer: !1,
                minBuffer: 2,
                maxBuffer: 6,
                slowRate: .95,
                fastRate: 1.05,
                audioDurationThreshold: 200,
                videoDurationThreshold: 100
            }
              , m = function(e) {
                function LivePlayer(t) {
                    var r = e.call(this) || this;
                    return r._destroyed = !1,
                    r._isFirstFrameEmitted = !1,
                    n.bindAll(r),
                    r._config = Object.assign({}, f, t),
                    h.setEnable(t.debug),
                    r._config.loader ? r._loader = r._config.loader : s.FetchStreamLoader.isSupported() ? r._loader = new s.FetchStreamLoader : s.MozChunkedLoader.isSupported() && (r._loader = new s.MozChunkedLoader),
                    r._loader ? (r._timeDispatch = new l.TimeDispatch,
                    r._timeDispatch.onSend = r._onTimeDispatch,
                    r._mediaHandler = new c.ToMSE(r._config),
                    r._mediaHandler.onHasKeyframe = r._onFirstFrame,
                    r._mediaHandler.onExtraData = r._onExtraData,
                    r._mediaHandler.onMediaInfo = r._onMediaInfo,
                    r._mediaManager = new d.MediaManager(r._loader,r._mediaHandler,r._config),
                    r._mediaManager.onError = r._onError,
                    r._mediaManager.init(),
                    h.log("init"),
                    r) : (setTimeout(function() {
                        r._onError(new u.DyDemuxError("Do not has supported loader.",161))
                    }, 0),
                    r)
                }
                return o(LivePlayer, e),
                LivePlayer.prototype.dispose = function() {
                    this._destroyed || (this.pause(),
                    this.detach(),
                    this._mediaManager && (this._mediaManager.dispose(),
                    this._mediaManager = null),
                    this._loader && (this._loader.dispose(),
                    this._loader = null),
                    this._mediaHandler && (this._mediaHandler.dispose(),
                    this._mediaHandler = null),
                    this._timeDispatch && (this._timeDispatch.destroy(),
                    this._timeDispatch = null),
                    this.removeAllListeners(),
                    this._destroyed = !0,
                    h.log("disposed"))
                }
                ,
                LivePlayer.prototype.load = function() {
                    this._loader ? (h.log("loading..."),
                    this._loader.load(this._config.url)) : h.warn("can't load because there is no available loader")
                }
                ,
                LivePlayer.prototype.attach = function(e) {
                    this._mediaHandler && (this._mediaHandler.attach(e),
                    this._timeDispatch.attach(e),
                    this._video = e,
                    this._video.addEventListener("loadedmetadata", this._onFirstFrameFromMeta),
                    this._video.addEventListener("canplay", this._onCanplay))
                }
                ,
                LivePlayer.prototype.detach = function() {
                    this._mediaHandler && this._mediaHandler.detach(),
                    this._timeDispatch && this._timeDispatch.detach(),
                    this._video && (this._video.removeEventListener("loadedmetadata", this._onFirstFrameFromMeta),
                    this._video.removeEventListener("canplay", this._onCanplay),
                    this._video = null)
                }
                ,
                LivePlayer.prototype.play = function() {
                    this._video && this._video.play()
                }
                ,
                LivePlayer.prototype.pause = function() {
                    this._video && this._video.pause()
                }
                ,
                LivePlayer.prototype.getMediaInfo = function() {
                    return this._mediaInfo
                }
                ,
                LivePlayer.prototype.getStatInfo = function() {
                    var e = {
                        url: "",
                        redirectedURL: "",
                        loaderBytes: 0,
                        decodedFrames: 0,
                        droppedFrames: 0,
                        cdnBytes: 0,
                        p2pBytes: 0,
                        totalDropBytes: 0
                    };
                    if (this._loader) {
                        e.url = this._loader.url,
                        e.redirectedURL = this._loader.redirectUrl;
                        var t = this._loader.getStatistics()
                          , r = t.loaderBytes
                          , i = t.cdnBytes
                          , o = t.p2pBytes
                          , a = t.totalDropBytes;
                        e.loaderBytes = r,
                        e.cdnBytes = i,
                        e.p2pBytes = o,
                        e.totalDropBytes = a || 0
                    }
                    if (this._video)
                        if ("function" === typeof this._video.getVideoPlaybackQuality) {
                            var n = this._video.getVideoPlaybackQuality();
                            e.decodedFrames = n.totalVideoFrames,
                            e.droppedFrames = n.droppedVideoFrames
                        } else
                            void 0 !== this._video.webkitDecodedFrameCount && (e.decodedFrames = this._video.webkitDecodedFrameCount,
                            e.droppedFrames = this._video.webkitDroppedFrameCount);
                    return e
                }
                ,
                LivePlayer.prototype.T_ADV_Timestamp = function() {
                    return this._mediaHandler instanceof c.ToMSE ? this._mediaHandler.T_ADV_Timestamp() : null
                }
                ,
                LivePlayer.prototype._onMediaInfo = function(e) {
                    h.log("onMediaInfo: ", e),
                    this._mediaInfo = e,
                    this.emit(t.PlayerEvents.ON_MEDIA_INFO, e)
                }
                ,
                LivePlayer.prototype._onFirstFrameFromMeta = function() {
                    this._onFirstFrame("meta")
                }
                ,
                LivePlayer.prototype._onFirstFrame = function(e) {
                    void 0 === e && (e = "keyframe"),
                    this._isFirstFrameEmitted || (this._isFirstFrameEmitted = !0,
                    this.emit(t.PlayerEvents.ON_FIRST_FRAME),
                    h.log("first frame from " + e))
                }
                ,
                LivePlayer.prototype._onExtraData = function(e) {
                    "sei" === e.type ? this._onSei(e.data) : "aacfil" === e.type && this._onAACData(e.data),
                    this._timeDispatch.add({
                        type: p.TimeDispatchType.EXTRA_DATA,
                        ts: e.ts,
                        data: e.data
                    }),
                    this.emit(t.PlayerEvents.ON_EXTRA_DATA_LOAD, e)
                }
                ,
                LivePlayer.prototype._onCanplay = function() {
                    this._mediaManager.notify({
                        type: "firstFrame"
                    })
                }
                ,
                LivePlayer.prototype._onError = function(e) {
                    h.warn("player error: ", e),
                    this.emit(t.PlayerEvents.ON_ERROR, e),
                    this.dispose()
                }
                ,
                LivePlayer.prototype._onSei = function(e) {
                    this._timeDispatch.add({
                        type: p.TimeDispatchType.H264_SEI,
                        ts: e.seiTimestamp,
                        data: e
                    }),
                    this.emit(t.PlayerEvents.ON_LOAD_SEI, e)
                }
                ,
                LivePlayer.prototype._onAACData = function(e) {
                    this.emit(t.PlayerEvents.ON_AAC_DATA, e.data)
                }
                ,
                LivePlayer.prototype._onTimeDispatch = function(e) {
                    switch (e.type) {
                    case p.TimeDispatchType.H264_SEI:
                        this.emit(t.PlayerEvents.ON_SEI, e.data);
                        break;
                    case p.TimeDispatchType.EXTRA_DATA:
                        this.emit(t.PlayerEvents.ON_EXTRA_DATA_PLAY, e.data)
                    }
                }
                ,
                LivePlayer
            }(a.EventEmitter);
            t.LivePlayer = m
        }
        , function(e, t, r) {
            "use strict";
            var i, o = "object" === typeof Reflect ? Reflect : null, a = o && "function" === typeof o.apply ? o.apply : function ReflectApply(e, t, r) {
                return Function.prototype.apply.call(e, t, r)
            }
            ;
            i = o && "function" === typeof o.ownKeys ? o.ownKeys : Object.getOwnPropertySymbols ? function ReflectOwnKeys(e) {
                return Object.getOwnPropertyNames(e).concat(Object.getOwnPropertySymbols(e))
            }
            : function ReflectOwnKeys(e) {
                return Object.getOwnPropertyNames(e)
            }
            ;
            var n = Number.isNaN || function NumberIsNaN(e) {
                return e !== e
            }
            ;
            function EventEmitter() {
                EventEmitter.init.call(this)
            }
            e.exports = EventEmitter,
            EventEmitter.EventEmitter = EventEmitter,
            EventEmitter.prototype._events = void 0,
            EventEmitter.prototype._eventsCount = 0,
            EventEmitter.prototype._maxListeners = void 0;
            var s = 10;
            function checkListener(e) {
                if ("function" !== typeof e)
                    throw new TypeError('The "listener" argument must be of type Function. Received type ' + typeof e)
            }
            function _getMaxListeners(e) {
                return void 0 === e._maxListeners ? EventEmitter.defaultMaxListeners : e._maxListeners
            }
            function _addListener(e, t, r, i) {
                var o, a, n;
                if (checkListener(r),
                void 0 === (a = e._events) ? (a = e._events = Object.create(null),
                e._eventsCount = 0) : (void 0 !== a.newListener && (e.emit("newListener", t, r.listener ? r.listener : r),
                a = e._events),
                n = a[t]),
                void 0 === n)
                    n = a[t] = r,
                    ++e._eventsCount;
                else if ("function" === typeof n ? n = a[t] = i ? [r, n] : [n, r] : i ? n.unshift(r) : n.push(r),
                (o = _getMaxListeners(e)) > 0 && n.length > o && !n.warned) {
                    n.warned = !0;
                    var s = new Error("Possible EventEmitter memory leak detected. " + n.length + " " + String(t) + " listeners added. Use emitter.setMaxListeners() to increase limit");
                    s.name = "MaxListenersExceededWarning",
                    s.emitter = e,
                    s.type = t,
                    s.count = n.length,
                    function ProcessEmitWarning(e) {
                        console && console.warn && console.warn(e)
                    }(s)
                }
                return e
            }
            function _onceWrap(e, t, r) {
                var i = {
                    fired: !1,
                    wrapFn: void 0,
                    target: e,
                    type: t,
                    listener: r
                }
                  , o = function onceWrapper() {
                    if (!this.fired)
                        return this.target.removeListener(this.type, this.wrapFn),
                        this.fired = !0,
                        0 === arguments.length ? this.listener.call(this.target) : this.listener.apply(this.target, arguments)
                }
                .bind(i);
                return o.listener = r,
                i.wrapFn = o,
                o
            }
            function _listeners(e, t, r) {
                var i = e._events;
                if (void 0 === i)
                    return [];
                var o = i[t];
                return void 0 === o ? [] : "function" === typeof o ? r ? [o.listener || o] : [o] : r ? function unwrapListeners(e) {
                    for (var t = new Array(e.length), r = 0; r < t.length; ++r)
                        t[r] = e[r].listener || e[r];
                    return t
                }(o) : arrayClone(o, o.length)
            }
            function listenerCount(e) {
                var t = this._events;
                if (void 0 !== t) {
                    var r = t[e];
                    if ("function" === typeof r)
                        return 1;
                    if (void 0 !== r)
                        return r.length
                }
                return 0
            }
            function arrayClone(e, t) {
                for (var r = new Array(t), i = 0; i < t; ++i)
                    r[i] = e[i];
                return r
            }
            Object.defineProperty(EventEmitter, "defaultMaxListeners", {
                enumerable: !0,
                get: function() {
                    return s
                },
                set: function(e) {
                    if ("number" !== typeof e || e < 0 || n(e))
                        throw new RangeError('The value of "defaultMaxListeners" is out of range. It must be a non-negative number. Received ' + e + ".");
                    s = e
                }
            }),
            EventEmitter.init = function() {
                void 0 !== this._events && this._events !== Object.getPrototypeOf(this)._events || (this._events = Object.create(null),
                this._eventsCount = 0),
                this._maxListeners = this._maxListeners || void 0
            }
            ,
            EventEmitter.prototype.setMaxListeners = function setMaxListeners(e) {
                if ("number" !== typeof e || e < 0 || n(e))
                    throw new RangeError('The value of "n" is out of range. It must be a non-negative number. Received ' + e + ".");
                return this._maxListeners = e,
                this
            }
            ,
            EventEmitter.prototype.getMaxListeners = function getMaxListeners() {
                return _getMaxListeners(this)
            }
            ,
            EventEmitter.prototype.emit = function emit(e) {
                for (var t = [], r = 1; r < arguments.length; r++)
                    t.push(arguments[r]);
                var i = "error" === e
                  , o = this._events;
                if (void 0 !== o)
                    i = i && void 0 === o.error;
                else if (!i)
                    return !1;
                if (i) {
                    var n;
                    if (t.length > 0 && (n = t[0]),
                    n instanceof Error)
                        throw n;
                    var s = new Error("Unhandled error." + (n ? " (" + n.message + ")" : ""));
                    throw s.context = n,
                    s
                }
                var d = o[e];
                if (void 0 === d)
                    return !1;
                if ("function" === typeof d)
                    a(d, this, t);
                else {
                    var u = d.length
                      , l = arrayClone(d, u);
                    for (r = 0; r < u; ++r)
                        a(l[r], this, t)
                }
                return !0
            }
            ,
            EventEmitter.prototype.addListener = function addListener(e, t) {
                return _addListener(this, e, t, !1)
            }
            ,
            EventEmitter.prototype.on = EventEmitter.prototype.addListener,
            EventEmitter.prototype.prependListener = function prependListener(e, t) {
                return _addListener(this, e, t, !0)
            }
            ,
            EventEmitter.prototype.once = function once(e, t) {
                return checkListener(t),
                this.on(e, _onceWrap(this, e, t)),
                this
            }
            ,
            EventEmitter.prototype.prependOnceListener = function prependOnceListener(e, t) {
                return checkListener(t),
                this.prependListener(e, _onceWrap(this, e, t)),
                this
            }
            ,
            EventEmitter.prototype.removeListener = function removeListener(e, t) {
                var r, i, o, a, n;
                if (checkListener(t),
                void 0 === (i = this._events))
                    return this;
                if (void 0 === (r = i[e]))
                    return this;
                if (r === t || r.listener === t)
                    0 === --this._eventsCount ? this._events = Object.create(null) : (delete i[e],
                    i.removeListener && this.emit("removeListener", e, r.listener || t));
                else if ("function" !== typeof r) {
                    for (o = -1,
                    a = r.length - 1; a >= 0; a--)
                        if (r[a] === t || r[a].listener === t) {
                            n = r[a].listener,
                            o = a;
                            break
                        }
                    if (o < 0)
                        return this;
                    0 === o ? r.shift() : function spliceOne(e, t) {
                        for (; t + 1 < e.length; t++)
                            e[t] = e[t + 1];
                        e.pop()
                    }(r, o),
                    1 === r.length && (i[e] = r[0]),
                    void 0 !== i.removeListener && this.emit("removeListener", e, n || t)
                }
                return this
            }
            ,
            EventEmitter.prototype.off = EventEmitter.prototype.removeListener,
            EventEmitter.prototype.removeAllListeners = function removeAllListeners(e) {
                var t, r, i;
                if (void 0 === (r = this._events))
                    return this;
                if (void 0 === r.removeListener)
                    return 0 === arguments.length ? (this._events = Object.create(null),
                    this._eventsCount = 0) : void 0 !== r[e] && (0 === --this._eventsCount ? this._events = Object.create(null) : delete r[e]),
                    this;
                if (0 === arguments.length) {
                    var o, a = Object.keys(r);
                    for (i = 0; i < a.length; ++i)
                        "removeListener" !== (o = a[i]) && this.removeAllListeners(o);
                    return this.removeAllListeners("removeListener"),
                    this._events = Object.create(null),
                    this._eventsCount = 0,
                    this
                }
                if ("function" === typeof (t = r[e]))
                    this.removeListener(e, t);
                else if (void 0 !== t)
                    for (i = t.length - 1; i >= 0; i--)
                        this.removeListener(e, t[i]);
                return this
            }
            ,
            EventEmitter.prototype.listeners = function listeners(e) {
                return _listeners(this, e, !0)
            }
            ,
            EventEmitter.prototype.rawListeners = function rawListeners(e) {
                return _listeners(this, e, !1)
            }
            ,
            EventEmitter.listenerCount = function(e, t) {
                return "function" === typeof e.listenerCount ? e.listenerCount(t) : listenerCount.call(e, t)
            }
            ,
            EventEmitter.prototype.listenerCount = listenerCount,
            EventEmitter.prototype.eventNames = function eventNames() {
                return this._eventsCount > 0 ? i(this._events) : []
            }
        }
        , function(e, t, r) {
            "use strict";
            var i, o = this && this.__extends || (i = function(e, t) {
                return (i = Object.setPrototypeOf || {
                    __proto__: []
                }instanceof Array && function(e, t) {
                    e.__proto__ = t
                }
                || function(e, t) {
                    for (var r in t)
                        t.hasOwnProperty(r) && (e[r] = t[r])
                }
                )(e, t)
            }
            ,
            function(e, t) {
                function __() {
                    this.constructor = e
                }
                i(e, t),
                e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
                new __)
            }
            ), a = this && this.__importDefault || function(e) {
                return e && e.__esModule ? e : {
                    default: e
                }
            }
            ;
            Object.defineProperty(t, "__esModule", {
                value: !0
            });
            var n = r(4)
              , s = r(2)
              , d = a(r(5))
              , u = function(e) {
                function FetchStreamLoader() {
                    return null !== e && e.apply(this, arguments) || this
                }
                return o(FetchStreamLoader, e),
                FetchStreamLoader.isSupported = function() {
                    try {
                        var e = d.default.msedge && d.default.version.minor >= 15048
                          , t = !d.default.msedge || e;
                        return self.fetch && self.ReadableStream && t
                    } catch (e) {
                        return !1
                    }
                }
                ,
                FetchStreamLoader.prototype.load = function(t, r) {
                    var i = this;
                    e.prototype.load.call(this, t, r),
                    fetch(t).then(function(e) {
                        if (e && e.ok)
                            return t !== e.url && i._onRedirectUrl(e.url),
                            e.body.getReader();
                        throw e ? new s.DyNetworkError("fetch stream failed: " + e.status + " " + e.statusText) : new s.DyNetworkError("fetch stream failed: no response, maybe blocked.")
                    }).then(function(e) {
                        if (i._reader = e,
                        i._destroyed)
                            i.dispose();
                        else {
                            var t = function(r) {
                                var o = r.done
                                  , a = r.value;
                                o ? i.onEnd && i.onEnd() : (i._onData(a.buffer),
                                e.read().then(t).catch(i._onError))
                            };
                            e.read().then(t).catch(i._onError)
                        }
                    }).catch(function(e) {
                        e && 11 === e.code && d.default.msedge || i._onError(new s.DyNetworkError("fetch stream failed: " + e))
                    })
                }
                ,
                FetchStreamLoader.prototype.dispose = function() {
                    this._reader && (this._reader.cancel().catch(function(e) {}),
                    this._reader = null),
                    e.prototype.dispose.call(this)
                }
                ,
                FetchStreamLoader
            }(n.BaseLoader);
            t.FetchStreamLoader = u
        }
        , function(e, t, r) {
            "use strict";
            var i, o = this && this.__extends || (i = function(e, t) {
                return (i = Object.setPrototypeOf || {
                    __proto__: []
                }instanceof Array && function(e, t) {
                    e.__proto__ = t
                }
                || function(e, t) {
                    for (var r in t)
                        t.hasOwnProperty(r) && (e[r] = t[r])
                }
                )(e, t)
            }
            ,
            function(e, t) {
                function __() {
                    this.constructor = e
                }
                i(e, t),
                e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
                new __)
            }
            );
            Object.defineProperty(t, "__esModule", {
                value: !0
            });
            var a = r(4)
              , n = r(2)
              , s = function(e) {
                function MozChunkedLoader() {
                    var t = e.call(this) || this;
                    return t._xhr = null,
                    t._requestAbort = !1,
                    t
                }
                return o(MozChunkedLoader, e),
                MozChunkedLoader.isSupported = function() {
                    try {
                        var e = new XMLHttpRequest;
                        return e.open("GET", "https://example.com", !0),
                        e.responseType = "moz-chunked-arraybuffer",
                        "moz-chunked-arraybuffer" === e.responseType
                    } catch (e) {
                        return !1
                    }
                }
                ,
                MozChunkedLoader.prototype.load = function(e, t) {
                    this._requestURL = e;
                    var r = this._xhr = new XMLHttpRequest;
                    r.open("GET", e, !0),
                    r.responseType = "moz-chunked-arraybuffer",
                    r.onreadystatechange = this._onReadyStateChange.bind(this),
                    r.onprogress = this._onProgress.bind(this),
                    r.onloadend = this._onLoadEnd.bind(this),
                    r.onerror = this._onXhrError.bind(this),
                    r.send()
                }
                ,
                MozChunkedLoader.prototype.dispose = function() {
                    this.abort(),
                    this._xhr && (this._xhr.onreadystatechange = null,
                    this._xhr.onprogress = null,
                    this._xhr.onloadend = null,
                    this._xhr.onerror = null,
                    this._xhr = null),
                    e.prototype.dispose.call(this)
                }
                ,
                MozChunkedLoader.prototype.abort = function() {
                    this._requestAbort = !0,
                    this._xhr && this._xhr.abort()
                }
                ,
                MozChunkedLoader.prototype._onReadyStateChange = function(e) {
                    var t = e.target;
                    2 === t.readyState && (void 0 != t.responseURL && t.responseURL !== this._requestURL && this._onRedirectUrl(t.responseURL),
                    0 !== t.status && (t.status < 200 || t.status > 299) && this._onError(new n.DyNetworkError("MozChunkedLoader: Http code invalid, " + t.status + " " + t.statusText)))
                }
                ,
                MozChunkedLoader.prototype._onProgress = function(e) {
                    var t = e.target.response;
                    this._onData(t)
                }
                ,
                MozChunkedLoader.prototype._onLoadEnd = function(e) {
                    !0 !== this._requestAbort ? this.onEnd && this.onEnd() : this._requestAbort = !1
                }
                ,
                MozChunkedLoader.prototype._onXhrError = function(e) {
                    this._onError("xhr load exit")
                }
                ,
                MozChunkedLoader
            }(a.BaseLoader);
            t.MozChunkedLoader = s
        }
        , function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            });
            var i = r(1)
              , o = r(19)
              , a = r(3)
              , n = r(0).makeLogger("media-manager")
              , s = function() {
                function MediaManager(e, t, a) {
                    i.bindAll(this),
                    this._config = a;
                    var s = a.enableWorker
                      , d = a.debug;
                    this._loader = e,
                    this._loader.onData = this.appendData,
                    this._loader.onEnd = this.appendEnd,
                    this._loader.onError = this._onError,
                    this._mediaHandler = t,
                    this._mediaHandler.onError = this._onError,
                    s ? (this._transmuxer = r(37)(8),
                    this._transmuxer.postMessage({
                        name: "setLoggerEnable",
                        params: d
                    }, void 0),
                    n.log("transmuxe with worker")) : (this._transmuxer = new o.Transmuxer,
                    n.log("transmuxe with no worker")),
                    this._transmuxer.onmessage = this._onMessage
                }
                return MediaManager.prototype.init = function() {
                    this._transmuxer.postMessage({
                        name: "init",
                        params: a.deepClone(this._config)
                    }, void 0)
                }
                ,
                MediaManager.prototype.dispose = function() {
                    this.onError = null,
                    this._mediaHandler = null,
                    this._loader = null,
                    this._transmuxer.terminate(),
                    this._transmuxer = null
                }
                ,
                MediaManager.prototype.appendData = function(e) {
                    if (e instanceof ArrayBuffer)
                        this._transmuxer.postMessage({
                            name: "appendData",
                            params: e
                        }, [e]);
                    else {
                        var t = [];
                        this._config.enableWorker && e.data && (e.data = a.u8aClone(e.data),
                        t.push(e.data.buffer)),
                        this._transmuxer.postMessage({
                            name: "appendData",
                            params: e
                        }, t)
                    }
                }
                ,
                MediaManager.prototype.appendEnd = function() {
                    n.log("loader end"),
                    this._transmuxer.postMessage({
                        name: "appendEnd"
                    }, void 0)
                }
                ,
                MediaManager.prototype.notify = function(e) {
                    var t = e.type;
                    e.data;
                    switch (t) {
                    case "firstFrame":
                        this._transmuxer.postMessage({
                            name: "firstFrame"
                        }, void 0)
                    }
                }
                ,
                MediaManager.prototype._onRemuxData = function(e) {
                    this._mediaHandler && this._mediaHandler.appendData(e)
                }
                ,
                MediaManager.prototype._onError = function(e) {
                    this.onError && this.onError(e)
                }
                ,
                MediaManager.prototype._onMessage = function(e) {
                    var t = e.data
                      , r = t.name
                      , i = t.params;
                    try {
                        switch (r) {
                        case "_onRemuxData":
                            this._onRemuxData(i);
                            break;
                        case "_onError":
                            this._onError(i);
                            break;
                        default:
                            n.warn("unknown function: " + r)
                        }
                    } catch (e) {
                        n.warn("call " + r + " error", e)
                    }
                }
                ,
                MediaManager
            }();
            t.MediaManager = s
        }
        , function(e, t, r) {
            "use strict";
            var i, o = this && this.__extends || (i = function(e, t) {
                return (i = Object.setPrototypeOf || {
                    __proto__: []
                }instanceof Array && function(e, t) {
                    e.__proto__ = t
                }
                || function(e, t) {
                    for (var r in t)
                        t.hasOwnProperty(r) && (e[r] = t[r])
                }
                )(e, t)
            }
            ,
            function(e, t) {
                function __() {
                    this.constructor = e
                }
                i(e, t),
                e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
                new __)
            }
            ), a = this && this.__importDefault || function(e) {
                return e && e.__esModule ? e : {
                    default: e
                }
            }
            ;
            Object.defineProperty(t, "__esModule", {
                value: !0
            });
            var n = a(r(8))
              , s = (r(0).makeLogger("transmuxer"),
            function(e) {
                function Transmuxer() {
                    return null !== e && e.apply(this, arguments) || this
                }
                return o(Transmuxer, e),
                Transmuxer.prototype.postMessage = function(e, t) {
                    this._onMessage({
                        data: e
                    })
                }
                ,
                Transmuxer.prototype.terminate = function() {
                    e.prototype.dispose.call(this),
                    this.onmessage = null
                }
                ,
                Transmuxer.prototype._dispatchMessage = function(e, t) {
                    this.onmessage && this.onmessage({
                        data: e
                    })
                }
                ,
                Transmuxer
            }(n.default));
            t.Transmuxer = s
        }
        , function(e, t) {
            e.exports = Long;
            var r = null;
            try {
                r = new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0, 97, 115, 109, 1, 0, 0, 0, 1, 13, 2, 96, 0, 1, 127, 96, 4, 127, 127, 127, 127, 1, 127, 3, 7, 6, 0, 1, 1, 1, 1, 1, 6, 6, 1, 127, 1, 65, 0, 11, 7, 50, 6, 3, 109, 117, 108, 0, 1, 5, 100, 105, 118, 95, 115, 0, 2, 5, 100, 105, 118, 95, 117, 0, 3, 5, 114, 101, 109, 95, 115, 0, 4, 5, 114, 101, 109, 95, 117, 0, 5, 8, 103, 101, 116, 95, 104, 105, 103, 104, 0, 0, 10, 191, 1, 6, 4, 0, 35, 0, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 126, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 127, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 128, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 129, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 130, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11])),{}).exports
            } catch (e) {}
            function Long(e, t, r) {
                this.low = 0 | e,
                this.high = 0 | t,
                this.unsigned = !!r
            }
            function isLong(e) {
                return !0 === (e && e.__isLong__)
            }
            Long.prototype.__isLong__,
            Object.defineProperty(Long.prototype, "__isLong__", {
                value: !0
            }),
            Long.isLong = isLong;
            var i = {}
              , o = {};
            function fromInt(e, t) {
                var r, a, n;
                return t ? (n = 0 <= (e >>>= 0) && e < 256) && (a = o[e]) ? a : (r = fromBits(e, (0 | e) < 0 ? -1 : 0, !0),
                n && (o[e] = r),
                r) : (n = -128 <= (e |= 0) && e < 128) && (a = i[e]) ? a : (r = fromBits(e, e < 0 ? -1 : 0, !1),
                n && (i[e] = r),
                r)
            }
            function fromNumber(e, t) {
                if (isNaN(e))
                    return t ? p : l;
                if (t) {
                    if (e < 0)
                        return p;
                    if (e >= s)
                        return y
                } else {
                    if (e <= -d)
                        return _;
                    if (e + 1 >= d)
                        return m
                }
                return e < 0 ? fromNumber(-e, t).neg() : fromBits(e % n | 0, e / n | 0, t)
            }
            function fromBits(e, t, r) {
                return new Long(e,t,r)
            }
            Long.fromInt = fromInt,
            Long.fromNumber = fromNumber,
            Long.fromBits = fromBits;
            var a = Math.pow;
            function fromString(e, t, r) {
                if (0 === e.length)
                    throw Error("empty string");
                if ("NaN" === e || "Infinity" === e || "+Infinity" === e || "-Infinity" === e)
                    return l;
                if ("number" === typeof t ? (r = t,
                t = !1) : t = !!t,
                (r = r || 10) < 2 || 36 < r)
                    throw RangeError("radix");
                var i;
                if ((i = e.indexOf("-")) > 0)
                    throw Error("interior hyphen");
                if (0 === i)
                    return fromString(e.substring(1), t, r).neg();
                for (var o = fromNumber(a(r, 8)), n = l, s = 0; s < e.length; s += 8) {
                    var d = Math.min(8, e.length - s)
                      , u = parseInt(e.substring(s, s + d), r);
                    if (d < 8) {
                        var p = fromNumber(a(r, d));
                        n = n.mul(p).add(fromNumber(u))
                    } else
                        n = (n = n.mul(o)).add(fromNumber(u))
                }
                return n.unsigned = t,
                n
            }
            function fromValue(e, t) {
                return "number" === typeof e ? fromNumber(e, t) : "string" === typeof e ? fromString(e, t) : fromBits(e.low, e.high, "boolean" === typeof t ? t : e.unsigned)
            }
            Long.fromString = fromString,
            Long.fromValue = fromValue;
            var n = 4294967296
              , s = n * n
              , d = s / 2
              , u = fromInt(1 << 24)
              , l = fromInt(0);
            Long.ZERO = l;
            var p = fromInt(0, !0);
            Long.UZERO = p;
            var c = fromInt(1);
            Long.ONE = c;
            var h = fromInt(1, !0);
            Long.UONE = h;
            var f = fromInt(-1);
            Long.NEG_ONE = f;
            var m = fromBits(-1, 2147483647, !1);
            Long.MAX_VALUE = m;
            var y = fromBits(-1, -1, !0);
            Long.MAX_UNSIGNED_VALUE = y;
            var _ = fromBits(0, -2147483648, !1);
            Long.MIN_VALUE = _;
            var v = Long.prototype;
            v.toInt = function toInt() {
                return this.unsigned ? this.low >>> 0 : this.low
            }
            ,
            v.toNumber = function toNumber() {
                return this.unsigned ? (this.high >>> 0) * n + (this.low >>> 0) : this.high * n + (this.low >>> 0)
            }
            ,
            v.toString = function toString(e) {
                if ((e = e || 10) < 2 || 36 < e)
                    throw RangeError("radix");
                if (this.isZero())
                    return "0";
                if (this.isNegative()) {
                    if (this.eq(_)) {
                        var t = fromNumber(e)
                          , r = this.div(t)
                          , i = r.mul(t).sub(this);
                        return r.toString(e) + i.toInt().toString(e)
                    }
                    return "-" + this.neg().toString(e)
                }
                for (var o = fromNumber(a(e, 6), this.unsigned), n = this, s = ""; ; ) {
                    var d = n.div(o)
                      , u = (n.sub(d.mul(o)).toInt() >>> 0).toString(e);
                    if ((n = d).isZero())
                        return u + s;
                    for (; u.length < 6; )
                        u = "0" + u;
                    s = "" + u + s
                }
            }
            ,
            v.getHighBits = function getHighBits() {
                return this.high
            }
            ,
            v.getHighBitsUnsigned = function getHighBitsUnsigned() {
                return this.high >>> 0
            }
            ,
            v.getLowBits = function getLowBits() {
                return this.low
            }
            ,
            v.getLowBitsUnsigned = function getLowBitsUnsigned() {
                return this.low >>> 0
            }
            ,
            v.getNumBitsAbs = function getNumBitsAbs() {
                if (this.isNegative())
                    return this.eq(_) ? 64 : this.neg().getNumBitsAbs();
                for (var e = 0 != this.high ? this.high : this.low, t = 31; t > 0 && 0 == (e & 1 << t); t--)
                    ;
                return 0 != this.high ? t + 33 : t + 1
            }
            ,
            v.isZero = function isZero() {
                return 0 === this.high && 0 === this.low
            }
            ,
            v.eqz = v.isZero,
            v.isNegative = function isNegative() {
                return !this.unsigned && this.high < 0
            }
            ,
            v.isPositive = function isPositive() {
                return this.unsigned || this.high >= 0
            }
            ,
            v.isOdd = function isOdd() {
                return 1 === (1 & this.low)
            }
            ,
            v.isEven = function isEven() {
                return 0 === (1 & this.low)
            }
            ,
            v.equals = function equals(e) {
                return isLong(e) || (e = fromValue(e)),
                (this.unsigned === e.unsigned || this.high >>> 31 !== 1 || e.high >>> 31 !== 1) && (this.high === e.high && this.low === e.low)
            }
            ,
            v.eq = v.equals,
            v.notEquals = function notEquals(e) {
                return !this.eq(e)
            }
            ,
            v.neq = v.notEquals,
            v.ne = v.notEquals,
            v.lessThan = function lessThan(e) {
                return this.comp(e) < 0
            }
            ,
            v.lt = v.lessThan,
            v.lessThanOrEqual = function lessThanOrEqual(e) {
                return this.comp(e) <= 0
            }
            ,
            v.lte = v.lessThanOrEqual,
            v.le = v.lessThanOrEqual,
            v.greaterThan = function greaterThan(e) {
                return this.comp(e) > 0
            }
            ,
            v.gt = v.greaterThan,
            v.greaterThanOrEqual = function greaterThanOrEqual(e) {
                return this.comp(e) >= 0
            }
            ,
            v.gte = v.greaterThanOrEqual,
            v.ge = v.greaterThanOrEqual,
            v.compare = function compare(e) {
                if (isLong(e) || (e = fromValue(e)),
                this.eq(e))
                    return 0;
                var t = this.isNegative()
                  , r = e.isNegative();
                return t && !r ? -1 : !t && r ? 1 : this.unsigned ? e.high >>> 0 > this.high >>> 0 || e.high === this.high && e.low >>> 0 > this.low >>> 0 ? -1 : 1 : this.sub(e).isNegative() ? -1 : 1
            }
            ,
            v.comp = v.compare,
            v.negate = function negate() {
                return !this.unsigned && this.eq(_) ? _ : this.not().add(c)
            }
            ,
            v.neg = v.negate,
            v.add = function add(e) {
                isLong(e) || (e = fromValue(e));
                var t = this.high >>> 16
                  , r = 65535 & this.high
                  , i = this.low >>> 16
                  , o = 65535 & this.low
                  , a = e.high >>> 16
                  , n = 65535 & e.high
                  , s = e.low >>> 16
                  , d = 0
                  , u = 0
                  , l = 0
                  , p = 0;
                return l += (p += o + (65535 & e.low)) >>> 16,
                u += (l += i + s) >>> 16,
                d += (u += r + n) >>> 16,
                d += t + a,
                fromBits((l &= 65535) << 16 | (p &= 65535), (d &= 65535) << 16 | (u &= 65535), this.unsigned)
            }
            ,
            v.subtract = function subtract(e) {
                return isLong(e) || (e = fromValue(e)),
                this.add(e.neg())
            }
            ,
            v.sub = v.subtract,
            v.multiply = function multiply(e) {
                if (this.isZero())
                    return l;
                if (isLong(e) || (e = fromValue(e)),
                r)
                    return fromBits(r.mul(this.low, this.high, e.low, e.high), r.get_high(), this.unsigned);
                if (e.isZero())
                    return l;
                if (this.eq(_))
                    return e.isOdd() ? _ : l;
                if (e.eq(_))
                    return this.isOdd() ? _ : l;
                if (this.isNegative())
                    return e.isNegative() ? this.neg().mul(e.neg()) : this.neg().mul(e).neg();
                if (e.isNegative())
                    return this.mul(e.neg()).neg();
                if (this.lt(u) && e.lt(u))
                    return fromNumber(this.toNumber() * e.toNumber(), this.unsigned);
                var t = this.high >>> 16
                  , i = 65535 & this.high
                  , o = this.low >>> 16
                  , a = 65535 & this.low
                  , n = e.high >>> 16
                  , s = 65535 & e.high
                  , d = e.low >>> 16
                  , p = 65535 & e.low
                  , c = 0
                  , h = 0
                  , f = 0
                  , m = 0;
                return f += (m += a * p) >>> 16,
                h += (f += o * p) >>> 16,
                f &= 65535,
                h += (f += a * d) >>> 16,
                c += (h += i * p) >>> 16,
                h &= 65535,
                c += (h += o * d) >>> 16,
                h &= 65535,
                c += (h += a * s) >>> 16,
                c += t * p + i * d + o * s + a * n,
                fromBits((f &= 65535) << 16 | (m &= 65535), (c &= 65535) << 16 | (h &= 65535), this.unsigned)
            }
            ,
            v.mul = v.multiply,
            v.divide = function divide(e) {
                if (isLong(e) || (e = fromValue(e)),
                e.isZero())
                    throw Error("division by zero");
                var t, i, o;
                if (r)
                    return this.unsigned || -2147483648 !== this.high || -1 !== e.low || -1 !== e.high ? fromBits((this.unsigned ? r.div_u : r.div_s)(this.low, this.high, e.low, e.high), r.get_high(), this.unsigned) : this;
                if (this.isZero())
                    return this.unsigned ? p : l;
                if (this.unsigned) {
                    if (e.unsigned || (e = e.toUnsigned()),
                    e.gt(this))
                        return p;
                    if (e.gt(this.shru(1)))
                        return h;
                    o = p
                } else {
                    if (this.eq(_))
                        return e.eq(c) || e.eq(f) ? _ : e.eq(_) ? c : (t = this.shr(1).div(e).shl(1)).eq(l) ? e.isNegative() ? c : f : (i = this.sub(e.mul(t)),
                        o = t.add(i.div(e)));
                    else if (e.eq(_))
                        return this.unsigned ? p : l;
                    if (this.isNegative())
                        return e.isNegative() ? this.neg().div(e.neg()) : this.neg().div(e).neg();
                    if (e.isNegative())
                        return this.div(e.neg()).neg();
                    o = l
                }
                for (i = this; i.gte(e); ) {
                    t = Math.max(1, Math.floor(i.toNumber() / e.toNumber()));
                    for (var n = Math.ceil(Math.log(t) / Math.LN2), s = n <= 48 ? 1 : a(2, n - 48), d = fromNumber(t), u = d.mul(e); u.isNegative() || u.gt(i); )
                        u = (d = fromNumber(t -= s, this.unsigned)).mul(e);
                    d.isZero() && (d = c),
                    o = o.add(d),
                    i = i.sub(u)
                }
                return o
            }
            ,
            v.div = v.divide,
            v.modulo = function modulo(e) {
                return isLong(e) || (e = fromValue(e)),
                r ? fromBits((this.unsigned ? r.rem_u : r.rem_s)(this.low, this.high, e.low, e.high), r.get_high(), this.unsigned) : this.sub(this.div(e).mul(e))
            }
            ,
            v.mod = v.modulo,
            v.rem = v.modulo,
            v.not = function not() {
                return fromBits(~this.low, ~this.high, this.unsigned)
            }
            ,
            v.and = function and(e) {
                return isLong(e) || (e = fromValue(e)),
                fromBits(this.low & e.low, this.high & e.high, this.unsigned)
            }
            ,
            v.or = function or(e) {
                return isLong(e) || (e = fromValue(e)),
                fromBits(this.low | e.low, this.high | e.high, this.unsigned)
            }
            ,
            v.xor = function xor(e) {
                return isLong(e) || (e = fromValue(e)),
                fromBits(this.low ^ e.low, this.high ^ e.high, this.unsigned)
            }
            ,
            v.shiftLeft = function shiftLeft(e) {
                return isLong(e) && (e = e.toInt()),
                0 === (e &= 63) ? this : e < 32 ? fromBits(this.low << e, this.high << e | this.low >>> 32 - e, this.unsigned) : fromBits(0, this.low << e - 32, this.unsigned)
            }
            ,
            v.shl = v.shiftLeft,
            v.shiftRight = function shiftRight(e) {
                return isLong(e) && (e = e.toInt()),
                0 === (e &= 63) ? this : e < 32 ? fromBits(this.low >>> e | this.high << 32 - e, this.high >> e, this.unsigned) : fromBits(this.high >> e - 32, this.high >= 0 ? 0 : -1, this.unsigned)
            }
            ,
            v.shr = v.shiftRight,
            v.shiftRightUnsigned = function shiftRightUnsigned(e) {
                if (isLong(e) && (e = e.toInt()),
                0 === (e &= 63))
                    return this;
                var t = this.high;
                return e < 32 ? fromBits(this.low >>> e | t << 32 - e, t >>> e, this.unsigned) : fromBits(32 === e ? t : t >>> e - 32, 0, this.unsigned)
            }
            ,
            v.shru = v.shiftRightUnsigned,
            v.shr_u = v.shiftRightUnsigned,
            v.toSigned = function toSigned() {
                return this.unsigned ? fromBits(this.low, this.high, !1) : this
            }
            ,
            v.toUnsigned = function toUnsigned() {
                return this.unsigned ? this : fromBits(this.low, this.high, !0)
            }
            ,
            v.toBytes = function toBytes(e) {
                return e ? this.toBytesLE() : this.toBytesBE()
            }
            ,
            v.toBytesLE = function toBytesLE() {
                var e = this.high
                  , t = this.low;
                return [255 & t, t >>> 8 & 255, t >>> 16 & 255, t >>> 24, 255 & e, e >>> 8 & 255, e >>> 16 & 255, e >>> 24]
            }
            ,
            v.toBytesBE = function toBytesBE() {
                var e = this.high
                  , t = this.low;
                return [e >>> 24, e >>> 16 & 255, e >>> 8 & 255, 255 & e, t >>> 24, t >>> 16 & 255, t >>> 8 & 255, 255 & t]
            }
            ,
            Long.fromBytes = function fromBytes(e, t, r) {
                return r ? Long.fromBytesLE(e, t) : Long.fromBytesBE(e, t)
            }
            ,
            Long.fromBytesLE = function fromBytesLE(e, t) {
                return new Long(e[0] | e[1] << 8 | e[2] << 16 | e[3] << 24,e[4] | e[5] << 8 | e[6] << 16 | e[7] << 24,t)
            }
            ,
            Long.fromBytesBE = function fromBytesBE(e, t) {
                return new Long(e[4] << 24 | e[5] << 16 | e[6] << 8 | e[7],e[0] << 24 | e[1] << 16 | e[2] << 8 | e[3],t)
            }
        }
        , function(e, t, r) {
            "use strict";
            var i = this && this.__importDefault || function(e) {
                return e && e.__esModule ? e : {
                    default: e
                }
            }
            ;
            Object.defineProperty(t, "__esModule", {
                value: !0
            });
            var o = r(9);
            t.Demuxer = o.Demuxer;
            var a = i(r(30));
            t.createDemuxer = function createDemuxer(e, t) {
                return "flv" === e ? new a.default(t) : "raw" === e ? new o.Demuxer(t) : null
            }
        }
        , function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            });
            var i = r(23)
              , o = r(25)
              , a = r(29)
              , n = {};
            function registerParser(e) {
                n[e.name] = e
            }
            t.registerParser = registerParser,
            t.getParser = function getParser(e) {
                return n[e]
            }
            ,
            registerParser(o.h264),
            registerParser(i.aac),
            registerParser(a.mp3)
        }
        , function(e, t, r) {
            "use strict";
            var i = this && this.__importDefault || function(e) {
                return e && e.__esModule ? e : {
                    default: e
                }
            }
            ;
            Object.defineProperty(t, "__esModule", {
                value: !0
            });
            var o = r(0)
              , a = i(r(24))
              , n = i(r(5))
              , s = o.makeLogger("aac-parser")
              , d = {
                mpegSamplingRates: [96e3, 88200, 64e3, 48e3, 44100, 32e3, 24e3, 22050, 16e3, 12e3, 11025, 8e3, 7350]
            };
            t.aac = {
                name: "aac",
                parseConfig: function parseConfig(e) {
                    var t, r, i = e.bytes, o = 0, a = null;
                    if (o = i[0] >>> 3,
                    (r = (7 & i[0]) << 1 | i[1] >>> 7) < 0 || r >= d.mpegSamplingRates.length)
                        return s.warn("AAC invalid sampling frequency index!"),
                        -1;
                    var n = d.mpegSamplingRates[r]
                      , u = (120 & i[1]) >>> 3;
                    if (u < 0 || u >= 8)
                        return s.warn("AAC invalid channel configuration"),
                        -1;
                    5 === o && (a = (7 & i[1]) << 1 | i[2] >>> 7,
                    i[2]);
                    var l = self.navigator.userAgent.toLowerCase();
                    return -1 !== l.indexOf("firefox") ? r >= 6 ? (o = 5,
                    t = new Array(4),
                    a = r - 3) : (o = 2,
                    t = new Array(2),
                    a = r) : -1 !== l.indexOf("android") ? (o = 2,
                    t = new Array(2),
                    a = r) : (o = 5,
                    a = r,
                    t = new Array(4),
                    r >= 6 ? a = r - 3 : 1 === u && (o = 2,
                    t = new Array(2),
                    a = r)),
                    t[0] = o << 3,
                    t[0] |= (15 & r) >>> 1,
                    t[1] = (15 & r) << 7,
                    t[1] |= (15 & u) << 3,
                    5 === o && (t[1] |= (15 & a) >>> 1,
                    t[2] = (1 & a) << 7,
                    t[2] |= 8,
                    t[3] = 0),
                    e.bytes = new Uint8Array(t),
                    e.audioSampleRate = n,
                    e.channelCount = u,
                    e.detailCodec = "mp4a.40." + o,
                    e.refSampleDuration = 1024 / n * 1e3,
                    0
                },
                parseData: function parseData(e) {
                    var t = e.data;
                    if (32 === t.byteLength && 33 === t[0] && 31 === t[1] && 16 === t[2])
                        return s.warn("private aac data, ignore!"),
                        delete e.data,
                        -1;
                    var r = a.default.getDbData(a.default.parseAacFilData(t));
                    r && (e.extradata.aacfil = {
                        aacTimestamp: e.dts,
                        data: r
                    });
                    var i = t[0] >> 5 & 7;
                    return i > 3 && (e.isFrameData = !1),
                    n.default.msedge && 6 === i && delete e.data,
                    0
                }
            }
        }
        , function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            });
            var i = function() {
                function AAcFilParser() {}
                return AAcFilParser._getbits = function(e, t, r) {
                    if (!r || t <= 0 || t > 8)
                        return -1;
                    var i, o, a = 0;
                    if (o = 7 & e,
                    a = r[i = e >> 3] << o & 255,
                    a >>= 8 - t,
                    o + t > 8) {
                        if (void 0 === r[i + 1])
                            return -1;
                        a |= r[i + 1] >> 16 - t - o
                    }
                    return a
                }
                ,
                AAcFilParser.parseAacFilData = function(e) {
                    for (var t = 0, r = 0, i = []; ; ) {
                        var o = 0
                          , a = 0
                          , n = 0
                          , s = [1, 35, 69, 103, 137, 100, 111, 117, 121];
                        if (o = AAcFilParser._getbits(t, 3, e),
                        t += 3,
                        o < 0)
                            return null;
                        if (7 == o)
                            return i;
                        if (6 != o)
                            return null;
                        if (a = AAcFilParser._getbits(t, 4, e),
                        t += 4,
                        a < 0)
                            return null;
                        if (15 === a) {
                            if (n = AAcFilParser._getbits(t, 8, e),
                            t += 8,
                            n < 0)
                                return null;
                            a += n - 1
                        }
                        if (a < 9)
                            return null;
                        for (var d = 0; d < 9; d++) {
                            if (t >> 3 >= e.length)
                                return null;
                            if (o = AAcFilParser._getbits(t, 8, e),
                            t += 8,
                            o != s[d])
                                return null
                        }
                        if (r + a - 9 > e.length)
                            return null;
                        for (d = 0; d < a - 9; d++) {
                            if (t >> 3 >= e.length)
                                return null;
                            if (o = AAcFilParser._getbits(t, 8, e),
                            t += 8,
                            o < 0)
                                return null;
                            i[r++] = o
                        }
                    }
                    return i
                }
                ,
                AAcFilParser.getDbData = function(e) {
                    if (!e)
                        return null;
                    var t = [];
                    if (e) {
                        var r = 0;
                        if (16 != e[r++])
                            return null;
                        for (var i = e[r++], o = 0; o < i; o++) {
                            var a = {
                                uid: "",
                                db: 0
                            }
                              , n = e[r++]
                              , s = e[r++] - n;
                            a.uid = "";
                            for (var d = 0; d < s; d++)
                                a.uid += (e[r++] - 48).toString();
                            a.db = e[r++],
                            t.push(a)
                        }
                    }
                    return t
                }
                ,
                AAcFilParser
            }();
            t.default = i
        }
        , function(e, t, r) {
            "use strict";
            var i = this && this.__importDefault || function(e) {
                return e && e.__esModule ? e : {
                    default: e
                }
            }
              , o = this && this.__importStar || function(e) {
                if (e && e.__esModule)
                    return e;
                var t = {};
                if (null != e)
                    for (var r in e)
                        Object.hasOwnProperty.call(e, r) && (t[r] = e[r]);
                return t.default = e,
                t
            }
            ;
            Object.defineProperty(t, "__esModule", {
                value: !0
            });
            var a = r(0)
              , n = i(r(26))
              , s = o(r(28))
              , d = a.makeLogger("h264-parser")
              , u = {
                referenceFrameRate: {
                    fixed: !0,
                    fps: 23.976,
                    fps_num: 23976,
                    fps_den: 1e3
                }
            };
            t.h264 = {
                name: "h264",
                parseConfig: function parseConfig(e) {
                    var t = e.bytes.byteLength;
                    if (t < 7)
                        return d.warn("Invalid AVCDecoderConfigurationRecord, lack of data!"),
                        -1;
                    var r, i = e.bytes.buffer, o = e.bytes.byteOffset, a = new DataView(i,o,t), s = (new Uint8Array(i.slice(o, o + t)),
                    0), l = 0, p = 0, c = 0, h = 0, f = "", m = u.referenceFrameRate, y = a.getUint8(0), _ = a.getUint8(1);
                    if (a.getUint8(2),
                    a.getUint8(3),
                    1 !== y || 0 === _)
                        return d.warn("Invalid AVCDecoderConfigurationRecord"),
                        -1;
                    if (3 !== (r = 1 + (3 & a.getUint8(4))) && 4 !== r)
                        return d.warn("Strange NaluLengthSizeMinusOne: " + (r - 1)),
                        -1;
                    var v = 31 & a.getUint8(5);
                    if (0 === v)
                        return d.warn("Invalid AVCDecoderConfigurationRecord: No SPS"),
                        -1;
                    v > 1 && d.warn("Strange AVCDecoderConfigurationRecord: SPS Count = " + v);
                    for (var g = 6, b = 0; b < v; b++) {
                        var w = a.getUint16(g, !1);
                        if (g += 2,
                        0 !== w) {
                            var P = new Uint8Array(i,o + g,w);
                            g += w;
                            var E = n.default.parseSPS(P);
                            if (0 === b) {
                                s = E.codec_size.width,
                                l = E.codec_size.height,
                                p = E.present_size.width,
                                c = E.present_size.height,
                                0 !== E.frame_rate.fps_num && 0 !== E.frame_rate.fps_den && (m = E.frame_rate),
                                h = m.fps_den / m.fps_num * 1e3;
                                for (var S = P.subarray(1, 4), M = "avc1.", T = 0; T < 3; T++) {
                                    var D = S[T].toString(16);
                                    D.length < 2 && (D = "0" + D),
                                    M += D
                                }
                                f = M
                            }
                        }
                    }
                    var k = a.getUint8(g);
                    if (0 === k)
                        return d.warn("Invalid AVCDecoderConfigurationRecord: No PPS"),
                        -1;
                    for (k > 1 && d.warn("Strange AVCDecoderConfigurationRecord: PPS Count = " + k),
                    g++,
                    b = 0; b < k; b++)
                        w = a.getUint16(g, !1),
                        g += 2,
                        0 !== w && (g += w);
                    return e.naluLengthSize = r,
                    e.codecWidth = s,
                    e.codecHeight = l,
                    e.presentWidth = p,
                    e.presentHeight = c,
                    e.refSampleDuration = h,
                    e.detailCodec = f,
                    e.fps = m.fps,
                    d.log("Parsed AVCDecoderConfigurationRecord"),
                    0
                },
                parseData: function parseData(e) {
                    for (var t = e.data.byteLength, r = e.data.buffer, i = e.data.byteOffset, o = new DataView(r,i,t), a = [], n = !1, u = 0, l = e.config.naluLengthSize; u < t; ) {
                        if (u + 4 >= t) {
                            d.warn("Malformed Nalu");
                            break
                        }
                        var p = o.getUint32(u, !1);
                        if (3 === l && (p >>>= 8),
                        p > t - l)
                            return d.warn("Malformed Nalus, NaluSize > DataSize!"),
                            -1;
                        var c = 31 & o.getUint8(u + l);
                        if (5 === c)
                            n = !0;
                        else if (6 === c)
                            try {
                                var h = new Uint8Array(r,i + u + 1 + l,p - 1)
                                  , f = s.default.parseSEI(h)
                                  , m = f.seiType
                                  , y = f.seiData;
                                y && y.data && (m === s.H264SeiType.H264_SEI_TYPE_USER_DATA_UNREGISTERED && y.uuid === s.H264SeiUUIDType.CloudVideoStream && (e.extradata.seiTimestamp = y.data),
                                e.extradata.sei = {
                                    seiTimestamp: e.dts,
                                    seiType: m,
                                    seiData: y
                                })
                            } catch (e) {
                                d.warn("parse sei error, ignored!", e)
                            }
                        var _ = new Uint8Array(r,i + u,l + p)
                          , v = {
                            type: c,
                            data: _
                        };
                        a.push(v),
                        _.byteLength,
                        u += l + p
                    }
                    return e.isKeyframe = n,
                    0
                }
            }
        }
        , function(e, t, r) {
            "use strict";
            var i = this && this.__importDefault || function(e) {
                return e && e.__esModule ? e : {
                    default: e
                }
            }
            ;
            Object.defineProperty(t, "__esModule", {
                value: !0
            });
            var o = i(r(27))
              , a = function() {
                function SPSParser() {}
                return SPSParser._ebsp2rbsp = function(e) {
                    for (var t = e, r = t.byteLength, i = new Uint8Array(r), o = 0, a = 0; a < r; a++)
                        a >= 2 && 3 === t[a] && 0 === t[a - 1] && 0 === t[a - 2] || (i[o] = t[a],
                        o++);
                    return new Uint8Array(i.buffer,0,o)
                }
                ,
                SPSParser.parseSPS = function(e) {
                    var t = SPSParser._ebsp2rbsp(e)
                      , r = new o.default(t);
                    r.readByte();
                    var i = r.readByte();
                    r.readByte();
                    var a = r.readByte();
                    r.readUEG();
                    var n = SPSParser.getProfileString(i)
                      , s = SPSParser.getLevelString(a)
                      , d = 1
                      , u = 420
                      , l = 8;
                    if ((100 === i || 110 === i || 122 === i || 244 === i || 44 === i || 83 === i || 86 === i || 118 === i || 128 === i || 138 === i || 144 === i) && (3 === (d = r.readUEG()) && r.readBits(1),
                    d <= 3 && (u = [0, 420, 422, 444][d]),
                    l = r.readUEG() + 8,
                    r.readUEG(),
                    r.readBits(1),
                    r.readBool()))
                        for (var p = 3 !== d ? 8 : 12, c = 0; c < p; c++)
                            r.readBool() && (c < 6 ? SPSParser._skipScalingList(r, 16) : SPSParser._skipScalingList(r, 64));
                    r.readUEG();
                    var h = r.readUEG();
                    if (0 === h)
                        r.readUEG();
                    else if (1 === h) {
                        r.readBits(1),
                        r.readSEG(),
                        r.readSEG();
                        var f = r.readUEG();
                        for (c = 0; c < f; c++)
                            r.readSEG()
                    }
                    r.readUEG(),
                    r.readBits(1);
                    var m = r.readUEG()
                      , y = r.readUEG()
                      , _ = r.readBits(1);
                    0 === _ && r.readBits(1),
                    r.readBits(1);
                    var v = 0
                      , g = 0
                      , b = 0
                      , w = 0;
                    r.readBool() && (v = r.readUEG(),
                    g = r.readUEG(),
                    b = r.readUEG(),
                    w = r.readUEG());
                    var P = 1
                      , E = 1
                      , S = 0
                      , M = !0
                      , T = 0
                      , D = 0;
                    if (r.readBool()) {
                        if (r.readBool()) {
                            var k = r.readByte();
                            k > 0 && k < 16 ? (P = [1, 12, 10, 16, 40, 24, 20, 32, 80, 18, 15, 64, 160, 4, 3, 2][k - 1],
                            E = [1, 11, 11, 11, 33, 11, 11, 11, 33, 11, 11, 33, 99, 3, 2, 1][k - 1]) : 255 === k && (P = r.readByte() << 8 | r.readByte(),
                            E = r.readByte() << 8 | r.readByte())
                        }
                        if (r.readBool() && r.readBool(),
                        r.readBool() && (r.readBits(4),
                        r.readBool() && r.readBits(24)),
                        r.readBool() && (r.readUEG(),
                        r.readUEG()),
                        r.readBool()) {
                            var O = r.readBits(32)
                              , L = r.readBits(32);
                            M = r.readBool(),
                            S = (T = L) / (D = 2 * O)
                        }
                    }
                    var C = 1;
                    1 === P && 1 === E || (C = P / E);
                    var R = 0
                      , A = 0;
                    0 === d ? (R = 1,
                    A = 2 - _) : (R = 3 === d ? 1 : 2,
                    A = (1 === d ? 2 : 1) * (2 - _));
                    var I = 16 * (m + 1)
                      , x = 16 * (y + 1) * (2 - _);
                    I -= (v + g) * R,
                    x -= (b + w) * A;
                    var B = Math.ceil(I * C);
                    return r.destroy(),
                    r = null,
                    {
                        profile_string: n,
                        level_string: s,
                        bit_depth: l,
                        chroma_format: u,
                        chroma_format_string: SPSParser.getChromaFormatString(u),
                        frame_rate: {
                            fixed: M,
                            fps: S,
                            fps_den: D,
                            fps_num: T
                        },
                        sar_ratio: {
                            width: P,
                            height: E
                        },
                        codec_size: {
                            width: I,
                            height: x
                        },
                        present_size: {
                            width: B,
                            height: x
                        }
                    }
                }
                ,
                SPSParser._skipScalingList = function(e, t) {
                    for (var r = 8, i = 8, o = 0; o < t; o++)
                        0 !== i && (i = (r + e.readSEG() + 256) % 256),
                        r = 0 === i ? r : i
                }
                ,
                SPSParser.getProfileString = function(e) {
                    switch (e) {
                    case 66:
                        return "Baseline";
                    case 77:
                        return "Main";
                    case 88:
                        return "Extended";
                    case 100:
                        return "High";
                    case 110:
                        return "High10";
                    case 122:
                        return "High422";
                    case 244:
                        return "High444";
                    default:
                        return "Unknown"
                    }
                }
                ,
                SPSParser.getLevelString = function(e) {
                    return (e / 10).toFixed(1)
                }
                ,
                SPSParser.getChromaFormatString = function(e) {
                    switch (e) {
                    case 420:
                        return "4:2:0";
                    case 422:
                        return "4:2:2";
                    case 444:
                        return "4:4:4";
                    default:
                        return "Unknown"
                    }
                }
                ,
                SPSParser
            }();
            t.default = a
        }
        , function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            });
            var i = function() {
                function ExpGolomb(e) {
                    this.TAG = "ExpGolomb",
                    this._buffer = e,
                    this._buffer_index = 0,
                    this._total_bytes = e.byteLength,
                    this._total_bits = 8 * e.byteLength,
                    this._current_word = 0,
                    this._current_word_bits_left = 0
                }
                return ExpGolomb.prototype.destroy = function() {
                    this._buffer = null
                }
                ,
                ExpGolomb.prototype._fillCurrentWord = function() {
                    var e = this._total_bytes - this._buffer_index;
                    if (e <= 0)
                        throw new Error("ExpGolomb: _fillCurrentWord() but no bytes available");
                    var t = Math.min(4, e)
                      , r = new Uint8Array(4);
                    r.set(this._buffer.subarray(this._buffer_index, this._buffer_index + t)),
                    this._current_word = new DataView(r.buffer).getUint32(0, !1),
                    this._buffer_index += t,
                    this._current_word_bits_left = 8 * t
                }
                ,
                ExpGolomb.prototype.readBits = function(e) {
                    if (e > 32)
                        throw new Error("ExpGolomb: readBits() bits exceeded max 32bits!");
                    if (e <= this._current_word_bits_left) {
                        var t = this._current_word >>> 32 - e;
                        return this._current_word <<= e,
                        this._current_word_bits_left -= e,
                        t
                    }
                    var r = this._current_word_bits_left ? this._current_word : 0;
                    r >>>= 32 - this._current_word_bits_left;
                    var i = e - this._current_word_bits_left;
                    this._fillCurrentWord();
                    var o = Math.min(i, this._current_word_bits_left)
                      , a = this._current_word >>> 32 - o;
                    return this._current_word <<= o,
                    this._current_word_bits_left -= o,
                    r = r << o | a
                }
                ,
                ExpGolomb.prototype.readBool = function() {
                    return 1 === this.readBits(1)
                }
                ,
                ExpGolomb.prototype.readByte = function() {
                    return this.readBits(8)
                }
                ,
                ExpGolomb.prototype._skipLeadingZero = function() {
                    var e;
                    for (e = 0; e < this._current_word_bits_left; e++)
                        if (0 !== (this._current_word & 2147483648 >>> e))
                            return this._current_word <<= e,
                            this._current_word_bits_left -= e,
                            e;
                    return this._fillCurrentWord(),
                    e + this._skipLeadingZero()
                }
                ,
                ExpGolomb.prototype.readUEG = function() {
                    var e = this._skipLeadingZero();
                    return this.readBits(e + 1) - 1
                }
                ,
                ExpGolomb.prototype.readSEG = function() {
                    var e = this.readUEG();
                    return 1 & e ? e + 1 >>> 1 : -1 * (e >>> 1)
                }
                ,
                ExpGolomb
            }();
            t.default = i
        }
        , function(e, t, r) {
            "use strict";
            var i = this && this.__importDefault || function(e) {
                return e && e.__esModule ? e : {
                    default: e
                }
            }
            ;
            Object.defineProperty(t, "__esModule", {
                value: !0
            });
            var o = i(r(0));
            t.H264SeiType = {
                H264_SEI_TYPE_BUFFERING_PERIOD: 0,
                H264_SEI_TYPE_PIC_TIMING: 1,
                H264_SEI_TYPE_PAN_SCAN_RECT: 2,
                H264_SEI_TYPE_FILLER_PAYLOAD: 3,
                H264_SEI_TYPE_USER_DATA_REGISTERED: 4,
                H264_SEI_TYPE_USER_DATA_UNREGISTERED: 5,
                H264_SEI_TYPE_RECOVERY_POINT: 6,
                H264_SEI_TYPE_FRAME_PACKING: 45,
                H264_SEI_TYPE_DISPLAY_ORIENTATION: 47,
                H264_SEI_TYPE_GREEN_METADATA: 56,
                H264_SEI_TYPE_MASTERING_DISPLAY_COLOUR_VOLUME: 137,
                H264_SEI_TYPE_ALTERNATIVE_TRANSFER: 147
            },
            t.H264SeiUUIDType = {
                AdsCtrlSEIV00001: "AdsCtrlSEIV00001",
                CloudVideoStream: "CloudVideoStream",
                RoiMaskSeiV00001: "RoiMaskSeiV00001"
            };
            var a = function() {
                function SEIParser() {}
                return SEIParser._ebsp2rbsp = function(e) {
                    for (var t = e, r = t.byteLength, i = new Uint8Array(r), o = 0, a = 0; a < r; a++)
                        a >= 2 && 3 === t[a] && 0 === t[a - 1] && 0 === t[a - 2] || (i[o] = t[a],
                        o++);
                    return new Uint8Array(i.buffer,0,o)
                }
                ,
                SEIParser.parseSEI = function(e) {
                    var r, i, o = SEIParser._ebsp2rbsp(e), a = new DataView(o.buffer), n = 0, s = 0, d = 0;
                    do {
                        i = a.getUint8(d),
                        d += 1,
                        n += i
                    } while (255 === i);do {
                        i = a.getUint8(d),
                        d += 1,
                        s += i
                    } while (255 === i);switch (n) {
                    case t.H264SeiType.H264_SEI_TYPE_USER_DATA_UNREGISTERED:
                        r = SEIParser.decodeUnregisteredUserData(a, d, s)
                    }
                    return {
                        seiType: n,
                        seiData: r
                    }
                }
                ,
                SEIParser.buffer2JSON = function(e) {
                    for (var t = [], r = new Uint8Array(e), i = 0, o = e.byteLength; i < o; i++)
                        t.push(String.fromCharCode(r[i]));
                    return JSON.parse(t.join(""))
                }
                ,
                SEIParser.decodeUnregisteredUserData = function(e, r, i) {
                    if (i < 16)
                        return o.default.warn("SEIParser ", "error size: ", i),
                        null;
                    var a, n, s = String.fromCharCode.apply(null, new Uint8Array(e.buffer,r,16));
                    switch (r += 16,
                    s) {
                    case t.H264SeiUUIDType.AdsCtrlSEIV00001:
                        0 === (n = e.getUint8(r++)) && (a = SEIParser.buffer2JSON(e.buffer.slice(r, i + r - 17)));
                        break;
                    case t.H264SeiUUIDType.CloudVideoStream:
                        var d = e.getUint32(r).toString(2)
                          , u = e.getUint32(r + 4).toString(2);
                        a = parseInt("" + d + (u.length < 32 ? new Array(32 - u.length + 1).join("0") : "") + u, 2);
                        break;
                    case t.H264SeiUUIDType.RoiMaskSeiV00001:
                        var l = e.getUint8(r);
                        r += 1,
                        1 === l && (a = String.fromCharCode.apply(null, new Uint8Array(e.buffer,r,i - 17)))
                    }
                    return {
                        uuid: s,
                        enctype: n,
                        data: a
                    }
                }
                ,
                SEIParser
            }();
            t.default = a
        }
        , function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            });
            var i = r(0).makeLogger("mp3-parser")
              , o = {
                _mpegAudioV10SampleRateTable: [44100, 48e3, 32e3, 0],
                _mpegAudioV20SampleRateTable: [22050, 24e3, 16e3, 0],
                _mpegAudioV25SampleRateTable: [11025, 12e3, 8e3, 0],
                _mpegAudioL1BitRateTable: [0, 32, 64, 96, 128, 160, 192, 224, 256, 288, 320, 352, 384, 416, 448, -1],
                _mpegAudioL2BitRateTable: [0, 32, 48, 56, 64, 80, 96, 112, 128, 160, 192, 224, 256, 320, 384, -1],
                _mpegAudioL3BitRateTable: [0, 32, 40, 48, 56, 64, 80, 96, 112, 128, 160, 192, 224, 256, 320, -1]
            };
            t.mp3 = {
                name: "mp3",
                parseConfig: function parseConfig(e) {
                    var t = e.bytes.byteLength;
                    if (t < 4)
                        return i.warn("Invalid MP3 packet, header missing!"),
                        -1;
                    var r = e.bytes.buffer
                      , a = e.bytes.byteOffset
                      , n = new Uint8Array(r,a,t);
                    if (255 !== n[0])
                        return -1;
                    var s = n[1] >>> 3 & 3
                      , d = (6 & n[1]) >> 1
                      , u = (240 & n[2]) >>> 4
                      , l = (12 & n[2]) >>> 2
                      , p = 3 !== (n[3] >>> 6 & 3) ? 2 : 1
                      , c = 0
                      , h = 0;
                    switch (s) {
                    case 0:
                        c = o._mpegAudioV25SampleRateTable[l];
                        break;
                    case 2:
                        c = o._mpegAudioV20SampleRateTable[l];
                        break;
                    case 3:
                        c = o._mpegAudioV10SampleRateTable[l]
                    }
                    switch (d) {
                    case 1:
                        u < o._mpegAudioL3BitRateTable.length && (h = o._mpegAudioL3BitRateTable[u]);
                        break;
                    case 2:
                        u < o._mpegAudioL2BitRateTable.length && (h = o._mpegAudioL2BitRateTable[u]);
                        break;
                    case 3:
                        u < o._mpegAudioL1BitRateTable.length && (h = o._mpegAudioL1BitRateTable[u])
                    }
                    return e.audioSampleRate = c,
                    e.channelCount = p,
                    e.detailCodec = "mp3",
                    e.dataRate = h,
                    e.refSampleDuration = 1152 / c * 1e3,
                    i.log("Parsed MPEG Audio Frame Header"),
                    0
                },
                parseData: function parseData(e) {
                    return 0
                }
            }
        }
        , function(e, t, r) {
            "use strict";
            var i, o = this && this.__extends || (i = function(e, t) {
                return (i = Object.setPrototypeOf || {
                    __proto__: []
                }instanceof Array && function(e, t) {
                    e.__proto__ = t
                }
                || function(e, t) {
                    for (var r in t)
                        t.hasOwnProperty(r) && (e[r] = t[r])
                }
                )(e, t)
            }
            ,
            function(e, t) {
                function __() {
                    this.constructor = e
                }
                i(e, t),
                e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
                new __)
            }
            ), a = this && this.__assign || function() {
                return (a = Object.assign || function(e) {
                    for (var t, r = 1, i = arguments.length; r < i; r++)
                        for (var o in t = arguments[r])
                            Object.prototype.hasOwnProperty.call(t, o) && (e[o] = t[o]);
                    return e
                }
                ).apply(this, arguments)
            }
            , n = this && this.__generator || function(e, t) {
                var r, i, o, a, n = {
                    label: 0,
                    sent: function() {
                        if (1 & o[0])
                            throw o[1];
                        return o[1]
                    },
                    trys: [],
                    ops: []
                };
                return a = {
                    next: verb(0),
                    throw: verb(1),
                    return: verb(2)
                },
                "function" === typeof Symbol && (a[Symbol.iterator] = function() {
                    return this
                }
                ),
                a;
                function verb(a) {
                    return function(s) {
                        return function step(a) {
                            if (r)
                                throw new TypeError("Generator is already executing.");
                            for (; n; )
                                try {
                                    if (r = 1,
                                    i && (o = 2 & a[0] ? i.return : a[0] ? i.throw || ((o = i.return) && o.call(i),
                                    0) : i.next) && !(o = o.call(i, a[1])).done)
                                        return o;
                                    switch (i = 0,
                                    o && (a = [2 & a[0], o.value]),
                                    a[0]) {
                                    case 0:
                                    case 1:
                                        o = a;
                                        break;
                                    case 4:
                                        return n.label++,
                                        {
                                            value: a[1],
                                            done: !1
                                        };
                                    case 5:
                                        n.label++,
                                        i = a[1],
                                        a = [0];
                                        continue;
                                    case 7:
                                        a = n.ops.pop(),
                                        n.trys.pop();
                                        continue;
                                    default:
                                        if (!(o = (o = n.trys).length > 0 && o[o.length - 1]) && (6 === a[0] || 2 === a[0])) {
                                            n = 0;
                                            continue
                                        }
                                        if (3 === a[0] && (!o || a[1] > o[0] && a[1] < o[3])) {
                                            n.label = a[1];
                                            break
                                        }
                                        if (6 === a[0] && n.label < o[1]) {
                                            n.label = o[1],
                                            o = a;
                                            break
                                        }
                                        if (o && n.label < o[2]) {
                                            n.label = o[2],
                                            n.ops.push(a);
                                            break
                                        }
                                        o[2] && n.ops.pop(),
                                        n.trys.pop();
                                        continue
                                    }
                                    a = t.call(e, n)
                                } catch (e) {
                                    a = [6, e],
                                    i = 0
                                } finally {
                                    r = o = 0
                                }
                            if (5 & a[0])
                                throw a[1];
                            return {
                                value: a[0] ? a[1] : void 0,
                                done: !0
                            }
                        }([a, s])
                    }
                }
            }
            , s = this && this.__importDefault || function(e) {
                return e && e.__esModule ? e : {
                    default: e
                }
            }
            ;
            Object.defineProperty(t, "__esModule", {
                value: !0
            });
            var d, u = s(r(31)), l = s(r(32)), p = r(9), c = r(11), h = r(2), f = r(0), m = r(3), y = f.makeLogger("flv-demuxer");
            !function(e) {
                e[e.WAIT_FLV_FLAG = 0] = "WAIT_FLV_FLAG",
                e[e.WAIT_PRE_TAG_SIZE = 1] = "WAIT_PRE_TAG_SIZE",
                e[e.WAIT_TAG = 2] = "WAIT_TAG"
            }(d || (d = {}));
            var _ = function(e) {
                function FlvDemuxer(t) {
                    var r = e.call(this, t) || this;
                    return r.TAG = "FlvDemuxer",
                    r._destroyed = !1,
                    r._flvSoundRateTable = [5500, 11025, 22050, 44100, 48e3],
                    r._status = d.WAIT_FLV_FLAG,
                    r._lastParseTime = 0,
                    r._audioConfig = r._generateTrackConfig("audio"),
                    r._videoConfig = r._generateTrackConfig("video"),
                    r._tracks = [],
                    r._needMp3Header = !0,
                    r._byteArray = new u.default({
                        initLength: r._config.stashBuffer,
                        autoClear: !0
                    }),
                    r
                }
                return o(FlvDemuxer, e),
                FlvDemuxer.prototype.dispose = function() {
                    e.prototype.dispose.call(this),
                    this._parser && (this._parser.return("dispose"),
                    this._parser = null),
                    this._byteArray = null,
                    this._audioConfig = null,
                    this._videoConfig = null,
                    this._tracks = [],
                    this._destroyed = !0,
                    y.log("disposed")
                }
                ,
                FlvDemuxer.prototype._appendArrayBuffer = function(e) {
                    this._byteArray.write(e),
                    this._parseData()
                }
                ,
                FlvDemuxer.prototype._appendEnd = function() {
                    this._parseData(!0),
                    this._parser && this._parser.return("end"),
                    e.prototype._appendEnd.call(this)
                }
                ,
                FlvDemuxer.prototype._parseData = function(e) {
                    if (void 0 === e && (e = !1),
                    this._byteArray.byteAvailable > 0) {
                        this._parser || (this._parser = this._parse());
                        var t = Date.now();
                        if (e || !this._hasFirstFrame || this._byteArray.byteAvailable > this._config.stashBuffer || t - this._lastParseTime > this._config.stashTime) {
                            this._lastParseTime = t;
                            var r = this._parser.next().value;
                            if (r && r.name === h.DyDemuxError.NAME)
                                return void this._error(r.message, r.errorId);
                            this._tracks.splice(0).forEach(this._dispatchTrack)
                        }
                    }
                }
                ,
                FlvDemuxer.prototype._parse = function() {
                    var e, t, r, i, o, a, s, u, l, p;
                    return n(this, function(n) {
                        switch (n.label) {
                        case 0:
                            switch (this._status) {
                            case d.WAIT_FLV_FLAG:
                                return [3, 1];
                            case d.WAIT_PRE_TAG_SIZE:
                                return [3, 4];
                            case d.WAIT_TAG:
                                return [3, 7]
                            }
                            return [3, 13];
                        case 1:
                            return this._byteArray.byteAvailable < 9 ? [4] : [3, 3];
                        case 2:
                            return n.sent(),
                            [3, 1];
                        case 3:
                            return "FLV" !== (e = this._byteArray.readString(3)) ? [2, new h.DyDemuxError("Not valid flv file : " + e,1610)] : (this._byteArray.readUint8(),
                            t = this._byteArray.readUint8(),
                            !!(4 & t) && !!(1 & t) || (this._trackLength = 1),
                            this._byteArray.read(4),
                            this._status = d.WAIT_PRE_TAG_SIZE,
                            [3, 13]);
                        case 4:
                            return this._byteArray.byteAvailable < 4 ? [4] : [3, 6];
                        case 5:
                            return n.sent(),
                            [3, 4];
                        case 6:
                            return this._byteArray.read(4),
                            this._status = d.WAIT_TAG,
                            [3, 13];
                        case 7:
                            return this._byteArray.byteAvailable < 11 ? [4] : [3, 9];
                        case 8:
                            return n.sent(),
                            [3, 7];
                        case 9:
                            r = this._byteArray.readUint8(),
                            i = this._byteArray.readUint24(),
                            o = this._byteArray.readUint24(),
                            a = this._byteArray.readUint8(),
                            s = a << 24 | o,
                            this._byteArray.readUint24(),
                            n.label = 10;
                        case 10:
                            return this._byteArray.byteAvailable < i ? [4] : [3, 12];
                        case 11:
                            return n.sent(),
                            [3, 10];
                        case 12:
                            switch (u = this._byteArray.bytePosition,
                            l = this._byteArray.read(i),
                            p = void 0,
                            r) {
                            case 8:
                                !1 !== this._config.hasAudio && (p = this._parseAudio(l, s));
                                break;
                            case 9:
                                !1 !== this._config.hasVideo && (p = this._parseVideo(l, s, u));
                                break;
                            case 18:
                                this._parseScript(l);
                                break;
                            default:
                                y.warn("unsupport flv tag type", r)
                            }
                            return this._status = d.WAIT_PRE_TAG_SIZE,
                            p ? [2, p] : [3, 13];
                        case 13:
                            return [3, 0];
                        case 14:
                            return [2]
                        }
                    })
                }
                ,
                FlvDemuxer.prototype._error = function(e, t) {
                    y.error("[" + this.TAG + "] " + e),
                    this.onError && this.onError({
                        message: e,
                        errorId: t
                    })
                }
                ,
                FlvDemuxer.prototype._parseAudio = function(e, t) {
                    var r = new u.default({
                        buffer: e
                    })
                      , i = r.readUint8()
                      , o = (240 & i) >> 4
                      , n = (12 & i) >> 2
                      , s = 1 & i
                      , d = r.read(r.byteAvailable)
                      , l = this._audioConfig;
                    if (l.channelCount = 0 === s ? 1 : 2,
                    l.audioSampleRate = this._flvSoundRateTable[n],
                    10 === o) {
                        var p = new Uint8Array(d)
                          , f = p[0]
                          , _ = p.slice(1)
                          , v = {
                            type: "audio",
                            trackId: l.trackId,
                            dts: t,
                            pts: t,
                            codec: c.Codec.AAC,
                            config: l,
                            data: _,
                            extradata: {}
                        };
                        0 === f ? (v.flag = "CFG",
                        this._pushTrack(v)) : 1 === f ? this._pushTrack(v) : y.warn(this.TAG, "Flv: Unsupported AAC data type " + f)
                    } else {
                        if (2 !== o)
                            return new h.DyDemuxError("unsupport audio type = " + o,162);
                        var g = new Uint8Array(d);
                        v = {
                            type: "audio",
                            trackId: l.trackId,
                            dts: t,
                            pts: t,
                            codec: c.Codec.MP3,
                            config: l,
                            data: g,
                            extradata: {}
                        };
                        if (this._needMp3Header) {
                            var b = a(a({}, v), {
                                flag: "CFG",
                                data: m.u8aClone(g.slice(0, 4))
                            });
                            this._pushTrack(b),
                            this._needMp3Header = !1
                        }
                        this._pushTrack(v)
                    }
                }
                ,
                FlvDemuxer.prototype._parseVideo = function(e, t, r) {
                    var i = new u.default({
                        buffer: e
                    })
                      , o = i.readUint8()
                      , a = (240 & o) >> 4
                      , n = 15 & o;
                    if (7 !== n)
                        return new h.DyDemuxError("unsupport video codec type = " + n,163);
                    var s = i.read(i.byteAvailable);
                    return this._parseAVCVideoPacket(s, 0, s.byteLength, t, r, a)
                }
                ,
                FlvDemuxer.prototype._parseScript = function(e) {
                    var t = l.default.parseScriptData(e, 0, e.byteLength);
                    if ("onMetaData"in t) {
                        var r = t.onMetaData;
                        "number" === typeof r.audiodatarate && void 0 === this._audioConfig.dataRate && (this._audioConfig.dataRate = r.audiodatarate),
                        "number" === typeof r.videodatarate && void 0 === this._videoConfig.dataRate && (this._videoConfig.dataRate = r.videodatarate),
                        this._pendingExtradata.metadata = r,
                        y.log(this.TAG, "Parsed onMetaData", r)
                    }
                }
                ,
                FlvDemuxer.prototype._parseAVCVideoPacket = function(e, t, r, i, o, a) {
                    if (r < 4)
                        y.warn(this.TAG, "Flv: Invalid AVC packet, missing AVCPacketType or/and CompositionTime");
                    else {
                        var n = new DataView(e,t,r)
                          , s = n.getUint8(0)
                          , d = (16777215 & n.getUint32(0, !1)) << 8 >> 8
                          , u = this._videoConfig
                          , l = new Uint8Array(e,t + 4,r - 4)
                          , p = {
                            type: "video",
                            trackId: u.trackId,
                            dts: i,
                            pts: i + d,
                            codec: c.Codec.H264,
                            config: u,
                            data: l,
                            extradata: {}
                        };
                        if (0 === s)
                            p.flag = "CFG",
                            this._pushTrack(p);
                        else if (1 === s)
                            this._pushTrack(p);
                        else if (2 !== s)
                            return new h.DyDemuxError("Flv: Invalid video packet type " + s,166)
                    }
                }
                ,
                FlvDemuxer.prototype._pushTrack = function(e) {
                    this._tracks.push(e)
                }
                ,
                FlvDemuxer.prototype._dispatchTrack = function(e) {
                    this._destroyed || this._appendTrack(e)
                }
                ,
                FlvDemuxer
            }(p.Demuxer);
            t.default = _
        }
        , function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            });
            var i = function() {
                function ByteArray(e) {
                    var t = void 0 === e ? {} : e
                      , r = t.buffer
                      , i = t.initLength
                      , o = void 0 === i ? 1024 : i
                      , a = t.autoClear
                      , n = void 0 !== a && a
                      , s = t.increase
                      , d = void 0 === s ? 0 : s
                      , u = t.littleEndian
                      , l = void 0 === u ? ByteArray.littleEndian : u;
                    this._rposition = 0,
                    this._wposition = 0,
                    this._count = 0,
                    this._autoClear = n,
                    this.increase = d,
                    this.littleEndian = l,
                    r ? (this._buffer = r,
                    this._wposition = r.byteLength) : this._buffer = new ArrayBuffer(o)
                }
                return Object.defineProperty(ByteArray.prototype, "buffer", {
                    get: function() {
                        return this._buffer.slice(0, this._wposition)
                    },
                    enumerable: !0,
                    configurable: !0
                }),
                Object.defineProperty(ByteArray.prototype, "byteAvailable", {
                    get: function() {
                        return this._wposition - this._rposition
                    },
                    enumerable: !0,
                    configurable: !0
                }),
                Object.defineProperty(ByteArray.prototype, "byteLength", {
                    get: function() {
                        return this._wposition
                    },
                    enumerable: !0,
                    configurable: !0
                }),
                Object.defineProperty(ByteArray.prototype, "bytePosition", {
                    get: function() {
                        return this._rposition
                    },
                    enumerable: !0,
                    configurable: !0
                }),
                ByteArray.prototype.read = function(e) {
                    if (e > this.byteAvailable)
                        throw new Error("[" + ByteArray.TAG + "] not enough data for read.");
                    var t = this._buffer.slice(this._rposition, this._rposition + e);
                    return this._rposition += e,
                    t
                }
                ,
                ByteArray.prototype.readUint8 = function() {
                    return new DataView(this.read(1)).getUint8(0)
                }
                ,
                ByteArray.prototype.readUint16 = function() {
                    return new DataView(this.read(2)).getUint16(0, this.littleEndian)
                }
                ,
                ByteArray.prototype.readUint24 = function() {
                    var e = new Uint8Array(this.read(3));
                    return this.littleEndian && e.reverse(),
                    e[0] << 16 | e[1] << 8 | e[2]
                }
                ,
                ByteArray.prototype.readUint32 = function() {
                    return new DataView(this.read(4)).getUint32(0, this.littleEndian)
                }
                ,
                ByteArray.prototype.readString = function(e) {
                    return String.fromCharCode.apply(null, new Uint8Array(this.read(e)))
                }
                ,
                ByteArray.prototype.write = function(e) {
                    if (e && e.byteLength > 0) {
                        var t = e.byteLength
                          , r = this._wposition + t;
                        if (r > this._buffer.byteLength) {
                            var i = this._autoClear ? this._rposition : 0
                              , o = r - i
                              , a = this._buffer.slice(i, this._wposition)
                              , n = void 0;
                            o > this._buffer.byteLength ? (this.increase ? o += this.increase : o = 2 * (this.buffer.byteLength + t),
                            this._count++,
                            n = new ArrayBuffer(o)) : n = this._buffer,
                            new Uint8Array(n).set(new Uint8Array(a), 0),
                            this._rposition -= i,
                            this._wposition = a.byteLength,
                            this._buffer = n
                        }
                        new Uint8Array(this._buffer).set(new Uint8Array(e), this._wposition),
                        this._wposition += t
                    }
                }
                ,
                ByteArray.fromArray = function(e) {
                    var t = 0;
                    e.forEach(function(e) {
                        return t += e.byteLength
                    });
                    var r = new ByteArray({
                        initLength: t
                    });
                    return e.forEach(function(e) {
                        return r.write(e)
                    }),
                    r
                }
                ,
                ByteArray.TAG = "ByteArray",
                ByteArray.littleEndian = !1,
                ByteArray
            }();
            t.default = i
        }
        , function(e, t, r) {
            "use strict";
            var i = this && this.__importDefault || function(e) {
                return e && e.__esModule ? e : {
                    default: e
                }
            }
            ;
            Object.defineProperty(t, "__esModule", {
                value: !0
            });
            var o, a = i(r(0)), n = i(r(33)), s = (o = new ArrayBuffer(2),
            new DataView(o).setInt16(0, 256, !0),
            256 === new Int16Array(o)[0]), d = function() {
                function AMF() {}
                return AMF.parseScriptData = function(e, t, r) {
                    var i = {};
                    try {
                        var o = AMF.parseValue(e, t, r)
                          , n = AMF.parseValue(e, t + o.size, r - o.size);
                        i[o.data] = n.data
                    } catch (e) {
                        a.default.error("AMF", e.toString())
                    }
                    return i
                }
                ,
                AMF.parseObject = function(e, t, r) {
                    if (r < 3)
                        throw new Error("Data not enough when parse ScriptDataObject");
                    var i = AMF.parseString(e, t, r)
                      , o = AMF.parseValue(e, t + i.size, r - i.size)
                      , a = o.objectEnd;
                    return {
                        data: {
                            name: i.data,
                            value: o.data
                        },
                        size: i.size + o.size,
                        objectEnd: a
                    }
                }
                ,
                AMF.parseVariable = function(e, t, r) {
                    return AMF.parseObject(e, t, r)
                }
                ,
                AMF.parseString = function(e, t, r) {
                    if (r < 2)
                        throw new Error("Data not enough when parse String");
                    var i = new DataView(e,t,r).getUint16(0, !s);
                    return {
                        data: i > 0 ? n.default(new Uint8Array(e,t + 2,i)) : "",
                        size: 2 + i
                    }
                }
                ,
                AMF.parseLongString = function(e, t, r) {
                    if (r < 4)
                        throw new Error("Data not enough when parse LongString");
                    var i = new DataView(e,t,r).getUint32(0, !s);
                    return {
                        data: i > 0 ? n.default(new Uint8Array(e,t + 4,i)) : "",
                        size: 4 + i
                    }
                }
                ,
                AMF.parseDate = function(e, t, r) {
                    if (r < 10)
                        throw new Error("Data size invalid when parse Date");
                    var i = new DataView(e,t,r)
                      , o = i.getFloat64(0, !s)
                      , a = i.getInt16(8, !s);
                    return {
                        data: new Date(o += 60 * a * 1e3),
                        size: 10
                    }
                }
                ,
                AMF.parseValue = function(e, t, r) {
                    if (r < 1)
                        throw new Error("Data not enough when parse Value");
                    var i, o = new DataView(e,t,r), n = 1, d = o.getUint8(0), u = !1;
                    try {
                        switch (d) {
                        case 0:
                            i = o.getFloat64(1, !s),
                            n += 8;
                            break;
                        case 1:
                            i = !!o.getUint8(1),
                            n += 1;
                            break;
                        case 2:
                            var l = AMF.parseString(e, t + 1, r - 1);
                            i = l.data,
                            n += l.size;
                            break;
                        case 3:
                            i = {};
                            var p = 0;
                            for (9 === (16777215 & o.getUint32(r - 4, !s)) && (p = 3); n < r - 4; ) {
                                var c = AMF.parseObject(e, t + n, r - n - p);
                                if (c.objectEnd)
                                    break;
                                i[c.data.name] = c.data.value,
                                n += c.size
                            }
                            if (n <= r - 3)
                                9 === (16777215 & o.getUint32(n - 1, !s)) && (n += 3);
                            break;
                        case 8:
                            i = {},
                            n += 4;
                            p = 0;
                            for (9 === (16777215 & o.getUint32(r - 4, !s)) && (p = 3); n < r - 8; ) {
                                var h = AMF.parseVariable(e, t + n, r - n - p);
                                if (h.objectEnd)
                                    break;
                                i[h.data.name] = h.data.value,
                                n += h.size
                            }
                            if (n <= r - 3)
                                9 === (16777215 & o.getUint32(n - 1, !s)) && (n += 3);
                            break;
                        case 9:
                            i = void 0,
                            n = 1,
                            u = !0;
                            break;
                        case 10:
                            i = [];
                            var f = o.getUint32(1, !s);
                            n += 4;
                            for (var m = 0; m < f; m++) {
                                var y = AMF.parseValue(e, t + n, r - n);
                                i.push(y.data),
                                n += y.size
                            }
                            break;
                        case 11:
                            var _ = AMF.parseDate(e, t + 1, r - 1);
                            i = _.data,
                            n += _.size;
                            break;
                        case 12:
                            var v = AMF.parseString(e, t + 1, r - 1);
                            i = v.data,
                            n += v.size;
                            break;
                        default:
                            n = r,
                            a.default.warn("AMF", "Unsupported AMF value type " + d)
                        }
                    } catch (e) {
                        a.default.error("AMF", e.toString())
                    }
                    return {
                        data: i,
                        size: n,
                        objectEnd: u
                    }
                }
                ,
                AMF
            }();
            t.default = d
        }
        , function(e, t, r) {
            "use strict";
            function checkContinuation(e, t, r) {
                var i = e;
                if (t + r < i.length) {
                    for (; r--; )
                        if (128 !== (192 & i[++t]))
                            return !1;
                    return !0
                }
                return !1
            }
            Object.defineProperty(t, "__esModule", {
                value: !0
            }),
            t.default = function decodeUTF8(e) {
                for (var t = [], r = e, i = 0, o = e.length; i < o; )
                    if (r[i] < 128)
                        t.push(String.fromCharCode(r[i])),
                        ++i;
                    else {
                        if (r[i] < 192)
                            ;
                        else if (r[i] < 224) {
                            if (checkContinuation(r, i, 1) && (a = (31 & r[i]) << 6 | 63 & r[i + 1]) >= 128) {
                                t.push(String.fromCharCode(65535 & a)),
                                i += 2;
                                continue
                            }
                        } else if (r[i] < 240) {
                            if (checkContinuation(r, i, 2) && (a = (15 & r[i]) << 12 | (63 & r[i + 1]) << 6 | 63 & r[i + 2]) >= 2048 && 55296 !== (63488 & a)) {
                                t.push(String.fromCharCode(65535 & a)),
                                i += 3;
                                continue
                            }
                        } else if (r[i] < 248) {
                            var a;
                            if (checkContinuation(r, i, 3) && (a = (7 & r[i]) << 18 | (63 & r[i + 1]) << 12 | (63 & r[i + 2]) << 6 | 63 & r[i + 3]) > 65536 && a < 1114112) {
                                a -= 65536,
                                t.push(String.fromCharCode(a >>> 10 | 55296)),
                                t.push(String.fromCharCode(1023 & a | 56320)),
                                i += 4;
                                continue
                            }
                        }
                        t.push(String.fromCharCode(65533)),
                        ++i
                    }
                return t.join("")
            }
        }
        , function(e, t, r) {
            "use strict";
            var i, o = this && this.__extends || (i = function(e, t) {
                return (i = Object.setPrototypeOf || {
                    __proto__: []
                }instanceof Array && function(e, t) {
                    e.__proto__ = t
                }
                || function(e, t) {
                    for (var r in t)
                        t.hasOwnProperty(r) && (e[r] = t[r])
                }
                )(e, t)
            }
            ,
            function(e, t) {
                function __() {
                    this.constructor = e
                }
                i(e, t),
                e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
                new __)
            }
            );
            Object.defineProperty(t, "__esModule", {
                value: !0
            });
            var a = r(0)
              , n = r(3)
              , s = r(10)
              , d = a.makeLogger("remuxer")
              , u = function(e) {
                function Remuxer(t) {
                    var r = e.call(this) || this;
                    return r._trackConfigs = {},
                    r._config = t,
                    r
                }
                return o(Remuxer, e),
                Remuxer.prototype.dispose = function() {
                    e.prototype.dispose.call(this),
                    this._config = void 0,
                    this._trackConfigs = void 0
                }
                ,
                Remuxer.prototype.append = function(e) {
                    if ("CFG" === e.flag) {
                        var t = e.config
                          , r = this._trackConfigs[e.trackId];
                        n.isBufferEqual(null === r || void 0 === r ? void 0 : r.bytes, t.bytes) || (this._configChanged(t, r, e),
                        this._trackConfigs[e.trackId] = Object.assign({}, t))
                    } else
                        this._handleTrackData(e)
                }
                ,
                Remuxer.prototype._handleTrackData = function(e) {
                    this.onData(e)
                }
                ,
                Remuxer.prototype._configChanged = function(e, t, r) {
                    d.log("track config changed!", t, e)
                }
                ,
                Remuxer
            }(s.BaseStream);
            t.Remuxer = u
        }
        , function(e, t, r) {
            "use strict";
            var i, o = this && this.__extends || (i = function(e, t) {
                return (i = Object.setPrototypeOf || {
                    __proto__: []
                }instanceof Array && function(e, t) {
                    e.__proto__ = t
                }
                || function(e, t) {
                    for (var r in t)
                        t.hasOwnProperty(r) && (e[r] = t[r])
                }
                )(e, t)
            }
            ,
            function(e, t) {
                function __() {
                    this.constructor = e
                }
                i(e, t),
                e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
                new __)
            }
            ), a = this && this.__importDefault || function(e) {
                return e && e.__esModule ? e : {
                    default: e
                }
            }
            ;
            Object.defineProperty(t, "__esModule", {
                value: !0
            });
            var n = a(r(36))
              , s = a(r(5))
              , d = r(12)
              , u = r(0)
              , l = r(3)
              , p = u.makeLogger("mp4-remuxer")
              , c = function(e) {
                function Mp4Remuxer() {
                    var t = null !== e && e.apply(this, arguments) || this;
                    return t.TAG = "MP4Remuxer",
                    t._useAudioMpeg = !1,
                    t._isAudioTimeNeedUpdate = !1,
                    t._trackInfos = {},
                    t
                }
                return o(Mp4Remuxer, e),
                Mp4Remuxer.prototype.dispose = function() {
                    e.prototype.dispose.call(this),
                    this._trackInfos = void 0
                }
                ,
                Mp4Remuxer.prototype._configChanged = function(e, t, r) {
                    p.log("track config changed!", t, e),
                    "audio" === e.type ? "mp3" !== e.detailCodec || s.default.firefox ? (e.mimeType = "audio/mp4; codecs=" + e.detailCodec,
                    r.data = n.default.generateInitSegment(e),
                    p.log("generate init audio segment")) : (e.mimeType = "audio/mpeg",
                    this._useAudioMpeg = !0,
                    this._isAudioTimeNeedUpdate = !0,
                    delete r.data) : "video" === e.type && (e.mimeType = "video/mp4; codecs=" + e.detailCodec,
                    r.data = n.default.generateInitSegment(e),
                    p.log("generate init video segment")),
                    this.onData(r)
                }
                ,
                Mp4Remuxer.prototype._handleTrackData = function(e) {
                    var t = this._trackConfigs[e.trackId];
                    if (t) {
                        if (e.config = t,
                        e.data) {
                            if ("audio" === e.type && this._useAudioMpeg)
                                return this._isAudioTimeNeedUpdate && (e.extradata.timeOffset = e.pts,
                                this._isAudioTimeNeedUpdate = !1),
                                void this.onData(e);
                            var r = this._trackInfos[e.trackId];
                            r || (this._trackInfos[e.trackId] = r = {
                                lastTrack: void 0,
                                sequenceNumber: 1
                            });
                            var i = "audio" === e.type ? this._remuxAudio : this._remuxVideo;
                            return r.lastTrack && (r.lastTrack.duration = e.dts - r.lastTrack.dts,
                            (s.default.msedge || s.default.firefox) && "audio" === r.lastTrack.type && r.lastTrack.duration < 100 * e.config.refSampleDuration && (r.lastTrack.duration = e.config.refSampleDuration,
                            e.dts = e.pts = r.lastTrack.dts + r.lastTrack.duration),
                            i(r.lastTrack)),
                            r.lastTrack = e,
                            e.isEnd ? (e.duration = Math.floor(t.refSampleDuration),
                            void i(e)) : void 0
                        }
                        this.onData(e)
                    }
                }
                ,
                Mp4Remuxer.prototype._mergeBoxes = function(e, t) {
                    var r = new Uint8Array(e.byteLength + t.byteLength);
                    return r.set(e, 0),
                    r.set(t, e.byteLength),
                    r
                }
                ,
                Mp4Remuxer.prototype._remuxAudio = function(e) {
                    if (e.duration > this._config.audioDurationThreshold && (p.warn("audio duration too long " + e.duration),
                    e.extradata.jumpOverTs = e.pts + e.duration),
                    e.data) {
                        var t = {
                            trackId: e.trackId,
                            sequenceNumber: this._trackInfos[e.trackId].sequenceNumber++,
                            samples: [{
                                duration: l.timescaledTime(e.duration, e.config.timescale),
                                size: e.data.byteLength,
                                cts: 0,
                                flags: {
                                    isLeading: 0,
                                    dependsOn: 1,
                                    isDependedOn: 0,
                                    hasRedundancy: 0,
                                    isNonSync: 0
                                }
                            }]
                        }
                          , r = n.default.moof(t, l.timescaledTime64(e.dts, e.config.timescale))
                          , i = n.default.mdat(e.data);
                        e.data = this._mergeBoxes(r, i)
                    }
                    this.onData(e)
                }
                ,
                Mp4Remuxer.prototype._remuxVideo = function(e) {
                    e.duration > this._config.videoDurationThreshold && p.warn("video duration too long " + e.duration);
                    var t = e.isKeyframe;
                    if (e.data) {
                        var r = {
                            trackId: e.trackId,
                            sequenceNumber: this._trackInfos[e.trackId].sequenceNumber++,
                            samples: [{
                                duration: l.timescaledTime(e.duration, e.config.timescale),
                                size: e.data.byteLength,
                                cts: l.timescaledTime(e.pts - e.dts, e.config.timescale),
                                flags: {
                                    isLeading: 0,
                                    dependsOn: t ? 2 : 1,
                                    isDependedOn: t ? 1 : 0,
                                    hasRedundancy: 0,
                                    isNonSync: t ? 0 : 1
                                }
                            }]
                        };
                        if (s.default.chrome && (s.default.version.major < 50 || 50 === s.default.version.major && s.default.version.build < 2661)) {
                            var i = r.samples[0].flags;
                            i.dependsOn = 2,
                            i.isNonSync = 0
                        }
                        var o = n.default.moof(r, l.timescaledTime64(e.dts, e.config.timescale))
                          , a = n.default.mdat(e.data);
                        e.data = this._mergeBoxes(o, a)
                    }
                    this.onData(e)
                }
                ,
                Mp4Remuxer
            }(d.Remuxer);
            t.default = c
        }
        , function(e, t, r) {
            "use strict";
            var i = this && this.__spreadArrays || function() {
                for (var e = 0, t = 0, r = arguments.length; t < r; t++)
                    e += arguments[t].length;
                var i = Array(e)
                  , o = 0;
                for (t = 0; t < r; t++)
                    for (var a = arguments[t], n = 0, s = a.length; n < s; n++,
                    o++)
                        i[o] = a[n];
                return i
            }
            ;
            Object.defineProperty(t, "__esModule", {
                value: !0
            });
            var o = function() {
                function MP4() {}
                return MP4.init = function() {
                    for (var e in MP4.types = {
                        avc1: [],
                        avcC: [],
                        btrt: [],
                        dinf: [],
                        dref: [],
                        esds: [],
                        ftyp: [],
                        hdlr: [],
                        mdat: [],
                        mdhd: [],
                        mdia: [],
                        mfhd: [],
                        minf: [],
                        moof: [],
                        moov: [],
                        mp4a: [],
                        mvex: [],
                        mvhd: [],
                        sdtp: [],
                        stbl: [],
                        stco: [],
                        stsc: [],
                        stsd: [],
                        stsz: [],
                        stts: [],
                        tfdt: [],
                        tfhd: [],
                        traf: [],
                        trak: [],
                        trun: [],
                        trex: [],
                        tkhd: [],
                        vmhd: [],
                        smhd: [],
                        ".mp3": []
                    },
                    MP4.types)
                        MP4.types.hasOwnProperty(e) && (MP4.types[e] = [e.charCodeAt(0), e.charCodeAt(1), e.charCodeAt(2), e.charCodeAt(3)]);
                    var t = MP4.constants = {};
                    t.FTYP = new Uint8Array([105, 115, 111, 109, 0, 0, 0, 1, 105, 115, 111, 109, 97, 118, 99, 49]),
                    t.STSD_PREFIX = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 1]),
                    t.STTS = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 0]),
                    t.STSC = t.STCO = t.STTS,
                    t.STSZ = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]),
                    t.HDLR_VIDEO = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 0, 118, 105, 100, 101, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 86, 105, 100, 101, 111, 72, 97, 110, 100, 108, 101, 114, 0]),
                    t.HDLR_AUDIO = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 0, 115, 111, 117, 110, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 83, 111, 117, 110, 100, 72, 97, 110, 100, 108, 101, 114, 0]),
                    t.DREF = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 12, 117, 114, 108, 32, 0, 0, 0, 1]),
                    t.SMHD = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 0]),
                    t.VMHD = new Uint8Array([0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0])
                }
                ,
                MP4.box = function(e) {
                    for (var t = 8, r = null, i = Array.prototype.slice.call(arguments, 1), o = i.length, a = 0; a < o; a++)
                        t += i[a].byteLength;
                    (r = new Uint8Array(t))[0] = t >>> 24 & 255,
                    r[1] = t >>> 16 & 255,
                    r[2] = t >>> 8 & 255,
                    r[3] = 255 & t,
                    r.set(e, 4);
                    var n = 8;
                    for (a = 0; a < o; a++)
                        r.set(i[a], n),
                        n += i[a].byteLength;
                    return r
                }
                ,
                MP4.generateInitSegment = function(e) {
                    var t = MP4.box(MP4.types.ftyp, MP4.constants.FTYP)
                      , r = MP4.moov(e)
                      , i = new Uint8Array(t.byteLength + r.byteLength);
                    return i.set(t, 0),
                    i.set(r, t.byteLength),
                    i
                }
                ,
                MP4.moov = function(e) {
                    var t = MP4.mvhd(e.timescale, e.duration)
                      , r = MP4.trak(e)
                      , i = MP4.mvex(e);
                    return MP4.box(MP4.types.moov, t, r, i)
                }
                ,
                MP4.mvhd = function(e, t) {
                    return MP4.box(MP4.types.mvhd, new Uint8Array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, e >>> 24 & 255, e >>> 16 & 255, e >>> 8 & 255, 255 & e, t >>> 24 & 255, t >>> 16 & 255, t >>> 8 & 255, 255 & t, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 64, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255]))
                }
                ,
                MP4.trak = function(e) {
                    return MP4.box(MP4.types.trak, MP4.tkhd(e), MP4.mdia(e))
                }
                ,
                MP4.tkhd = function(e) {
                    var t = e.trackId
                      , r = e.duration
                      , i = e.presentWidth
                      , o = e.presentHeight;
                    return MP4.box(MP4.types.tkhd, new Uint8Array([0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, t >>> 24 & 255, t >>> 16 & 255, t >>> 8 & 255, 255 & t, 0, 0, 0, 0, r >>> 24 & 255, r >>> 16 & 255, r >>> 8 & 255, 255 & r, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 64, 0, 0, 0, i >>> 8 & 255, 255 & i, 0, 0, o >>> 8 & 255, 255 & o, 0, 0]))
                }
                ,
                MP4.mdia = function(e) {
                    return MP4.box(MP4.types.mdia, MP4.mdhd(e), MP4.hdlr(e), MP4.minf(e))
                }
                ,
                MP4.mdhd = function(e) {
                    var t = e.timescale
                      , r = e.duration;
                    return MP4.box(MP4.types.mdhd, new Uint8Array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t >>> 24 & 255, t >>> 16 & 255, t >>> 8 & 255, 255 & t, r >>> 24 & 255, r >>> 16 & 255, r >>> 8 & 255, 255 & r, 85, 196, 0, 0]))
                }
                ,
                MP4.hdlr = function(e) {
                    var t = null;
                    return t = "audio" === e.type ? MP4.constants.HDLR_AUDIO : MP4.constants.HDLR_VIDEO,
                    MP4.box(MP4.types.hdlr, t)
                }
                ,
                MP4.minf = function(e) {
                    var t = null;
                    return t = "audio" === e.type ? MP4.box(MP4.types.smhd, MP4.constants.SMHD) : MP4.box(MP4.types.vmhd, MP4.constants.VMHD),
                    MP4.box(MP4.types.minf, t, MP4.dinf(), MP4.stbl(e))
                }
                ,
                MP4.dinf = function() {
                    return MP4.box(MP4.types.dinf, MP4.box(MP4.types.dref, MP4.constants.DREF))
                }
                ,
                MP4.stbl = function(e) {
                    return MP4.box(MP4.types.stbl, MP4.stsd(e), MP4.box(MP4.types.stts, MP4.constants.STTS), MP4.box(MP4.types.stsc, MP4.constants.STSC), MP4.box(MP4.types.stsz, MP4.constants.STSZ), MP4.box(MP4.types.stco, MP4.constants.STCO))
                }
                ,
                MP4.stsd = function(e) {
                    return "audio" === e.type ? "mp3" === e.detailCodec ? MP4.box(MP4.types.stsd, MP4.constants.STSD_PREFIX, MP4.mp3(e)) : MP4.box(MP4.types.stsd, MP4.constants.STSD_PREFIX, MP4.mp4a(e)) : MP4.box(MP4.types.stsd, MP4.constants.STSD_PREFIX, MP4.avc1(e))
                }
                ,
                MP4.mp3 = function(e) {
                    var t = e.channelCount
                      , r = e.audioSampleRate
                      , i = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, t, 0, 16, 0, 0, 0, 0, r >>> 8 & 255, 255 & r, 0, 0]);
                    return MP4.box(MP4.types[".mp3"], i)
                }
                ,
                MP4.mp4a = function(e) {
                    var t = e.channelCount
                      , r = e.audioSampleRate
                      , i = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, t, 0, 16, 0, 0, 0, 0, r >>> 8 & 255, 255 & r, 0, 0]);
                    return MP4.box(MP4.types.mp4a, i, MP4.esds(e))
                }
                ,
                MP4.esds = function(e) {
                    var t = i(e.bytes)
                      , r = t.length
                      , o = new Uint8Array([0, 0, 0, 0, 3, 23 + r, 0, 1, 0, 4, 15 + r, 64, 21, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5].concat([r]).concat(t).concat([6, 1, 2]));
                    return MP4.box(MP4.types.esds, o)
                }
                ,
                MP4.avc1 = function(e) {
                    var t = e.bytes
                      , r = e.codecWidth
                      , i = e.codecHeight
                      , o = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, r >>> 8 & 255, 255 & r, i >>> 8 & 255, 255 & i, 0, 72, 0, 0, 0, 72, 0, 0, 0, 0, 0, 0, 0, 1, 10, 115, 107, 121, 45, 119, 97, 110, 103, 64, 113, 113, 46, 99, 111, 109, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 24, 255, 255]);
                    return MP4.box(MP4.types.avc1, o, MP4.box(MP4.types.avcC, t))
                }
                ,
                MP4.mvex = function(e) {
                    return MP4.box(MP4.types.mvex, MP4.trex(e))
                }
                ,
                MP4.trex = function(e) {
                    var t = e.trackId
                      , r = new Uint8Array([0, 0, 0, 0, t >>> 24 & 255, t >>> 16 & 255, t >>> 8 & 255, 255 & t, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1]);
                    return MP4.box(MP4.types.trex, r)
                }
                ,
                MP4.moof = function(e, t) {
                    return MP4.box(MP4.types.moof, MP4.mfhd(e.sequenceNumber), MP4.traf(e, t))
                }
                ,
                MP4.mfhd = function(e) {
                    var t = new Uint8Array([0, 0, 0, 0, e >>> 24 & 255, e >>> 16 & 255, e >>> 8 & 255, 255 & e]);
                    return MP4.box(MP4.types.mfhd, t)
                }
                ,
                MP4.traf = function(e, t) {
                    var r = e.trackId
                      , o = MP4.box(MP4.types.tfhd, new Uint8Array([0, 0, 0, 0, r >>> 24 & 255, r >>> 16 & 255, r >>> 8 & 255, 255 & r]))
                      , a = MP4.box(MP4.types.tfdt, new Uint8Array(i([1, 0, 0, 0], t.toBytesBE())))
                      , n = MP4.sdtp(e)
                      , s = MP4.trun(e, n.byteLength + 16 + 16 + 8 + 16 + 8 + 8 + 4);
                    return MP4.box(MP4.types.traf, o, a, s, n)
                }
                ,
                MP4.sdtp = function(e) {
                    for (var t = e.samples || [], r = t.length, i = new Uint8Array(4 + r), o = 0; o < r; o++) {
                        var a = t[o].flags;
                        i[o + 4] = a.isLeading << 6 | a.dependsOn << 4 | a.isDependedOn << 2 | a.hasRedundancy
                    }
                    return MP4.box(MP4.types.sdtp, i)
                }
                ,
                MP4.trun = function(e, t) {
                    var r = e.samples || []
                      , i = r.length
                      , o = 12 + 16 * i
                      , a = new Uint8Array(o);
                    t += 8 + o,
                    a.set([0, 0, 15, 1, i >>> 24 & 255, i >>> 16 & 255, i >>> 8 & 255, 255 & i, t >>> 24 & 255, t >>> 16 & 255, t >>> 8 & 255, 255 & t], 0);
                    for (var n = 0; n < i; n++) {
                        var s = r[n].duration
                          , d = r[n].size
                          , u = r[n].flags
                          , l = r[n].cts;
                        a.set([s >>> 24 & 255, s >>> 16 & 255, s >>> 8 & 255, 255 & s, d >>> 24 & 255, d >>> 16 & 255, d >>> 8 & 255, 255 & d, u.isLeading << 2 | u.dependsOn, u.isDependedOn << 6 | u.hasRedundancy << 4 | u.isNonSync, 0, 0, l >>> 24 & 255, l >>> 16 & 255, l >>> 8 & 255, 255 & l], 12 + 16 * n)
                    }
                    return MP4.box(MP4.types.trun, a)
                }
                ,
                MP4.mdat = function(e) {
                    return MP4.box(MP4.types.mdat, e)
                }
                ,
                MP4
            }();
            o.init(),
            t.default = o
        }
        , function(e, t, r) {
            function webpackBootstrapFunc(e) {
                var t = {};
                function __webpack_require__(r) {
                    if (t[r])
                        return t[r].exports;
                    var i = t[r] = {
                        i: r,
                        l: !1,
                        exports: {}
                    };
                    return e[r].call(i.exports, i, i.exports, __webpack_require__),
                    i.l = !0,
                    i.exports
                }
                __webpack_require__.m = e,
                __webpack_require__.c = t,
                __webpack_require__.i = function(e) {
                    return e
                }
                ,
                __webpack_require__.d = function(e, t, r) {
                    __webpack_require__.o(e, t) || Object.defineProperty(e, t, {
                        configurable: !1,
                        enumerable: !0,
                        get: r
                    })
                }
                ,
                __webpack_require__.r = function(e) {
                    Object.defineProperty(e, "__esModule", {
                        value: !0
                    })
                }
                ,
                __webpack_require__.n = function(e) {
                    var t = e && e.__esModule ? function getDefault() {
                        return e.default
                    }
                    : function getModuleExports() {
                        return e
                    }
                    ;
                    return __webpack_require__.d(t, "a", t),
                    t
                }
                ,
                __webpack_require__.o = function(e, t) {
                    return Object.prototype.hasOwnProperty.call(e, t)
                }
                ,
                __webpack_require__.p = "/",
                __webpack_require__.oe = function(e) {
                    throw console.error(e),
                    e
                }
                ;
                var r = __webpack_require__(__webpack_require__.s = ENTRY_MODULE);
                return r.default || r
            }
            var i = "[\\.|\\-|\\+|\\w|/|@]+"
              , o = "\\((/\\*.*?\\*/)?s?.*?(" + i + ").*?\\)";
            function quoteRegExp(e) {
                return (e + "").replace(/[.?*+^$[\]\\(){}|-]/g, "\\$&")
            }
            function getModuleDependencies(e, t, a) {
                var n = {};
                n[a] = [];
                var s = t.toString()
                  , d = s.match(/^function\s?\(\w+,\s*\w+,\s*(\w+)\)/);
                if (!d)
                    return n;
                for (var u, l = d[1], p = new RegExp("(\\\\n|\\W)" + quoteRegExp(l) + o,"g"); u = p.exec(s); )
                    "dll-reference" !== u[3] && n[a].push(u[3]);
                for (p = new RegExp("\\(" + quoteRegExp(l) + '\\("(dll-reference\\s(' + i + '))"\\)\\)' + o,"g"); u = p.exec(s); )
                    e[u[2]] || (n[a].push(u[1]),
                    e[u[2]] = r(u[1]).m),
                    n[u[2]] = n[u[2]] || [],
                    n[u[2]].push(u[4]);
                return n
            }
            function hasValuesInQueues(e) {
                return Object.keys(e).reduce(function(t, r) {
                    return t || e[r].length > 0
                }, !1)
            }
            e.exports = function(e, t) {
                t = t || {};
                var i = {
                    main: r.m
                }
                  , o = t.all ? {
                    main: Object.keys(i)
                } : function getRequiredModules(e, t) {
                    for (var r = {
                        main: [t]
                    }, i = {
                        main: []
                    }, o = {
                        main: {}
                    }; hasValuesInQueues(r); )
                        for (var a = Object.keys(r), n = 0; n < a.length; n++) {
                            var s = a[n]
                              , d = r[s].pop();
                            if (o[s] = o[s] || {},
                            !o[s][d] && e[s][d]) {
                                o[s][d] = !0,
                                i[s] = i[s] || [],
                                i[s].push(d);
                                for (var u = getModuleDependencies(e, e[s][d], s), l = Object.keys(u), p = 0; p < l.length; p++)
                                    r[l[p]] = r[l[p]] || [],
                                    r[l[p]] = r[l[p]].concat(u[l[p]])
                            }
                        }
                    return i
                }(i, e)
                  , a = "";
                Object.keys(o).filter(function(e) {
                    return "main" !== e
                }).forEach(function(e) {
                    for (var t = 0; o[e][t]; )
                        t++;
                    o[e].push(t),
                    i[e][t] = "(function(module, exports, __webpack_require__) { module.exports = __webpack_require__; })",
                    a = a + "var " + e + " = (" + webpackBootstrapFunc.toString().replace("ENTRY_MODULE", JSON.stringify(t)) + ")({" + o[e].map(function(t) {
                        return JSON.stringify(t) + ": " + i[e][t].toString()
                    }).join(",") + "});\n"
                }),
                a = a + "new ((" + webpackBootstrapFunc.toString().replace("ENTRY_MODULE", JSON.stringify(e)) + ")({" + o.main.map(function(e) {
                    return JSON.stringify(e) + ": " + i.main[e].toString()
                }).join(",") + "}))(self);";
                var n = new window.Blob([a],{
                    type: "text/javascript"
                });
                if (t.bare)
                    return n;
                var s = (window.URL || window.webkitURL || window.mozURL || window.msURL).createObjectURL(n)
                  , d = new window.Worker(s);
                return d.objectURL = s,
                d
            }
        }
        , function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            });
            var i = r(1)
              , o = function() {
                function TimeDispatch() {
                    this.array = [],
                    i.bindAll(this),
                    this._timer = setInterval(this._onTimeUpdate, 100)
                }
                return TimeDispatch.prototype.destroy = function() {
                    this.detach(),
                    clearInterval(this._timer)
                }
                ,
                TimeDispatch.prototype.attach = function(e) {
                    this.video = e
                }
                ,
                TimeDispatch.prototype.detach = function() {
                    this.video = null,
                    this.array = []
                }
                ,
                TimeDispatch.prototype.add = function(e) {
                    this.array.push(e),
                    this._onTimeUpdate()
                }
                ,
                TimeDispatch.prototype._send = function(e) {
                    this.onSend && this.onSend(e)
                }
                ,
                TimeDispatch.prototype._onTimeUpdate = function() {
                    if (this.video) {
                        for (var e = 1e3 * this.video.currentTime, t = this.array.length, r = 0; r < t; r++) {
                            var i = this.array[r];
                            if (i.ts > e)
                                break;
                            this._send(i)
                        }
                        r > 0 && this.array.splice(0, r)
                    }
                }
                ,
                TimeDispatch
            }();
            t.TimeDispatch = o
        }
        , function(e, t, r) {
            "use strict";
            var i, o = this && this.__extends || (i = function(e, t) {
                return (i = Object.setPrototypeOf || {
                    __proto__: []
                }instanceof Array && function(e, t) {
                    e.__proto__ = t
                }
                || function(e, t) {
                    for (var r in t)
                        t.hasOwnProperty(r) && (e[r] = t[r])
                }
                )(e, t)
            }
            ,
            function(e, t) {
                function __() {
                    this.constructor = e
                }
                i(e, t),
                e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
                new __)
            }
            );
            Object.defineProperty(t, "__esModule", {
                value: !0
            });
            var a = r(1)
              , n = r(2)
              , s = r(40)
              , d = r(41)
              , u = r(0)
              , l = r(3)
              , p = u.makeLogger("to-mse")
              , c = function(e) {
                function ToMSE(t) {
                    var r = e.call(this, t) || this;
                    return r.preTimestamp = 0,
                    r._tracks = {},
                    r._sourceBufferAdded = {},
                    r._isLoadEnded = !1,
                    r._isPlayEnded = !1,
                    r._isWaiting = !1,
                    r._reachCanplay = !1,
                    r._jumpOverList = [],
                    r._keyframes = [],
                    r._isTracksReady = !1,
                    a.bindAll(r),
                    window.T_ADV_Timestamp = r.T_ADV_Timestamp,
                    r._config.enableJitterBuffer && (r._checkBufferTimer = setInterval(r._checkBuffer, 1e3)),
                    r._jumpOverTimer = setInterval(r._jumpOver, 200),
                    r._removeBuffer = s.throttle(r._removeBuffer, 1e3),
                    r
                }
                return o(ToMSE, e),
                ToMSE.prototype.dispose = function() {
                    if (e.prototype.dispose.call(this),
                    this._mediaSource) {
                        if ("closed" !== this._mediaSource.readyState)
                            for (var t = this._mediaSource.sourceBuffers, r = 0; r < t.length; r++) {
                                var i = t[r];
                                try {
                                    this._mediaSource.removeSourceBuffer(i)
                                } catch (e) {
                                    p.warn("remove source buffer error: ", e)
                                }
                                i.removeEventListener("updateend", this._onUpdateend)
                            }
                        if ("open" === this._mediaSource.readyState)
                            try {
                                this._mediaSource.endOfStream()
                            } catch (e) {
                                p.warn("endOfStream error: ", e)
                            }
                        this._mediaSource.removeEventListener("sourceopen", this._appendBuffer),
                        this._mediaSource = null
                    }
                    this._mediaSourceUrl && (URL.revokeObjectURL(this._mediaSourceUrl),
                    this._mediaSourceUrl = null),
                    this._sourceBufferAdded = {}
                }
                ,
                ToMSE.prototype.appendData = function(t) {
                    if (!this._destroyed) {
                        e.prototype.appendData.call(this, t);
                        var r = this._tracks[t.trackId];
                        r || (r = this._tracks[t.trackId] = []),
                        r.push(t),
                        this._isTracksReady || (this._isTracksReady = this._checkTracksReady()),
                        this._isTracksReady && this._appendBuffer()
                    }
                }
                ,
                ToMSE.prototype.appendEnd = function() {
                    if (!this._destroyed && this._mediaSource && "open" === this._mediaSource.readyState) {
                        for (var e = this._mediaSource.sourceBuffers, t = !1, r = 0; r < e.length; r++) {
                            if (e[r].updating) {
                                t = !0;
                                break
                            }
                        }
                        t || (this._mediaSource.endOfStream(),
                        p.log("media end"))
                    }
                }
                ,
                ToMSE.prototype.attach = function(e) {
                    if (this._video = e,
                    this._video.addEventListener("stalled", this._onStalled),
                    this._video.addEventListener("progress", this._onProgress),
                    this._video.addEventListener("canplay", this._onCanplay),
                    this._video.addEventListener("waiting", this._onWaiting),
                    this._video.addEventListener("ended", this._onEnded),
                    this._video.addEventListener("error", this._onMediaError),
                    !this._mediaSourceUrl) {
                        var t = this._mediaSource = new MediaSource;
                        t.addEventListener("sourceopen", this._appendBuffer),
                        this._mediaSourceUrl = URL.createObjectURL(t)
                    }
                    this._video.src = this._mediaSourceUrl
                }
                ,
                ToMSE.prototype.detach = function() {
                    this._video && (this._video.removeEventListener("stalled", this._onStalled),
                    this._video.removeEventListener("progress", this._onProgress),
                    this._video.removeEventListener("canplay", this._onCanplay),
                    this._video.removeEventListener("waiting", this._onWaiting),
                    this._video.removeEventListener("ended", this._onEnded),
                    this._video.removeEventListener("error", this._onMediaError),
                    this._video.playbackRate = 1,
                    this._video.src = "",
                    this._video.removeAttribute("src"),
                    this._video = null),
                    this._removeBuffer.cancel && this._removeBuffer.cancel(),
                    clearTimeout(this._checkStuckTimer),
                    clearInterval(this._checkBufferTimer),
                    clearInterval(this._jumpOverTimer)
                }
                ,
                ToMSE.prototype._appendBuffer = function() {
                    var e = this;
                    !this._destroyed && this._mediaSource && "open" === this._mediaSource.readyState && Object.keys(this._tracks).some(function(t) {
                        for (var r = e._tracks[t], i = [], o = e._sourceBufferAdded[t]; r.length > 0; ) {
                            var a = r[0];
                            if (!o) {
                                var n = a.config.mimeType;
                                if (!MediaSource.isTypeSupported(n))
                                    return e._onError("Unsupported MIME type or codec: " + n),
                                    !0;
                                try {
                                    p.log("add source buffer " + a.trackId + ": " + n),
                                    (o = e._mediaSource.addSourceBuffer(n)).addEventListener("updateend", e._onUpdateend),
                                    e._sourceBufferAdded[a.trackId] = o
                                } catch (t) {
                                    return e._onError("failed add more source buffer, length=" + e._mediaSource.sourceBuffers.length + ", readyState=" + e._mediaSource.readyState + "\n" + t),
                                    !0
                                }
                                return
                            }
                            if (!o || o.updating)
                                return;
                            if (a.isEnd && (e._isLoadEnded = !0),
                            a.extradata) {
                                var s = a.extradata
                                  , d = s.jumpOverTs
                                  , u = s.timeOffset
                                  , c = s.seiTimestamp
                                  , h = s.aacfil
                                  , f = s.sei
                                  , m = s.metadata;
                                if (d > 0) {
                                    var y = d / 1e3
                                      , _ = e._jumpOverList.length;
                                    if (0 === _)
                                        e._jumpOverList.push(y);
                                    else
                                        y - e._jumpOverList[_ - 1] < 1 && e._jumpOverList.pop(),
                                        e._jumpOverList.push(y);
                                    p.warn("jumpover timestamp list changed: ", JSON.stringify(e._jumpOverList))
                                }
                                u && -1 !== u && (o.timestampOffset = u / 1e3,
                                p.log("buffer time offset change: " + o.timestampOffset)),
                                c && (e.seiTimestamp = c),
                                h && e._onExtraData({
                                    type: "aacfil",
                                    ts: a.pts,
                                    data: h
                                }),
                                f && e._onExtraData({
                                    type: "sei",
                                    ts: a.pts,
                                    data: f
                                }),
                                m && (e._mediaInfo.metadata = m,
                                e._updateMediaInfo(a.config))
                            }
                            a.pts && (e.preTimestamp = a.pts),
                            "video" === a.type && a.isKeyframe && (e._keyframes.push(a.pts / 1e3),
                            e.onHasKeyframe && e.onHasKeyframe()),
                            a.data && a.data.byteLength > 0 && i.push(a.data),
                            delete a.data,
                            r.shift()
                        }
                        if (i.length > 0)
                            try {
                                o.appendBuffer(l.bufferConcat(i))
                            } catch (t) {
                                p.warn("append buffer error: ", t, e._video.error),
                                22 === t.code || e._onError("append buffer error: " + t + " " + e._video.error)
                            }
                    })
                }
                ,
                ToMSE.prototype._removeBuffer = function() {
                    if (this._video)
                        for (var e = this._video.currentTime, t = this._mediaSource.sourceBuffers, r = function(r) {
                            var o = t[r];
                            if (!o.updating) {
                                var a = o.buffered;
                                if (a.length > 0)
                                    if (a.length > 1) {
                                        var n = Math.max(a.start(0) - .1, 0)
                                          , s = a.end(0) + .1;
                                        s < e && o.remove(n, s)
                                    } else {
                                        n = Math.max(a.start(0) - .1, 0);
                                        if (e - n > i._config.videoBackTimeThreshold) {
                                            var d = e - i._config.videoBackTime;
                                            (d = i._searchNearestKeyframe(d) - 1) && d - n > 5 && (o.remove(n, d),
                                            i._keyframes = i._keyframes.filter(function(e) {
                                                return e >= d
                                            }))
                                        }
                                    }
                            }
                        }, i = this, o = 0; o < t.length; o++)
                            r(o)
                }
                ,
                ToMSE.prototype._searchNearestKeyframe = function(e) {
                    var t = this._keyframes.length;
                    if (0 === t)
                        return p.log("no keyframe info!"),
                        e;
                    if (!(e < this._keyframes[0]))
                        for (var r = 0; r < t; r++) {
                            if (e >= this._keyframes[r] && (r === t - 1 || e < this._keyframes[r + 1]))
                                return this._keyframes[r]
                        }
                }
                ,
                ToMSE.prototype._onUpdateend = function() {
                    this._removeBuffer(),
                    this._appendBuffer(),
                    this._isLoadEnded && this.appendEnd()
                }
                ,
                ToMSE.prototype._checkStart = function() {
                    var e = this._video.buffered
                      , t = this._video.currentTime;
                    if (0 === t && e.length > 0) {
                        var r = e.start(0)
                          , i = e.end(0);
                        t < r && (p.log("player start from: " + r + ", buffer end: " + i),
                        this._video.currentTime = r)
                    }
                }
                ,
                ToMSE.prototype._checkPlayStuck = function() {
                    clearTimeout(this._checkStuckTimer);
                    var e = this._video.buffered;
                    if (this._isWaiting && e.length > 0 && !this._isPlayEnded && !this._video.seeking) {
                        var t = this._video.currentTime
                          , r = e.end(e.length - 1)
                          , i = r - t;
                        if (i > 4) {
                            var o = e.start(e.length - 1)
                              , a = Math.max(this._video.currentTime + 1, o);
                            r - a > 2 && (p.warn("player stuck, force move forward: " + i + ", " + t + " -> " + a),
                            this._printBuffer(this._video.buffered),
                            this._video.currentTime = a)
                        }
                        this._checkStuckTimer = setTimeout(this._checkPlayStuck, 2e3)
                    }
                }
                ,
                ToMSE.prototype._checkBuffer = function() {
                    if (this._video) {
                        var e = this._video.buffered;
                        if (e && e.length > 0) {
                            var t = e.end(e.length - 1) - this._video.currentTime
                              , r = this._video.playbackRate
                              , i = void 0;
                            if (t < this._config.minBuffer)
                                i = this._config.slowRate;
                            else if (t < this._config.maxBuffer) {
                                var o = (this._config.minBuffer + this._config.maxBuffer) / 2;
                                r < 1 && t > o && (i = 1),
                                r > 1 && t < o && (i = 1)
                            } else
                                i = this._config.fastRate;
                            i && i !== r && (this._video.playbackRate = i,
                            p.log("playback rate change to " + i))
                        }
                    }
                }
                ,
                ToMSE.prototype._printBuffer = function(e) {
                    var t = e.length;
                    p.log("current time = " + this._video.currentTime);
                    for (var r = 0; r < t; r++)
                        p.log("buffered[" + r + "]: " + e.start(r) + " ---- " + e.end(r))
                }
                ,
                ToMSE.prototype._jumpOver = function() {
                    var e = this._jumpOverList.length;
                    if (e > 0) {
                        if (!this._video)
                            return;
                        for (var t = this._video.currentTime, r = 0; r < e; r++) {
                            var i = this._jumpOverList[r];
                            if (t > i) {
                                if (r === e - 1) {
                                    p.warn("Large gap detected, jump over " + i + ", current: " + t),
                                    this._video.currentTime += .1,
                                    this._jumpOverList.splice(0, r + 1);
                                    break
                                }
                                if (t < this._jumpOverList[r + 1]) {
                                    this._video.currentTime += .1,
                                    this._jumpOverList.splice(0, r + 1),
                                    p.warn("Large gap detected, jump over " + i + ", current: " + t);
                                    break
                                }
                            } else
                                ;
                        }
                    }
                }
                ,
                ToMSE.prototype._onStalled = function() {
                    this._checkPlayStuck()
                }
                ,
                ToMSE.prototype._onProgress = function() {
                    this._checkStart()
                }
                ,
                ToMSE.prototype._onWaiting = function() {
                    this._reachCanplay && (this._isWaiting = !0,
                    this._checkPlayStuck())
                }
                ,
                ToMSE.prototype._onCanplay = function() {
                    this._reachCanplay = !0,
                    this._isWaiting = !1,
                    this._video.removeEventListener("progress", this._onProgress)
                }
                ,
                ToMSE.prototype._onEnded = function() {
                    this._isPlayEnded = !0,
                    clearTimeout(this._checkStuckTimer)
                }
                ,
                ToMSE.prototype._onMediaError = function(e) {
                    var t = "Media Error";
                    this._video && this._video.error && (t = "code=" + this._video.error.code + ",message=" + this._video.error.message),
                    this._onError(t)
                }
                ,
                ToMSE.prototype._onError = function(e) {
                    this.onError && this.onError(new n.DyMediaError(e))
                }
                ,
                ToMSE.prototype._onExtraData = function(e) {
                    this.onExtraData && this.onExtraData(e)
                }
                ,
                ToMSE.prototype._checkTracksReady = function() {
                    var e = this
                      , t = Object.keys(this._tracks)[0];
                    if (!t)
                        return !1;
                    var r = this._tracks[t];
                    if (!r || 0 === r.length)
                        return !1;
                    var i = r[0].trackLength
                      , o = Object.keys(this._tracks).map(function(t) {
                        return e._tracks[t][0]
                    }).map(function(e) {
                        return e && e.config.mimeType
                    }).filter(function(e) {
                        return e
                    });
                    return o.length !== i ? (p.log("tracks not ready, trackLength=" + i + ", now we have [" + o.join(",") + "], waiting..."),
                    !1) : (p.log("tracks are ready, trackLength=" + i + ", now we have [" + o.join(",") + "]"),
                    !0)
                }
                ,
                ToMSE.prototype.T_ADV_Timestamp = function() {
                    if (this._video) {
                        var e = this._video;
                        if (0 == e.buffered.length)
                            return;
                        return {
                            bufferLength: e.buffered.end(0) - e.currentTime,
                            ptsTimestamp: this.preTimestamp,
                            seiTimestamp: this.seiTimestamp,
                            keyframes: this._keyframes.concat()
                        }
                    }
                }
                ,
                ToMSE
            }(d.MediaHandler);
            t.ToMSE = c
        }
        , function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }),
            t.throttle = function(e, t, r) {
                var i, o, a, n, s = 0;
                r || (r = {});
                var d = function() {
                    s = !1 === r.leading ? 0 : performance.now(),
                    i = null,
                    n = e.apply(o, a),
                    i || (o = a = null)
                }
                  , u = function() {
                    var u = performance.now();
                    s || !1 !== r.leading || (s = u);
                    var l = t - (u - s);
                    return o = this,
                    a = arguments,
                    l <= 0 || l > t ? (i && (clearTimeout(i),
                    i = null),
                    s = u,
                    n = e.apply(o, a),
                    i || (o = a = null)) : i || !1 === r.trailing || (i = setTimeout(d, l)),
                    n
                };
                return u.cancel = function() {
                    clearTimeout(i),
                    s = 0,
                    i = o = a = null
                }
                ,
                u
            }
        }
        , function(e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            });
            var i = function() {
                function MediaHandler(e) {
                    this._destroyed = !1,
                    this._mediaInfo = {
                        fps: 0,
                        width: 100,
                        height: 100,
                        audioMimeType: "",
                        videoMimeType: "",
                        audioDataRate: 0,
                        videoDataRate: 0,
                        mimeType: "",
                        metadata: {}
                    },
                    this._config = e
                }
                return MediaHandler.prototype.dispose = function() {
                    this.detach(),
                    this.onMediaInfo = void 0,
                    this.onHasKeyframe = void 0,
                    this.onExtraData = void 0,
                    this.onError = void 0,
                    this._destroyed = !0
                }
                ,
                MediaHandler.prototype.appendData = function(e) {
                    this._destroyed || "CFG" === e.flag && this._updateMediaInfo(e.config)
                }
                ,
                MediaHandler.prototype._updateMediaInfo = function(e) {
                    "audio" === e.type && (void 0 !== e.dataRate && (this._mediaInfo.audioDataRate = e.dataRate),
                    this._mediaInfo.audioMimeType = e.mimeType),
                    "video" === e.type && (void 0 !== e.dataRate && (this._mediaInfo.videoDataRate = e.dataRate),
                    this._mediaInfo.videoMimeType = e.mimeType,
                    this._mediaInfo.fps = e.fps,
                    this._mediaInfo.width = e.codecWidth,
                    this._mediaInfo.height = e.codecHeight),
                    this._mediaInfo.mimeType = [this._mediaInfo.audioMimeType, this._mediaInfo.videoMimeType].filter(function(e) {
                        return e
                    }).join(","),
                    this.onMediaInfo(this._mediaInfo)
                }
                ,
                MediaHandler
            }();
            t.MediaHandler = i
        }
        ])
    },
    a9aad: function(e, t, r) {
        e.exports = {
            videoContainer: "_3ZYUK0Gs39NKdRXHu7ok_k",
            video: "_2HUt2doZ86wOVgnO3O641n",
            screenshot: "jQtGHdq7S8qaVOaYlmyW5",
            mask1: "_1DuJNXB5Do4tFJDnNBIwl1",
            autoPlayImg: "LHL5lhn1jBO4lxwZJZ9ji",
            jumpdetail: "_20JhvNfhXCfurtEh1iGaxV"
        }
    },
    e55c4: function(e, t, r) {
        e.exports = r("2e0bc")("e55c4")
    },
    f8ab5: function(e, t, r) {
        e.exports = {
            videoContainer: "_1GyzL9trVIbYlAVmuA9KJ1",
            video: "_3kBBGV3-d-EIxmN6JRZPar",
            screenshot: "_1Osm4fzGmcuRK9M8IVy3u6"
        }
    }
});
//# sourceMappingURL=http://fedci.dz11.com:4567/player_first/online/sourcemaps/h5_video_0d65ef8.js.map
